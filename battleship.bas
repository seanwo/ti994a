100 CALL CLEAR
110 CALL SCREEN(4)
120 RANDOMIZE
130 DIM SHIPS(1,4,4) :: REM SHIPS[PLAYER,SHIP,LOC]
140 CALL SETCHARS
150 CALL SETCOLORSCHEME
160 REM LABEL ***GAMELOOP***
170 CALL RENDERBOARDS
180 CALL DEPLOYSHIPS(SHIPS(,,))
190 CALL PLAYGAME(SHIPS(,,))
200 GOTO 160 :: REM GOTO GAMELOOP
210 END
220 REM SUBROUTINE ***SETCHARS***
230 SUB SETCHARS
240 CALL GETHOLECHAR(HOLECHAR)
250 CALL CHAR(HOLECHAR,"3C4299A5A599423C")
260 CALL GETFILLCHAR(FILLCHAR)
270 CALL CHAR(FILLCHAR,"0000000000000000")
280 CALL GETHITCHAR(HITCHAR)
290 CALL CHAR(HITCHAR,"3C7EFFFFFFFF7E3C")
300 CALL GETSHIPCHAR(SHIPCHAR)
310 CALL CHAR(SHIPCHAR,"3C4299A5A599423C")
320 CALL GETTENCHAR(TENCHAR)
330 CALL CHAR(TENCHAR,"004FC949494949EF")
340 CALL GETMISSCHAR(MISSCHAR)
350 CALL CHAR(MISSCHAR,"3C7EFFFFFFFF7E3C")
360 CALL GETSUNKCHAR(SUNKCHAR)
370 CALL CHAR(SUNKCHAR,"3C7EFFFFFFFF7E3C") 
380 SUBEND
390 REM SUBROUTINE ***SETCOLORSCHEME***
400 SUB SETCOLORSCHEME
410 CALL COLOR(9,2,8) :: REM BLACK ON CYAN
420 CALL COLOR(10,11,8) :: REM DARK YELLOW ON CYAN
430 CALL COLOR(11,2,15) :: REM BLACK ON GREY
440 CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
450 CALL COLOR(13,16,8) :: REM WHITE ON CYAN
460 CALL COLOR(14,9,8) :: REM MED RED ON CYAN
470 SUBEND
480 REM SUBROUTINE ***DEPLOYSHIPS***
490 SUB DEPLOYSHIPS(SHIPS(,,))
500 CALL DELOYPLAYER(SHIPS(,,))
510 CALL DEPLOYCOMPUTER(0,SHIPS(,,))
520 SUBEND
530 REM SUBROUTINE ***DELOYPLAYER***
540 SUB DELOYPLAYER(SHIPS(,,))
550 CALL GETNUMSHIPS(NUMSHIPS)
560 AUTODEPLOY$="N"
570 CALL MENUAUTODEPLOY(AUTODEPLOY$)
580 IF AUTODEPLOY$="Y" THEN CALL DEPLOYAUTO(SHIPS(,,)) ELSE CALL DEPLOYMANUAL(SHIPS(,,))
590 CALL RENDERSHIPSAUX(SHIPS(,,))
600 CALL RENDERHOLES
610 CALL MENUDEPLOYING
620 SUBEND
630 REM SUBROUTINE ***DEPLOYAUTO***
640 SUB DEPLOYAUTO(SHIPS(,,))
650 CALL GETMENUORIG(ROW,COL)
660 CALL RENDERTEXT("AUTO",(ROW+6),(COL))
670 CALL RENDERTEXT("DEPLOYING",(ROW+7),(COL))
680 CALL RENDERTEXT("SHIPS...",(ROW+8),(COL))
690 CALL DEPLOYCOMPUTER(1,SHIPS(,,))
700 CALL GETNUMSHIPS(NUMSHIPS)
710 FOR I=0 TO NUMSHIPS-1
720 CALL GETSHIPLEN(SHIPLEN,(I))
730 FOR J=0 TO SHIPLEN-1
740 SHIPS(0,I,J)=SHIPS(1,I,J)
750 NEXT J
760 NEXT I
770 SUBEND
780 REM SUBROUTINE ***DEPLOYMANUAL***
790 SUB DEPLOYMANUAL(SHIPS(,,))
800 CALL MENUCLEAR
810 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
820 CALL GETNUMSHIPS(NUMSHIPS)
830 FOR CURRENTSHIP=0 TO NUMSHIPS-1
840 REM LABEL ***DEPLOYMANSHIP***
850 CALL MENUDEPLOY((CURRENTSHIP))
860 CALL INPUTSHIP(SHIP(),(CURRENTSHIP))
870 PLAYER=0
880 SHIPERR=0
890 CALL CHECKVALIDSHIP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
900 IF SHIPERR=1 THEN 840 :: REM GOTO DEPLOYMANSHIP
910 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
920 FOR I=0 TO SHIPLEN-1
930 SHIPS(0,CURRENTSHIP,I)=SHIP(I)
940 NEXT I
950 CALL RENDERSHIP((CURRENTSHIP),SHIP())
960 NEXT CURRENTSHIP
970 SUBEND
980 REM SUBROUTINE ***DEPLOYCOMPUTER***
990 SUB DEPLOYCOMPUTER(VISIBLE,SHIPS(,,))
1000 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
1010 CALL GETNUMSHIPS(NUMSHIPS)
1020 CALL GETBOARDORIG(ROW,COL)
1030 CALL GETSHIPCHAR(SHIPCHAR)
1040 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1050 REM LABEL ***DEPLOYCOMPSHIP***
1060 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1070 HORIZONTAL=INT(RND*2)
1080 SHIPBEGIN=INT(RND*(10-SHIPLEN))+1
1090 STATIC=INT(RND*10)+1
1100 FOR I=0 TO SHIPLEN-1
1110 IF HORIZONTAL=1 THEN SHIP(I)=16*STATIC+SHIPBEGIN+I ELSE SHIP(I)=16*(SHIPBEGIN+I)+STATIC
1120 NEXT I
1130 PLAYER=1
1140 SHIPERR=0
1150 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1160 IF SHIPERR=1 THEN 1050 :: REM GOTO DEPLOYCOMPSHIP
1170 FOR I=0 TO SHIPLEN-1
1180 SHIPS(1,CURRENTSHIP,I)=SHIP(I)
1190 NEXT I
1200 CALL GETDEBUGFLAG(DEBUG)
1210 IF DEBUG=1 THEN VISIBLE=1
1220 IF VISIBLE=1 THEN CALL RENDERSHIP((CURRENTSHIP),SHIP())
1230 NEXT CURRENTSHIP
1240 SUBEND
1250 REM SUBROUTINE ***PLAYGAME***
1260 SUB PLAYGAME(SHIPS(,,))
1270 CALL MENUCLEAR
1280 CALL MENUTARGET
1290 DIM SHOTS(1,9,9) :: REM SHOTS[PLAYER, ROW,COL]
1300 FOR I=0 TO 9 :: FOR J=0 TO 9 :: SHOTS(0,I,J)=0 :: SHOTS(1,I,J)=0 :: NEXT J :: NEXT I
1310 DIM HITSLEFT(1,4) :: REM HITS[PLAYER,SHIP]
1320 CALL GETNUMSHIPS(NUMSHIPS)
1330 FOR I=0 TO NUMSHIPS-1
1340 CALL GETSHIPLEN(SHIPLEN,I)
1350 HITSLEFT(0,I)=SHIPLEN :: HITSLEFT(1,I)=SHIPLEN
1360 NEXT I
1370 DIM SHIPSLEFT(1) :: REM SHIPSLEFT[PLAYER]
1380 SHIPSLEFT(0)=NUMSHIPS :: SHIPSLEFT(1)=NUMSHIPS
1390 WINNER=-1
1400 PLAYER=0
1410 REM LABEL ***TURNLOOP***
1420 CALL TAKETURN(ROW,COL,(PLAYER))
1430 ERRORVAL=0
1440 CALL CHECKVALIDSHOT(ERRORVAL,(ROW),(COL),(PLAYER),SHOTS(,,))
1450 IF ERRORVAL=1 THEN 1410 :: REM GOTO TURNLOOP
1460 SHOTS(PLAYER,ROW-1,COL-1)=1
1470 CALL PROCESSSHOT(WINNER,(ROW),(COL),(PLAYER),HITSLEFT(,),SHIPSLEFT(),SHIPS(,,))
1480 IF WINNER=0 OR WINNER=1 THEN 1510 :: REM GOTO GAMEOVER
1490 PLAYER=1-PLAYER
1500 GOTO 1410 :: REM GOTO TURNLOOP
1510 REM LABEL ***GAMEOVER***
1520 PLAYAGAIN$="N"
1530 CALL MENUGAMEOVER(PLAYAGAIN$,(WINNER))
1540 IF PLAYAGAIN$="Y" THEN 1570 :: REM GOTO PLAYGAME.SUBEND
1550 CALL CLEAR
1560 END
1570 SUBEND
1580 REM SUBROUTINE ***TAKETURN***
1590 SUB TAKETURN(ROW,COL,PLAYER)
1600 IF PLAYER=0 THEN CALL PLAYERTURN(ROW,COL) ELSE CALL COMPUTERTURN(ROW,COL)
1610 SUBEND
1620 REM SUBROUTINE ***PLAYERTURN***
1630 SUB PLAYERTURN(ROW,COL)
1640 CALL INPUTTARGET(ROW$,COL)
1650 ROW=ASC(ROW$)-64
1660 SUBEND
1670 REM SUBROUTINE ***COMPUTERTURN***
1680 SUB COMPUTERTURN(ROW,COL)
1690 ROW=INT(RND*10)+1 :: COL=INT(RND*10)+1
1700 CALL GETMENUORIG(MROW,MCOL)
1710 TEXT$=CHR$(64+ROW)&STR$(COL)
1720 CALL HCHAR(MROW+8,MCOL,32,10)
1730 CALL RENDERTEXT(TEXT$,MROW+8,MCOL)
1740 SUBEND
1750 REM SUBROUTINE ***PROCESSSHOT***
1760 SUB PROCESSSHOT(WINNER,ROW,COL,PLAYER,HITSLEFT(,),SHIPSLEFT(),SHIPS(,,))
1770 WINNER=-1 :: HIT=0 :: SHIP=0
1780 LOC=16*ROW+COL
1790 CALL CHECKHIT(HIT,SHIP,(LOC),(1-PLAYER),SHIPS(,,))
1800 CALL RENDERSHOT((PLAYER),(HIT),(ROW),(COL))
1810 IF HIT=0 THEN 1870 :: REM GOTO PROCESSSHOT.SUBEND
1820 HITSLEFT(1-PLAYER,SHIP)=HITSLEFT(1-PLAYER,SHIP)-1
1830 IF HITSLEFT(1-PLAYER,SHIP)>0 THEN 1870 :: REM GOTO PROCESSSHOT.SUBEND
1840 SHIPSLEFT(1-PLAYER)=SHIPSLEFT(1-PLAYER)-1
1850 CALL RENDERSUNK((1-PLAYER),(SHIP),SHIPS(,,))
1860 IF SHIPSLEFT(1-PLAYER)=0 THEN WINNER=PLAYER
1870 SUBEND
1880 REM SUBROUTINE ***RENDERTEXT***
1890 SUB RENDERTEXT(TEXT$,ROW,COL)
1900 STRLEN=LEN(TEXT$)
1910 FOR I=0 TO STRLEN-1
1920 C$=SEG$(TEXT$,I+1,1)
1930 CALL HCHAR(ROW,COL+I,ASC(C$))
1940 NEXT I
1950 SUBEND
1960 REM SUBROUTINE ***RENDERBOARDS***
1970 SUB RENDERBOARDS
1980 CALL CLEAR
1990 DISPLAY AT(1,9):"BATTLESHIP"
2000 CALL RENDERBOARD
2010 CALL RENDERAUX
2020 SUBEND
2030 REM SUBROUTINE ***RENDERBOARD***
2040 SUB RENDERBOARD
2050 CALL RENDERBACKBOARD
2060 CALL RENDERAXES
2070 CALL RENDERHOLES
2080 SUBEND
2090 REM SUBROUTINE ***RENDERBACKBOARD***
2100 SUB RENDERBACKBOARD
2110 CALL GETBOARDORIG(ROW,COL)
2120 CALL GETFILLCHAR(FILLCHAR)
2130 FOR I=0 TO 18
2140 CALL HCHAR(ROW+I,COL,FILLCHAR,19)
2150 NEXT I
2160 SUBEND
2170 REM SUBROUTINE ***RENDERHOLES***
2180 SUB RENDERHOLES
2190 CALL GETBOARDORIG(ROW,COL)
2200 CALL GETHOLECHAR(HOLECHAR)
2210 FOR I=0 TO 18 STEP 2
2220 FOR J=0 TO 18 STEP 2
2230 CALL HCHAR(ROW+I,COL+J,HOLECHAR,1)
2240 NEXT J
2250 NEXT I
2260 SUBEND
2270 REM SUBROUTINE ***RENDERAXES***
2280 SUB RENDERAXES
2290 CALL GETBOARDORIG(ROW,COL)
2300 CALL GETTENCHAR(TENCHAR)
2310 REM RENDER X-AXIS (NUMBERS)
2320 FOR I=0 TO 8
2330 CALL HCHAR(ROW-2,I*2+COL,49+I,1)
2340 NEXT I
2350 CALL HCHAR(ROW-2,COL+18,TENCHAR,1)
2360 REM RENDER Y-AXIS (LETTERS)
2370 FOR I=1 TO 10
2380 CALL HCHAR(ROW-2+I*2,COL-2,64+I,1)
2390 NEXT I
2400 SUBEND
2410 REM SUBROUTINE ***RENDERAUX***
2420 SUB RENDERAUX
2430 CALL GETAUXORIG(ROW,COL)
2440 CALL GETHOLECHAR(HOLECHAR)
2450 FOR I=0 TO 9
2460 CALL HCHAR(ROW+I,COL,HOLECHAR,10)
2470 NEXT I
2480 SUBEND
2490 REM SUBROUTINE ***RENDERSHIP***
2500 SUB RENDERSHIP(CURRENTSHIP,SHIP())
2510 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
2520 CALL GETSHIPCHAR(SHIPCHAR)
2530 CALL GETBOARDORIG(ROW,COL)
2540 FOR I=0 TO SHIPLEN-1
2550 COFFSET=SHIP(I)-INT(SHIP(I)/16)*16 :: ROFFSET=INT(SHIP(I)/16)
2560 CALL HCHAR(ROW+(ROFFSET-1)*2,COL+(COFFSET-1)*2,SHIPCHAR,1)
2570 NEXT I
2580 SUBEND
2590 REM SUBROUTINE ***RENDERSHIPSAUX***
2600 SUB RENDERSHIPSAUX(SHIPS(,,))
2610 CALL GETNUMSHIPS(NUMSHIPS)
2620 CALL GETAUXORIG(ROW,COL)
2630 CALL GETSHIPCHAR(SHIPCHAR)
2640 FOR I=0 TO NUMSHIPS-1
2650 CALL GETSHIPLEN(SHIPLEN,(I))
2660 FOR J=0 TO SHIPLEN-1
2670 COFFSET=SHIPS(0,I,J)-INT(SHIPS(0,I,J)/16)*16 :: ROFFSET=INT(SHIPS(0,I,J)/16)
2680 CALL HCHAR(ROW+ROFFSET-1,COL+COFFSET-1,SHIPCHAR,1)
2690 NEXT J
2700 NEXT I
2710 SUBEND
2720 REM SUBROUTINE ***RENDERSHOT***
2730 SUB RENDERSHOT(PLAYER,HIT,SROW,SCOL)
2740 CALL GETMENUORIG(ROW,COL)
2750 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
2760 IF HIT=0 THEN TEXT$="MISS" :: NOISE=-3 ELSE TEXT$="HIT" :: NOISE=-8
2770 CALL HCHAR(ROW,COL,32,10)
2780 CALL RENDERTEXT((TEXT$),(ROW),(COL))
2790 IF HIT=1 THEN CALL GETHITCHAR(CHARVAL) ELSE CALL GETMISSCHAR(CHARVAL)
2800 IF PLAYER=1 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
2810 TROW=SROW-1 :: TCOL=SCOL-1
2820 IF PLAYER=0 THEN TROW=TROW*2 :: TCOL=TCOL*2
2830 CALL HCHAR(ROW+TROW,COL+TCOL,CHARVAL,1)
2840 CALL SOUND(500,NOISE,2) :: CALL SOUND(1,110,30)
2850 SUBEND
2860 REM SUBROUTINE ***RENDERSUNK***
2870 SUB RENDERSUNK(PLAYER,SHIP,SHIPS(,,))
2880 CALL GETSHIPLEN(SHIPLEN,(SHIP))
2890 IF PLAYER=0 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
2900 CALL GETSUNKCHAR(SUNKCHAR)
2910 FOR I=0 TO SHIPLEN-1
2920 LOC=SHIPS(PLAYER,SHIP,I)
2930 TROW=INT(LOC/16)-1 :: TCOL=LOC-INT(LOC/16)*16-1
2940 IF PLAYER=1 THEN TROW=TROW*2 :: TCOL=TCOL*2
2950 CALL HCHAR(ROW+TROW,COL+TCOL,SUNKCHAR,1)
2960 NEXT I
2970 CALL GETSHIPNAME(SHIPNAME$,SHIP)
2980 CALL GETMENUORIG(ROW,COL)
2990 IF PLAYER=1 THEN ROW=ROW+4 ELSE ROW=ROW+9
3000 CALL HCHAR(ROW,COL,32,10)
3010 CALL RENDERTEXT("DESTROYED",(ROW),(COL))
3020 CALL HCHAR(ROW,COL,32,10)
3030 CALL RENDERTEXT((SHIPNAME$),(ROW),(COL))
3040 CALL SOUND(1000,-6,2) :: CALL SOUND(1,110,30)
3050 SUBEND
3060 REM SUBROUTINE ***MENUCLEAR***
3070 SUB MENUCLEAR
3080 CALL GETMENUORIG(ROW,COL)
3090 FOR I=0 TO 9 :: CALL HCHAR(ROW+I,COL,32,10) :: NEXT I
3100 SUBEND
3110 REM SUBROUTINE ***MENUAUTODEPLOY***
3120 SUB MENUAUTODEPLOY(AUTODEPLOY$)
3130 CALL GETMENUORIG(ROW,COL)
3140 CALL MENUCLEAR
3150 CALL RENDERTEXT("AUTO",(ROW),(COL))
3160 CALL RENDERTEXT("DEPLOY",(ROW+1),(COL))
3170 CALL RENDERTEXT("YOUR",(ROW+2),(COL))
3180 CALL RENDERTEXT("SHIPS?",(ROW+3),(COL))
3190 CALL RENDERTEXT("[Y/N]:",(ROW+4),(COL))
3200 ACCEPT AT(ROW+4,COL+4)VALIDATE("YN")BEEP SIZE(1):AUTODEPLOY$
3210 SUBEND
3220 REM SUBROUTINE ***MENUDEPLOY***
3230 SUB MENUDEPLOY(CURRENTSHIP)
3240 CALL GETMENUORIG(ROW,COL)
3250 CALL RENDERTEXT("INPUT THE",(ROW),(COL))
3260 CALL RENDERTEXT("LOCATIONS",(ROW+1),(COL))
3270 CALL RENDERTEXT("FOR YOUR",(ROW+2),(COL))
3280 CALL RENDERTEXT("          ",(ROW+3),(COL))
3290 CALL GETSHIPNAME(SHIPNAME$,(CURRENTSHIP))
3300 CALL RENDERTEXT((SHIPNAME$),(ROW+3),(COL))
3310 CALL RENDERTEXT("[IE. C3]:",(ROW+4),(COL))
3320 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3330 FOR I=1 TO 5
3340 IF I>SHIPLEN THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
3350 CALL RENDERTEXT((TEXT$),(ROW+4+I),(COL))
3360 NEXT I
3370 SUBEND
3380 REM SUBROUTINE ***MENUTARGET***
3390 SUB MENUTARGET
3400 CALL GETMENUORIG(ROW,COL)
3410 CALL RENDERTEXT("PLAYER",(ROW),(COL))
3420 CALL RENDERTEXT("TARGET",(ROW+1),(COL))
3430 CALL RENDERTEXT("[IE. C3]",(ROW+2),(COL))
3440 CALL RENDERTEXT("COMPUTER",(ROW+6),(COL))
3450 CALL RENDERTEXT("TARGET",(ROW+7),(COL))
3460 SUBEND
3470 REM SUBROUTINE ***MENUDEPLOYING***
3480 SUB MENUDEPLOYING
3490 CALL GETMENUORIG(ROW,COL)
3500 CALL MENUCLEAR
3510 CALL RENDERTEXT("PLAYER'S",(ROW),(COL))
3520 CALL RENDERTEXT("SHIPS",(ROW+1),(COL))
3530 CALL RENDERTEXT("DEPLOYED.",(ROW+2),(COL))
3540 CALL RENDERTEXT("COMPUTER",(ROW+4),(COL))
3550 CALL RENDERTEXT("DEPLOYING",(ROW+5),(COL))
3560 CALL RENDERTEXT("SHIPS...",(ROW+6),(COL))
3570 SUBEND
3580 REM SUBROUTINE ***MENUGAMEOVER***
3590 SUB MENUGAMEOVER(PLAYAGAIN$,WINNER)
3600 CALL GETMENUORIG(ROW,COL)
3610 CALL MENUCLEAR
3620 CALL RENDERTEXT("GAME OVER",(ROW),(COL))
3630 CALL RENDERTEXT("WINNER:",(ROW+1),(COL))
3640 IF WINNER=0 THEN TEXT$="PLAYER" ELSE TEXT$="COMPUTER"
3650 CALL RENDERTEXT(TEXT$,(ROW+2),(COL))
3660 CALL RENDERTEXT("PLAY", (ROW+4),(COL))
3670 CALL RENDERTEXT("AGAIN?",(ROW+5),(COL))
3680 CALL RENDERTEXT("[Y/N]:",(ROW+6),(COL))
3690 ACCEPT AT(ROW+6,COL+4)VALIDATE("YN")BEEP SIZE(1):PLAYAGAIN$
3700 SUBEND
3710 REM SUBROUTINE ***INPUTPOS***
3720 SUB INPUTPOS(ROW,COL,INPUTROW$,INPUTCOL)
3730 ON WARNING NEXT
3740 REM LABEL ***GETROW***
3750 ACCEPT AT(ROW,COL-2)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):INPUTROW$
3760 IF INPUTROW$="" THEN  3740 :: REM GOTO GETROW
3770 REM LABEL ***GETCOL***
3780 ACCEPT AT(ROW,COL-2+1)VALIDATE(DIGIT)BEEP SIZE(2):INPUTCOL
3790 IF INPUTCOL>10 THEN  3770 :: REM GOTO GETCOL
3800 IF INPUTCOL<1 THEN  3770 :: REM GOTO GETCOL
3810 ON WARNING PRINT
3820 SUBEND
3830 REM SUBROUTINE ***INPUTSHIP***
3840 SUB INPUTSHIP(SHIP(),CURRENTSHIP)
3850 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3860 CALL GETMENUORIG(ROW,COL)
3870 FOR I=0 TO SHIPLEN-1
3880 INPUTROW$="" :: INPUTCOL=0
3890 CALL INPUTPOS((ROW+5+I),(COL+5),INPUTROW$,INPUTCOL)
3900 SHIP(I)=16*(ASC(INPUTROW$)-64)+INPUTCOL
3910 NEXT I
3920 SUBEND
3930 REM SUBROUTINE ***INPUTTARGET***
3940 SUB INPUTTARGET(TARGETROW$,TARGETCOL)
3950 CALL GETMENUORIG(ROW,COL)
3960 CALL HCHAR(ROW+3,COL,32,10)
3970 CALL INPUTPOS((ROW+3),(COL),TARGETROW$,TARGETCOL)
3980 SUBEND
3990 REM SUBROUTINE ***CHECKVALIDSHIP***
4000 SUB CHECKVALIDSHIP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4010 SHIPERR=0
4020 HORIZONTAL=0
4030 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4040 CALL CHECKHORIZONTAL(HORIZONTAL,(CURRENTSHIP),SHIP())
4050 DIM SEQUENCE(4) :: FOR I=0 TO 4 :: SEQUENCE(I)=0 :: NEXT I
4060 FOR I=0 TO SHIPLEN-1
4070 COL=SHIP(I)-INT(SHIP(I)/16)*16 :: ROW=INT(SHIP(I)/16)
4080 IF HORIZONTAL=1 THEN SEQUENCE(I)=COL ELSE SEQUENCE(I)=ROW
4090 NEXT I
4100 CALL CHECKSEQUENTIAL(SHIPERR,(CURRENTSHIP),SEQUENCE())
4110 IF SHIPERR=1 THEN 4130 :: REM SUBEND
4120 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
4130 SUBEND
4140 REM SUBROUTINE ***CHECKVALIDSHOT***
4150 SUB CHECKVALIDSHOT(ERRORVAL,ROW,COL,PLAYER,SHOTS(,,))
4160 ERRORVAL=0
4170 IF SHOTS(PLAYER,ROW-1,COL-1)<>0 THEN ERRORVAL=1
4180 SUBEND
4190 REM SUBROUTINE ***CHECKHIT***
4200 SUB CHECKHIT(HIT,SHIP,LOC,PLAYER,SHIPS(,,))
4210 HIT=0
4220 CALL GETNUMSHIPS(NUMSHIPS)
4230 FOR I=0 TO NUMSHIPS-1
4240 CALL GETSHIPLEN(SHIPLEN,(I))
4250 FOR J=0 TO SHIPLEN-1
4260 IF SHIPS(PLAYER,I,J)=LOC THEN HIT=1 :: SHIP=I :: GOTO 4290 :: REM SUBEND
4270 NEXT J
4280 NEXT I
4290 SUBEND
4300 REM SUBROUTINE ***CHECKHORIZONTAL***
4310 SUB CHECKHORIZONTAL(HORIZONTAL,CURRENTSHIP,SHIP())
4320 HORIZONTAL=0
4330 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4340 FOR I=1 TO SHIPLEN-1
4350 PREV=INT(SHIP(I-1)/16) :: CURR=INT(SHIP(I)/16)
4360 IF PREV<>CURR THEN 4390 :: REM SUBEND
4370 NEXT I
4380 HORIZONTAL=1
4390 SUBEND
4400 REM SUBROUTINE ***CHECKSEQUENTIAL***
4410 SUB CHECKSEQUENTIAL(SHIPERR,CURRENTSHIP,SEQUENCE())
4420 SHIPERR=0
4430 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4440 MINCOORD=SEQUENCE(0)
4450 FOR I=1 TO SHIPLEN-1
4460 MINCOORD=MIN(MINCOORD,SEQUENCE(I))
4470 NEXT I
4480 EXPSUM=MINCOORD
4490 FOR I=1 TO SHIPLEN-1
4500 EXPSUM=EXPSUM+MINCOORD+I
4510 NEXT I
4520 ACTSUM=SEQUENCE(0)
4530 FOR I=1 TO SHIPLEN-1
4540 ACTSUM=ACTSUM+SEQUENCE(I)
4550 NEXT I
4560 IF EXPSUM<>ACTSUM THEN SHIPERR=1
4570 SUBEND
4580 REM SUBROUTINE ***CHECKOVERLAP***
4590 SUB CHECKOVERLAP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4600 SHIPERR=0
4610 CALL GETSHIPLEN(CURRENTSHIPLEN,(CURRENTSHIP))
4620 FOR I=0 TO CURRENTSHIP-1
4630 CALL GETSHIPLEN(SHIPLEN,(I))
4640 FOR J=0 TO SHIPLEN-1
4650 STOREDLOC=SHIPS(PLAYER,I,J)
4660 FOR K=0 TO CURRENTSHIPLEN-1
4670 LOC=SHIP(K)
4680 IF LOC=STOREDLOC THEN SHIPERR=1 :: GOTO 4720 :: REM SUBEND
4690 NEXT K
4700 NEXT J
4710 NEXT I
4720 SUBEND
4730 REM SUBROUTINE ***GETHOLECHAR***
4740 SUB GETHOLECHAR(CHARVAL)
4750 CHARVAL=96
4760 SUBEND
4770 REM SUBROUTINE ***GETFILLCHAR***
4780 SUB GETFILLCHAR(CHARVAL)
4790 CHARVAL=97
4800 SUBEND
4810 REM SUBROUTINE ***GETHITCHAR***
4820 SUB GETHITCHAR(CHARVAL)
4830 CHARVAL=104
4840 SUBEND
4850 REM SUBROUTINE ***GETSHIPCHAR***
4860 SUB GETSHIPCHAR(CHARVAL)
4870 CHARVAL=112
4880 SUBEND
4890 REM SUBROUTINE ***GETTENCHAR***
4900 SUB GETTENCHAR(CHARVAL)
4910 CHARVAL=120
4920 SUBEND
4930 REM SUBROUTINE ***GETMISSCHAR***
4940 SUB GETMISSCHAR(CHARVAL)
4950 CHARVAL=128
4960 SUBEND
4970 REM SUBROUTINE ***GETSUNKCHAR***
4980 SUB GETSUNKCHAR(CHARVAL)
4990 CHARVAL=136
5000 SUBEND
5010 REM SUBROUTINE ***GETNUMSHIPS***
5020 SUB GETNUMSHIPS(NUMSHIPS)
5030 NUMSHIPS=5
5040 SUBEND
5050 REM SUBROUTINE ***GETSHIPLEN***
5060 SUB GETSHIPLEN(SHIPLEN,INDEX)
5070 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
5080 SHIPLEN=SHIPLENS(INDEX)
5090 SUBEND
5100 REM SUBROUTINE ***GETSHIPNAME***
5110 SUB GETSHIPNAME(SHIPNAME$,INDEX)
5120 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
5130 SHIPNAME$=SHIPNAMES$(INDEX)
5140 SUBEND
5150 REM SUBROUTINE ***GETBOARDORIG***
5160 SUB GETBOARDORIG(ROW,COL)
5170 ROW=5 :: COL=3
5180 SUBEND
5190 REM SUBROUTINE ***GETAUXORIG***
5200 SUB GETAUXORIG(ROW,COL)
5210 ROW=3 :: COL=23
5220 SUBEND
5230 REM SUBROUTINE ***GETMENUORIG***
5240 SUB GETMENUORIG(ROW,COL)
5250 ROW=14 :: COL=23
5260 SUBEND
5270 REM SUBROUTINE ***GETDEBUGFLAG***
5280 SUB GETDEBUGFLAG(DEBUG)
5290 DEBUG=1
5300 SUBEND