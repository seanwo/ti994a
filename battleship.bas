100 REM COPYRIGHT (C) 1987-2023 SEAN WOHLGEMUTH
110 REM ::
120 REM THIS PROGRAM IS FREE SOFTWARE: YOU CAN REDISTRIBUTE IT AND/OR MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE
130 REM AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION, EITHER VERSION 3 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER VERSION.
140 REM ::
150 REM THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY
160 REM OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
170 REM ::
180 REM YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE ALONG WITH THIS PROGRAM. IF NOT, SEE
190 REM <HTTPS://WWW.GNU.ORG/LICENSES/>.
200 REM ::
210 CALL CLEAR
220 CALL SCREEN(4)
230 RANDOMIZE
240 DIM SHIPS(1,4,4) :: REM SHIPS[PLAYER,SHIP,LOC]
250 CALL SETCHARS
260 CALL SETCOLORSCHEME
270 REM LABEL ***GAMELOOP***
280 CALL RENDERBOARDS
290 CALL DEPLOYSHIPS(SHIPS(,,))
300 CALL PLAYGAME(SHIPS(,,))
310 GOTO 270 :: REM GOTO GAMELOOP
320 END
330 REM SUBROUTINE ***SETCHARS***
340 SUB SETCHARS
350 CALL GETHOLECHAR(HOLECHAR)
360 CALL CHAR(HOLECHAR,"3C4299A5A599423C")
370 CALL GETFILLCHAR(FILLCHAR)
380 CALL CHAR(FILLCHAR,"0000000000000000")
390 CALL GETHITCHAR(HITCHAR)
400 CALL CHAR(HITCHAR,"3C7EFFFFFFFF7E3C")
410 CALL GETSHIPCHAR(SHIPCHAR)
420 CALL CHAR(SHIPCHAR,"3C4299A5A599423C")
430 CALL GETTENCHAR(TENCHAR)
440 CALL CHAR(TENCHAR,"004FC949494949EF")
450 CALL GETMISSCHAR(MISSCHAR)
460 CALL CHAR(MISSCHAR,"3C7EFFFFFFFF7E3C")
470 CALL GETSUNKCHAR(SUNKCHAR)
480 CALL CHAR(SUNKCHAR,"3C7EFFFFFFFF7E3C") 
490 SUBEND
500 REM SUBROUTINE ***SETCOLORSCHEME***
510 SUB SETCOLORSCHEME
520 CALL COLOR(9,2,8) :: REM BLACK ON CYAN
530 CALL COLOR(10,11,8) :: REM DARK YELLOW ON CYAN
540 CALL COLOR(11,2,15) :: REM BLACK ON GREY
550 CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
560 CALL COLOR(13,16,8) :: REM WHITE ON CYAN
570 CALL COLOR(14,9,8) :: REM MED RED ON CYAN
580 SUBEND
590 REM SUBROUTINE ***DEPLOYSHIPS***
600 SUB DEPLOYSHIPS(SHIPS(,,))
610 CALL DELOYPLAYER(SHIPS(,,))
620 CALL DEPLOYCOMPUTER(0,SHIPS(,,))
630 SUBEND
640 REM SUBROUTINE ***DELOYPLAYER***
650 SUB DELOYPLAYER(SHIPS(,,))
660 CALL GETNUMSHIPS(NUMSHIPS)
670 AUTODEPLOY$="N"
680 CALL MENUAUTODEPLOY(AUTODEPLOY$)
690 IF AUTODEPLOY$="Y" THEN CALL DEPLOYAUTO(SHIPS(,,)) ELSE CALL DEPLOYMANUAL(SHIPS(,,))
700 CALL RENDERSHIPSAUX(SHIPS(,,))
710 CALL RENDERHOLES
720 CALL MENUDEPLOYING
730 SUBEND
740 REM SUBROUTINE ***DEPLOYAUTO***
750 SUB DEPLOYAUTO(SHIPS(,,))
760 CALL GETMENUORIG(ROW,COL)
770 CALL RENDERTEXT("AUTO",(ROW+6),(COL))
780 CALL RENDERTEXT("DEPLOYING",(ROW+7),(COL))
790 CALL RENDERTEXT("SHIPS...",(ROW+8),(COL))
800 CALL DEPLOYCOMPUTER(1,SHIPS(,,))
810 CALL GETNUMSHIPS(NUMSHIPS)
820 FOR I=0 TO NUMSHIPS-1
830 CALL GETSHIPLEN(SHIPLEN,(I))
840 FOR J=0 TO SHIPLEN-1
850 SHIPS(0,I,J)=SHIPS(1,I,J)
860 NEXT J
870 NEXT I
880 SUBEND
890 REM SUBROUTINE ***DEPLOYMANUAL***
900 SUB DEPLOYMANUAL(SHIPS(,,))
910 CALL MENUCLEAR
920 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
930 CALL GETNUMSHIPS(NUMSHIPS)
940 FOR CURRENTSHIP=0 TO NUMSHIPS-1
950 REM LABEL ***DEPLOYMANSHIP***
960 CALL MENUDEPLOY((CURRENTSHIP))
970 CALL INPUTSHIP(SHIP(),(CURRENTSHIP))
980 PLAYER=0
990 SHIPERR=0
1000 CALL CHECKVALIDSHIP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1010 IF SHIPERR=1 THEN 950 :: REM GOTO DEPLOYMANSHIP
1020 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1030 FOR I=0 TO SHIPLEN-1
1040 SHIPS(0,CURRENTSHIP,I)=SHIP(I)
1050 NEXT I
1060 CALL RENDERSHIP((CURRENTSHIP),SHIP())
1070 NEXT CURRENTSHIP
1080 SUBEND
1090 REM SUBROUTINE ***DEPLOYCOMPUTER***
1100 SUB DEPLOYCOMPUTER(VISIBLE,SHIPS(,,))
1110 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
1120 CALL GETNUMSHIPS(NUMSHIPS)
1130 CALL GETBOARDORIG(ROW,COL)
1140 CALL GETSHIPCHAR(SHIPCHAR)
1150 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1160 REM LABEL ***DEPLOYCOMPSHIP***
1170 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1180 HORIZONTAL=INT(RND*2)
1190 SHIPBEGIN=INT(RND*(10-SHIPLEN))+1
1200 STATIC=INT(RND*10)+1
1210 FOR I=0 TO SHIPLEN-1
1220 IF HORIZONTAL=1 THEN SHIP(I)=16*STATIC+SHIPBEGIN+I ELSE SHIP(I)=16*(SHIPBEGIN+I)+STATIC
1230 NEXT I
1240 PLAYER=1
1250 SHIPERR=0
1260 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1270 IF SHIPERR=1 THEN 1160 :: REM GOTO DEPLOYCOMPSHIP
1280 FOR I=0 TO SHIPLEN-1
1290 SHIPS(1,CURRENTSHIP,I)=SHIP(I)
1300 NEXT I
1310 CALL GETDEBUGFLAG(DEBUG)
1320 IF DEBUG=1 THEN VISIBLE=1
1330 IF VISIBLE=1 THEN CALL RENDERSHIP((CURRENTSHIP),SHIP())
1340 NEXT CURRENTSHIP
1350 SUBEND
1360 REM SUBROUTINE ***PLAYGAME***
1370 SUB PLAYGAME(SHIPS(,,))
1380 CALL MENUCLEAR
1390 CALL MENUTARGET
1400 DIM SHOTS(1,9,9) :: REM SHOTS[PLAYER, ROW,COL]
1410 FOR I=0 TO 9 :: FOR J=0 TO 9 :: SHOTS(0,I,J)=0 :: SHOTS(1,I,J)=0 :: NEXT J :: NEXT I
1420 DIM HITSLEFT(1,4) :: REM HITS[PLAYER,SHIP]
1430 CALL GETNUMSHIPS(NUMSHIPS)
1440 FOR I=0 TO NUMSHIPS-1
1450 CALL GETSHIPLEN(SHIPLEN,I)
1460 HITSLEFT(0,I)=SHIPLEN :: HITSLEFT(1,I)=SHIPLEN
1470 NEXT I
1480 DIM SHIPSLEFT(1) :: REM SHIPSLEFT[PLAYER]
1490 SHIPSLEFT(0)=NUMSHIPS :: SHIPSLEFT(1)=NUMSHIPS
1500 WINNER=-1
1510 PLAYER=0
1520 REM LABEL ***TURNLOOP***
1530 CALL TAKETURN(ROW,COL,(PLAYER))
1540 ERRORVAL=0
1550 CALL CHECKVALIDSHOT(ERRORVAL,(ROW),(COL),(PLAYER),SHOTS(,,))
1560 IF ERRORVAL=1 THEN 1520 :: REM GOTO TURNLOOP
1570 SHOTS(PLAYER,ROW-1,COL-1)=1
1580 CALL PROCESSSHOT(WINNER,(ROW),(COL),(PLAYER),HITSLEFT(,),SHIPSLEFT(),SHIPS(,,))
1590 IF WINNER=0 OR WINNER=1 THEN 1620 :: REM GOTO GAMEOVER
1600 PLAYER=1-PLAYER
1610 GOTO 1520 :: REM GOTO TURNLOOP
1620 REM LABEL ***GAMEOVER***
1630 PLAYAGAIN$="N"
1640 CALL MENUGAMEOVER(PLAYAGAIN$,(WINNER))
1650 IF PLAYAGAIN$="Y" THEN 1680 :: REM GOTO PLAYGAME.SUBEND
1660 CALL CLEAR
1670 END
1680 SUBEND
1690 REM SUBROUTINE ***TAKETURN***
1700 SUB TAKETURN(ROW,COL,PLAYER)
1710 IF PLAYER=0 THEN CALL PLAYERTURN(ROW,COL) ELSE CALL COMPUTERTURN(ROW,COL)
1720 SUBEND
1730 REM SUBROUTINE ***PLAYERTURN***
1740 SUB PLAYERTURN(ROW,COL)
1750 CALL INPUTTARGET(ROW$,COL)
1760 ROW=ASC(ROW$)-64
1770 SUBEND
1780 REM SUBROUTINE ***COMPUTERTURN***
1790 SUB COMPUTERTURN(ROW,COL)
1800 ROW=INT(RND*10)+1 :: COL=INT(RND*10)+1
1810 CALL GETMENUORIG(MROW,MCOL)
1820 TEXT$=CHR$(64+ROW)&STR$(COL)
1830 CALL HCHAR(MROW+8,MCOL,32,10)
1840 CALL RENDERTEXT(TEXT$,MROW+8,MCOL)
1850 SUBEND
1860 REM SUBROUTINE ***PROCESSSHOT***
1870 SUB PROCESSSHOT(WINNER,ROW,COL,PLAYER,HITSLEFT(,),SHIPSLEFT(),SHIPS(,,))
1880 WINNER=-1 :: HIT=0 :: SHIP=0
1890 LOC=16*ROW+COL
1900 CALL CHECKHIT(HIT,SHIP,(LOC),(1-PLAYER),SHIPS(,,))
1910 CALL RENDERSHOT((PLAYER),(HIT),(ROW),(COL))
1920 IF HIT=0 THEN 1980 :: REM GOTO PROCESSSHOT.SUBEND
1930 HITSLEFT(1-PLAYER,SHIP)=HITSLEFT(1-PLAYER,SHIP)-1
1940 IF HITSLEFT(1-PLAYER,SHIP)>0 THEN 1980 :: REM GOTO PROCESSSHOT.SUBEND
1950 SHIPSLEFT(1-PLAYER)=SHIPSLEFT(1-PLAYER)-1
1960 CALL RENDERSUNK((1-PLAYER),(SHIP),SHIPS(,,))
1970 IF SHIPSLEFT(1-PLAYER)=0 THEN WINNER=PLAYER
1980 SUBEND
1990 REM SUBROUTINE ***RENDERTEXT***
2000 SUB RENDERTEXT(TEXT$,ROW,COL)
2010 STRLEN=LEN(TEXT$)
2020 FOR I=0 TO STRLEN-1
2030 C$=SEG$(TEXT$,I+1,1)
2040 CALL HCHAR(ROW,COL+I,ASC(C$))
2050 NEXT I
2060 SUBEND
2070 REM SUBROUTINE ***RENDERBOARDS***
2080 SUB RENDERBOARDS
2090 CALL CLEAR
2100 DISPLAY AT(1,9):"BATTLESHIP"
2110 CALL RENDERBOARD
2120 CALL RENDERAUX
2130 SUBEND
2140 REM SUBROUTINE ***RENDERBOARD***
2150 SUB RENDERBOARD
2160 CALL RENDERBACKBOARD
2170 CALL RENDERAXES
2180 CALL RENDERHOLES
2190 SUBEND
2200 REM SUBROUTINE ***RENDERBACKBOARD***
2210 SUB RENDERBACKBOARD
2220 CALL GETBOARDORIG(ROW,COL)
2230 CALL GETFILLCHAR(FILLCHAR)
2240 FOR I=0 TO 18
2250 CALL HCHAR(ROW+I,COL,FILLCHAR,19)
2260 NEXT I
2270 SUBEND
2280 REM SUBROUTINE ***RENDERHOLES***
2290 SUB RENDERHOLES
2300 CALL GETBOARDORIG(ROW,COL)
2310 CALL GETHOLECHAR(HOLECHAR)
2320 FOR I=0 TO 18 STEP 2
2330 FOR J=0 TO 18 STEP 2
2340 CALL HCHAR(ROW+I,COL+J,HOLECHAR,1)
2350 NEXT J
2360 NEXT I
2370 SUBEND
2380 REM SUBROUTINE ***RENDERAXES***
2390 SUB RENDERAXES
2400 CALL GETBOARDORIG(ROW,COL)
2410 CALL GETTENCHAR(TENCHAR)
2420 REM RENDER X-AXIS (NUMBERS)
2430 FOR I=0 TO 8
2440 CALL HCHAR(ROW-2,I*2+COL,49+I,1)
2450 NEXT I
2460 CALL HCHAR(ROW-2,COL+18,TENCHAR,1)
2470 REM RENDER Y-AXIS (LETTERS)
2480 FOR I=1 TO 10
2490 CALL HCHAR(ROW-2+I*2,COL-2,64+I,1)
2500 NEXT I
2510 SUBEND
2520 REM SUBROUTINE ***RENDERAUX***
2530 SUB RENDERAUX
2540 CALL GETAUXORIG(ROW,COL)
2550 CALL GETHOLECHAR(HOLECHAR)
2560 FOR I=0 TO 9
2570 CALL HCHAR(ROW+I,COL,HOLECHAR,10)
2580 NEXT I
2590 SUBEND
2600 REM SUBROUTINE ***RENDERSHIP***
2610 SUB RENDERSHIP(CURRENTSHIP,SHIP())
2620 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
2630 CALL GETSHIPCHAR(SHIPCHAR)
2640 CALL GETBOARDORIG(ROW,COL)
2650 FOR I=0 TO SHIPLEN-1
2660 COFFSET=SHIP(I)-INT(SHIP(I)/16)*16 :: ROFFSET=INT(SHIP(I)/16)
2670 CALL HCHAR(ROW+(ROFFSET-1)*2,COL+(COFFSET-1)*2,SHIPCHAR,1)
2680 NEXT I
2690 SUBEND
2700 REM SUBROUTINE ***RENDERSHIPSAUX***
2710 SUB RENDERSHIPSAUX(SHIPS(,,))
2720 CALL GETNUMSHIPS(NUMSHIPS)
2730 CALL GETAUXORIG(ROW,COL)
2740 CALL GETSHIPCHAR(SHIPCHAR)
2750 FOR I=0 TO NUMSHIPS-1
2760 CALL GETSHIPLEN(SHIPLEN,(I))
2770 FOR J=0 TO SHIPLEN-1
2780 COFFSET=SHIPS(0,I,J)-INT(SHIPS(0,I,J)/16)*16 :: ROFFSET=INT(SHIPS(0,I,J)/16)
2790 CALL HCHAR(ROW+ROFFSET-1,COL+COFFSET-1,SHIPCHAR,1)
2800 NEXT J
2810 NEXT I
2820 SUBEND
2830 REM SUBROUTINE ***RENDERSHOT***
2840 SUB RENDERSHOT(PLAYER,HIT,SROW,SCOL)
2850 CALL GETMENUORIG(ROW,COL)
2860 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
2870 IF HIT=0 THEN TEXT$="MISS" :: NOISE=-3 ELSE TEXT$="HIT" :: NOISE=-8
2880 CALL HCHAR(ROW,COL,32,10)
2890 CALL RENDERTEXT((TEXT$),(ROW),(COL))
2900 IF HIT=1 THEN CALL GETHITCHAR(CHARVAL) ELSE CALL GETMISSCHAR(CHARVAL)
2910 IF PLAYER=1 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
2920 TROW=SROW-1 :: TCOL=SCOL-1
2930 IF PLAYER=0 THEN TROW=TROW*2 :: TCOL=TCOL*2
2940 CALL HCHAR(ROW+TROW,COL+TCOL,CHARVAL,1)
2950 CALL SOUND(500,NOISE,2) :: CALL SOUND(1,110,30)
2960 SUBEND
2970 REM SUBROUTINE ***RENDERSUNK***
2980 SUB RENDERSUNK(PLAYER,SHIP,SHIPS(,,))
2990 CALL GETSHIPLEN(SHIPLEN,(SHIP))
3000 IF PLAYER=0 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3010 CALL GETSUNKCHAR(SUNKCHAR)
3020 FOR I=0 TO SHIPLEN-1
3030 LOC=SHIPS(PLAYER,SHIP,I)
3040 TROW=INT(LOC/16)-1 :: TCOL=LOC-INT(LOC/16)*16-1
3050 IF PLAYER=1 THEN TROW=TROW*2 :: TCOL=TCOL*2
3060 CALL HCHAR(ROW+TROW,COL+TCOL,SUNKCHAR,1)
3070 NEXT I
3080 CALL GETSHIPNAME(SHIPNAME$,SHIP)
3090 CALL GETMENUORIG(ROW,COL)
3100 IF PLAYER=1 THEN ROW=ROW+4 ELSE ROW=ROW+9
3110 CALL HCHAR(ROW,COL,32,10)
3120 CALL RENDERTEXT("DESTROYED",(ROW),(COL))
3130 CALL HCHAR(ROW,COL,32,10)
3140 CALL RENDERTEXT((SHIPNAME$),(ROW),(COL))
3150 CALL SOUND(1000,-6,2) :: CALL SOUND(1,110,30)
3160 SUBEND
3170 REM SUBROUTINE ***MENUCLEAR***
3180 SUB MENUCLEAR
3190 CALL GETMENUORIG(ROW,COL)
3200 FOR I=0 TO 9 :: CALL HCHAR(ROW+I,COL,32,10) :: NEXT I
3210 SUBEND
3220 REM SUBROUTINE ***MENUAUTODEPLOY***
3230 SUB MENUAUTODEPLOY(AUTODEPLOY$)
3240 CALL GETMENUORIG(ROW,COL)
3250 CALL MENUCLEAR
3260 CALL RENDERTEXT("AUTO",(ROW),(COL))
3270 CALL RENDERTEXT("DEPLOY",(ROW+1),(COL))
3280 CALL RENDERTEXT("YOUR",(ROW+2),(COL))
3290 CALL RENDERTEXT("SHIPS?",(ROW+3),(COL))
3300 CALL RENDERTEXT("[Y/N]:",(ROW+4),(COL))
3310 ACCEPT AT(ROW+4,COL+4)VALIDATE("YN")BEEP SIZE(1):AUTODEPLOY$
3320 SUBEND
3330 REM SUBROUTINE ***MENUDEPLOY***
3340 SUB MENUDEPLOY(CURRENTSHIP)
3350 CALL GETMENUORIG(ROW,COL)
3360 CALL RENDERTEXT("INPUT THE",(ROW),(COL))
3370 CALL RENDERTEXT("LOCATIONS",(ROW+1),(COL))
3380 CALL RENDERTEXT("FOR YOUR",(ROW+2),(COL))
3390 CALL RENDERTEXT("          ",(ROW+3),(COL))
3400 CALL GETSHIPNAME(SHIPNAME$,(CURRENTSHIP))
3410 CALL RENDERTEXT((SHIPNAME$),(ROW+3),(COL))
3420 CALL RENDERTEXT("[IE. C3]:",(ROW+4),(COL))
3430 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3440 FOR I=1 TO 5
3450 IF I>SHIPLEN THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
3460 CALL RENDERTEXT((TEXT$),(ROW+4+I),(COL))
3470 NEXT I
3480 SUBEND
3490 REM SUBROUTINE ***MENUTARGET***
3500 SUB MENUTARGET
3510 CALL GETMENUORIG(ROW,COL)
3520 CALL RENDERTEXT("PLAYER",(ROW),(COL))
3530 CALL RENDERTEXT("TARGET",(ROW+1),(COL))
3540 CALL RENDERTEXT("[IE. C3]",(ROW+2),(COL))
3550 CALL RENDERTEXT("COMPUTER",(ROW+6),(COL))
3560 CALL RENDERTEXT("TARGET",(ROW+7),(COL))
3570 SUBEND
3580 REM SUBROUTINE ***MENUDEPLOYING***
3590 SUB MENUDEPLOYING
3600 CALL GETMENUORIG(ROW,COL)
3610 CALL MENUCLEAR
3620 CALL RENDERTEXT("PLAYER'S",(ROW),(COL))
3630 CALL RENDERTEXT("SHIPS",(ROW+1),(COL))
3640 CALL RENDERTEXT("DEPLOYED.",(ROW+2),(COL))
3650 CALL RENDERTEXT("COMPUTER",(ROW+4),(COL))
3660 CALL RENDERTEXT("DEPLOYING",(ROW+5),(COL))
3670 CALL RENDERTEXT("SHIPS...",(ROW+6),(COL))
3680 SUBEND
3690 REM SUBROUTINE ***MENUGAMEOVER***
3700 SUB MENUGAMEOVER(PLAYAGAIN$,WINNER)
3710 CALL GETMENUORIG(ROW,COL)
3720 CALL MENUCLEAR
3730 CALL RENDERTEXT("GAME OVER",(ROW),(COL))
3740 CALL RENDERTEXT("WINNER:",(ROW+1),(COL))
3750 IF WINNER=0 THEN TEXT$="PLAYER" ELSE TEXT$="COMPUTER"
3760 CALL RENDERTEXT(TEXT$,(ROW+2),(COL))
3770 CALL RENDERTEXT("PLAY", (ROW+4),(COL))
3780 CALL RENDERTEXT("AGAIN?",(ROW+5),(COL))
3790 CALL RENDERTEXT("[Y/N]:",(ROW+6),(COL))
3800 ACCEPT AT(ROW+6,COL+4)VALIDATE("YN")BEEP SIZE(1):PLAYAGAIN$
3810 SUBEND
3820 REM SUBROUTINE ***INPUTPOS***
3830 SUB INPUTPOS(ROW,COL,INPUTROW$,INPUTCOL)
3840 ON WARNING NEXT
3850 REM LABEL ***GETROW***
3860 ACCEPT AT(ROW,COL-2)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):INPUTROW$
3870 IF INPUTROW$="" THEN  3850 :: REM GOTO GETROW
3880 REM LABEL ***GETCOL***
3890 ACCEPT AT(ROW,COL-2+1)VALIDATE(DIGIT)BEEP SIZE(2):INPUTCOL
3900 IF INPUTCOL>10 THEN  3880 :: REM GOTO GETCOL
3910 IF INPUTCOL<1 THEN  3880 :: REM GOTO GETCOL
3920 ON WARNING PRINT
3930 SUBEND
3940 REM SUBROUTINE ***INPUTSHIP***
3950 SUB INPUTSHIP(SHIP(),CURRENTSHIP)
3960 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3970 CALL GETMENUORIG(ROW,COL)
3980 FOR I=0 TO SHIPLEN-1
3990 INPUTROW$="" :: INPUTCOL=0
4000 CALL INPUTPOS((ROW+5+I),(COL+5),INPUTROW$,INPUTCOL)
4010 SHIP(I)=16*(ASC(INPUTROW$)-64)+INPUTCOL
4020 NEXT I
4030 SUBEND
4040 REM SUBROUTINE ***INPUTTARGET***
4050 SUB INPUTTARGET(TARGETROW$,TARGETCOL)
4060 CALL GETMENUORIG(ROW,COL)
4070 CALL HCHAR(ROW+3,COL,32,10)
4080 CALL INPUTPOS((ROW+3),(COL),TARGETROW$,TARGETCOL)
4090 SUBEND
4100 REM SUBROUTINE ***CHECKVALIDSHIP***
4110 SUB CHECKVALIDSHIP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4120 SHIPERR=0
4130 HORIZONTAL=0
4140 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4150 CALL CHECKHORIZONTAL(HORIZONTAL,(CURRENTSHIP),SHIP())
4160 DIM SEQUENCE(4) :: FOR I=0 TO 4 :: SEQUENCE(I)=0 :: NEXT I
4170 FOR I=0 TO SHIPLEN-1
4180 COL=SHIP(I)-INT(SHIP(I)/16)*16 :: ROW=INT(SHIP(I)/16)
4190 IF HORIZONTAL=1 THEN SEQUENCE(I)=COL ELSE SEQUENCE(I)=ROW
4200 NEXT I
4210 CALL CHECKSEQUENTIAL(SHIPERR,(CURRENTSHIP),SEQUENCE())
4220 IF SHIPERR=1 THEN 4240 :: REM SUBEND
4230 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
4240 SUBEND
4250 REM SUBROUTINE ***CHECKVALIDSHOT***
4260 SUB CHECKVALIDSHOT(ERRORVAL,ROW,COL,PLAYER,SHOTS(,,))
4270 ERRORVAL=0
4280 IF SHOTS(PLAYER,ROW-1,COL-1)<>0 THEN ERRORVAL=1
4290 SUBEND
4300 REM SUBROUTINE ***CHECKHIT***
4310 SUB CHECKHIT(HIT,SHIP,LOC,PLAYER,SHIPS(,,))
4320 HIT=0
4330 CALL GETNUMSHIPS(NUMSHIPS)
4340 FOR I=0 TO NUMSHIPS-1
4350 CALL GETSHIPLEN(SHIPLEN,(I))
4360 FOR J=0 TO SHIPLEN-1
4370 IF SHIPS(PLAYER,I,J)=LOC THEN HIT=1 :: SHIP=I :: GOTO 4400 :: REM SUBEND
4380 NEXT J
4390 NEXT I
4400 SUBEND
4410 REM SUBROUTINE ***CHECKHORIZONTAL***
4420 SUB CHECKHORIZONTAL(HORIZONTAL,CURRENTSHIP,SHIP())
4430 HORIZONTAL=0
4440 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4450 FOR I=1 TO SHIPLEN-1
4460 PREV=INT(SHIP(I-1)/16) :: CURR=INT(SHIP(I)/16)
4470 IF PREV<>CURR THEN 4500 :: REM SUBEND
4480 NEXT I
4490 HORIZONTAL=1
4500 SUBEND
4510 REM SUBROUTINE ***CHECKSEQUENTIAL***
4520 SUB CHECKSEQUENTIAL(SHIPERR,CURRENTSHIP,SEQUENCE())
4530 SHIPERR=0
4540 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4550 MINCOORD=SEQUENCE(0)
4560 FOR I=1 TO SHIPLEN-1
4570 MINCOORD=MIN(MINCOORD,SEQUENCE(I))
4580 NEXT I
4590 EXPSUM=MINCOORD
4600 FOR I=1 TO SHIPLEN-1
4610 EXPSUM=EXPSUM+MINCOORD+I
4620 NEXT I
4630 ACTSUM=SEQUENCE(0)
4640 FOR I=1 TO SHIPLEN-1
4650 ACTSUM=ACTSUM+SEQUENCE(I)
4660 NEXT I
4670 IF EXPSUM<>ACTSUM THEN SHIPERR=1
4680 SUBEND
4690 REM SUBROUTINE ***CHECKOVERLAP***
4700 SUB CHECKOVERLAP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4710 SHIPERR=0
4720 CALL GETSHIPLEN(CURRENTSHIPLEN,(CURRENTSHIP))
4730 FOR I=0 TO CURRENTSHIP-1
4740 CALL GETSHIPLEN(SHIPLEN,(I))
4750 FOR J=0 TO SHIPLEN-1
4760 STOREDLOC=SHIPS(PLAYER,I,J)
4770 FOR K=0 TO CURRENTSHIPLEN-1
4780 LOC=SHIP(K)
4790 IF LOC=STOREDLOC THEN SHIPERR=1 :: GOTO 4830 :: REM SUBEND
4800 NEXT K
4810 NEXT J
4820 NEXT I
4830 SUBEND
4840 REM SUBROUTINE ***GETHOLECHAR***
4850 SUB GETHOLECHAR(CHARVAL)
4860 CHARVAL=96
4870 SUBEND
4880 REM SUBROUTINE ***GETFILLCHAR***
4890 SUB GETFILLCHAR(CHARVAL)
4900 CHARVAL=97
4910 SUBEND
4920 REM SUBROUTINE ***GETHITCHAR***
4930 SUB GETHITCHAR(CHARVAL)
4940 CHARVAL=104
4950 SUBEND
4960 REM SUBROUTINE ***GETSHIPCHAR***
4970 SUB GETSHIPCHAR(CHARVAL)
4980 CHARVAL=112
4990 SUBEND
5000 REM SUBROUTINE ***GETTENCHAR***
5010 SUB GETTENCHAR(CHARVAL)
5020 CHARVAL=120
5030 SUBEND
5040 REM SUBROUTINE ***GETMISSCHAR***
5050 SUB GETMISSCHAR(CHARVAL)
5060 CHARVAL=128
5070 SUBEND
5080 REM SUBROUTINE ***GETSUNKCHAR***
5090 SUB GETSUNKCHAR(CHARVAL)
5100 CHARVAL=136
5110 SUBEND
5120 REM SUBROUTINE ***GETNUMSHIPS***
5130 SUB GETNUMSHIPS(NUMSHIPS)
5140 NUMSHIPS=5
5150 SUBEND
5160 REM SUBROUTINE ***GETSHIPLEN***
5170 SUB GETSHIPLEN(SHIPLEN,INDEX)
5180 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
5190 SHIPLEN=SHIPLENS(INDEX)
5200 SUBEND
5210 REM SUBROUTINE ***GETSHIPNAME***
5220 SUB GETSHIPNAME(SHIPNAME$,INDEX)
5230 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
5240 SHIPNAME$=SHIPNAMES$(INDEX)
5250 SUBEND
5260 REM SUBROUTINE ***GETBOARDORIG***
5270 SUB GETBOARDORIG(ROW,COL)
5280 ROW=5 :: COL=3
5290 SUBEND
5300 REM SUBROUTINE ***GETAUXORIG***
5310 SUB GETAUXORIG(ROW,COL)
5320 ROW=3 :: COL=23
5330 SUBEND
5340 REM SUBROUTINE ***GETMENUORIG***
5350 SUB GETMENUORIG(ROW,COL)
5360 ROW=14 :: COL=23
5370 SUBEND
5380 REM SUBROUTINE ***GETDEBUGFLAG***
5390 SUB GETDEBUGFLAG(DEBUG)
5400 DEBUG=1
5410 SUBEND