100 CALL CLEAR
110 CALL SCREEN(4)
120 GOSUB 190 :: REM CALL INIT
130 GOSUB 330 :: REM CALL SETCHARS
140 GOSUB 420 :: REM CALL SETCOLORSCHEME
150 GOSUB 500 :: REM CALL RENDERBOARDS
160 GOSUB 560 :: REM CALL DEPLOYSHIPS
170 FOR I=1 TO 1000 :: NEXT I 
180 END
190 REM SUBROUTINE ***INIT***
200 RANDOMIZE
210 DEBUG=1
220 NUMSHIPS=5
230 DIM SHIPLENS(4) :: DIM SHIPNAMES$(4)
240 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
250 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
260 DIM BCOORDS(1,4,4) :: REM BCOORDS[PLAYER,SHIP,POS]
270 DIM COORDS(4)
280 XBOARD=3 :: YBOARD=5 :: REM BOARD ORIGINS
290 XAUX=23 :: YAUX=3 :: REM AUX BOARD ORIGINS
300 XMENU=23 :: YMENU=14 :: REM MENU ORIGINS
310 DIM SERIAL(4)
320 RETURN
330 REM SUBROUTINE ***SETCHARS***
340 HOLECHAR=96 :: CALL CHAR(HOLECHAR,"3C4299A5A599423C") :: REM SET 9
350 FILLCHAR=97 :: CALL CHAR(FILLCHAR,"0000000000000000") :: REM SET 9
360 HITCHAR=104 :: CALL CHAR(HITCHAR,"003C7E7E7E7E3C00") :: REM SET 10
370 SHIPCHAR=112 :: CALL CHAR(SHIPCHAR,"3C4299A5A599423C") :: REM SET 11
380 TENCHAR=120 :: CALL CHAR(TENCHAR,"004FC949494949EF") :: REM SET 12
390 MISSCHAR=128 :: CALL CHAR(MISSCHAR,"3C4299A5A599423C") :: REM SET 13
400 SUNKCHAR=136 :: CALL CHAR(SUNKCHAR,"3C4299A5A599423C") :: REM SET 14
410 RETURN
420 REM SUBROUTINE ***SETCOLORSCHEME***
430 CALL COLOR(9,2,8) :: REM BLACK ON CYAN
440 CALL COLOR(10,2,11) :: REM BLACK ON DARK YELLOW
450 CALL COLOR(11,2,15) :: REM BLACK ON GREY
460 CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
470 CALL COLOR(13,2,16) :: REM BLACK ON WHITE
480 CALL COLOR(14,2,9) :: REM BLACK ON MED RED
490 RETURN
500 REM SUBROUTINE ***RENDERBOARDS***
510 CALL CLEAR
520 DISPLAY AT(1,9):"BATTLESHIP"
530 GOSUB 600 :: REM CALL RENDERBOARD
540 GOSUB 900 :: REM CALL RENDERAUX
550 RETURN
560 REM SUBROUTINE ***DEPLOYSHIPS***
570 GOSUB 960 :: REM CALL PLAYERDELOY
580 GOSUB 1330 :: REM CALL COMPUTERDEPLOY
590 RETURN
600 REM SUBROUTINE ***RENDERBOARD***
610 GOSUB 650 :: REM CALL RENDERBACKBOARD
620 GOSUB 790 :: REM CALL RENDERAXES
630 GOSUB 710 :: REM CALL RENDERHOLES
640 RETURN
650 REM SUBROUTINE ***RENDERBACKBOARD***
660 X=XBOARD :: Y=YBOARD
670 FOR I=0 TO 18
680 CALL HCHAR(Y+I,X,FILLCHAR,19)
690 NEXT I
700 RETURN
710 REM SUBROUTINE ***RENDERHOLES***
720 X=XBOARD :: Y=YBOARD
730 FOR I=0 TO 18 STEP 2
740 FOR J=0 TO 18 STEP 2
750 CALL HCHAR(Y+I,X+J,HOLECHAR,1)
760 NEXT J
770 NEXT I
780 RETURN
790 REM SUBROUTINE ***RENDERAXES***
800 REM RENDER X-AXIS (NUMBERS)
810 FOR I=0 TO 8
820 CALL HCHAR(Y-2,I*2+X,49+I,1)
830 NEXT I
840 CALL HCHAR(Y-2,X+18,TENCHAR,1)
850 REM RENDER Y-AXIS (LETTERS)
860 FOR I=1 TO 10
870 CALL HCHAR(Y-2+I*2,X-2,64+I,1)
880 NEXT I
890 RETURN
900 REM SUBROUTINE ***RENDERAUX***
910 X=XAUX :: Y=YAUX
920 FOR I=0 TO 9
930 CALL HCHAR(Y+I,X,HOLECHAR,10)
940 NEXT I
950 RETURN
960 REM SUBROUTINE ***PLAYERDELOY***
970 GOSUB 1520 :: REM CALL CLEARMENU
980 CALL RENDERTEXT("AUTO",YMENU,XMENU)
990 CALL RENDERTEXT("DEPLOY",YMENU+1,XMENU)
1000 CALL RENDERTEXT("YOUR",YMENU+2,XMENU)
1010 CALL RENDERTEXT("SHIPS?",YMENU+3,XMENU)
1020 CALL RENDERTEXT("[Y/N]:",YMENU+4,XMENU)
1030 ACCEPT AT(YMENU+4,XMENU+4)VALIDATE("YN")BEEP SIZE(1):AUTODEPLOY$
1040 IF AUTODEPLOY$="N" THEN 1150 :: REM GOTO PLAYERDEPLOYSHIPS
1050 CALL RENDERTEXT("AUTO",YMENU+6,XMENU)
1060 CALL RENDERTEXT("DEPLOYING",YMENU+7,XMENU)
1070 CALL RENDERTEXT("SHIPS...",YMENU+8,XMENU)
1080 GOSUB 1330 :: REM CALL COMPUTERDEPLOY
1090 FOR I=0 TO NUMSHIPS-1
1100 FOR J=0 TO SHIPLENS(I)-1
1110 BCOORDS(0,I,J)=BCOORDS(1,I,J)
1120 NEXT J
1130 NEXT I
1140 GOTO 1290 :: REM GOTO PLAYERRENDERSHIPS
1150 REM LABEL ***PLAYERDEPLOYSHIPS***
1160 GOSUB 1520 :: REM CALL CLEARMENU
1170 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1180 REM LABEL ***PLAYERDEPLOYSHIP***
1190 GOSUB 1550 :: REM CALL PLAYERDEPLOYMENU
1200 GOSUB 1670 :: REM CALL PLAYERDEPLOYINPUT
1210 PLAYER=0
1220 GOSUB 1810 :: REM CALL VALIDATESHIP
1230 IF SHIPERR=1 THEN 1180 :: REM GOTO PLAYERDEPLOYSHIP
1240 FOR I=0 TO SHIPLENS(CURRENTSHIP)-1
1250 BCOORDS(0,CURRENTSHIP,I)=COORDS(I)
1260 NEXT I
1270 GOSUB 1920 :: REM CALL RENDERSHIP
1280 NEXT CURRENTSHIP
1290 GOSUB 1990 :: REM CALL RENDERSHIPSAUX
1300 GOSUB 710 :: REM CALL RENDERHOLES
1310 GOSUB 2080 :: REM CALL PLAYERDEPLOYED
1320 RETURN
1330 REM SUBROUTINE ***COMPUTERDEPLOY***
1340 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1350 REM LABEL ***COMPUTERDEPLOYSHIP***
1360 HORIZONTAL=INT(RND*2)
1370 SHIPBEGIN=INT(RND*(10-SHIPLENS(CURRENTSHIP)))+1
1380 STATIC=INT(RND*10)+1
1390 FOR I=0 TO SHIPLENS(CURRENTSHIP)-1
1400 IF HORIZONTAL=1 THEN COORDS(I)=16*STATIC+SHIPBEGIN+I ELSE COORDS(I)=16*(SHIPBEGIN+I)+STATIC
1410 NEXT I
1420 SHIPERR=0
1430 PLAYER=1
1440 GOSUB 2170 :: REM CALL CHECKOVERLAP
1450 IF SHIPERR=1 THEN 1350 :: REM GOTO COMPUTERDEPLOYSHIP
1460 FOR I=0 TO SHIPLENS(CURRENTSHIP)-1
1470 BCOORDS(1,CURRENTSHIP,I)=COORDS(I)
1480 NEXT I
1490 IF DEBUG=1 THEN GOSUB 1920 :: REM CALL RENDERSHIP
1500 NEXT CURRENTSHIP
1510 RETURN
1520 REM SUBROUTINE ***CLEARMENU***
1530 FOR I=0 TO 9 :: CALL HCHAR(YMENU+I,XMENU,32,10) :: NEXT I
1540 RETURN
1550 REM SUBROUTINE ***PLAYERDEPLOYMENU***
1560 CALL RENDERTEXT("INPUT THE",YMENU,XMENU)
1570 CALL RENDERTEXT("LOCATIONS",YMENU+1,XMENU)
1580 CALL RENDERTEXT("FOR YOUR",YMENU+2,XMENU)
1590 CALL RENDERTEXT("          ",YMENU+3,XMENU)
1600 CALL RENDERTEXT(SHIPNAMES$(CURRENTSHIP),YMENU+3,XMENU)
1610 CALL RENDERTEXT("[IE. C3]:",YMENU+4,XMENU)
1620 FOR I=1 TO 5
1630 IF I>SHIPLENS(CURRENTSHIP) THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
1640 CALL RENDERTEXT(TEXT$,YMENU+4+I,XMENU)
1650 NEXT I
1660 RETURN
1670 REM SUBROUTINE ***PLAYERDEPLOYINPUT***
1680 ON WARNING NEXT
1690 FOR I=0 TO SHIPLENS(CURRENTSHIP)-1
1700 REM LABEL ***INPUTROW***
1710 ACCEPT AT(YMENU+5+I,XMENU+3)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):ROW$
1720 IF ROW$="" THEN  1700 :: REM GOTO INPUTROW
1730 REM LABEL ***INPUTCOL***
1740 ACCEPT AT(YMENU+5+I,XMENU+4)VALIDATE(DIGIT)BEEP SIZE(2):COL
1750 IF COL>10 THEN  1730 :: REM GOTO INPUTCOL
1760 IF COL<1 THEN  1730 :: REM GOTO INPUTCOL
1770 COORDS(I)=16*(ASC(ROW$)-64)+COL
1780 NEXT I
1790 ON WARNING PRINT
1800 RETURN
1810 REM SUBROUTINE ***VALIDATESHIP***
1820 SHIPERR=0
1830 GOSUB 2280 :: REM CALL CHECKHORIZONTAL
1840 FOR I=0 TO SHIPLENS(CURRENTSHIP)-1
1850 COL=COORDS(I)-INT(COORDS(I)/16)*16 :: ROW=INT(COORDS(I)/16)
1860 IF HORIZONTAL=1 THEN SERIAL(I)=COL ELSE SERIAL(I)=ROW
1870 NEXT I
1880 GOSUB 2360 :: REM CALL CHECKSEQUENCE
1890 IF SHIPERR=1 THEN RETURN
1900 GOSUB 2170 :: REM CALL CHECKOVERLAP
1910 RETURN
1920 REM SUBROUTINE ***RENDERSHIP***
1930 X=XBOARD :: Y=YBOARD
1940 FOR I=0 TO SHIPLENS(CURRENTSHIP)-1
1950 COL=COORDS(I)-INT(COORDS(I)/16)*16 :: ROW=INT(COORDS(I)/16)
1960 CALL HCHAR(Y+(ROW-1)*2,X+(COL-1)*2,SHIPCHAR,1)
1970 NEXT I
1980 RETURN
1990 REM SUBROUTINE ***RENDERSHIPSAUX***
2000 X=XAUX :: Y=YAUX
2010 FOR I=0 TO NUMSHIPS-1
2020 FOR J=0 TO SHIPLENS(I)-1
2030 COL=BCOORDS(0,I,J)-INT(BCOORDS(0,I,J)/16)*16 :: ROW=INT(BCOORDS(0,I,J)/16)
2040 CALL HCHAR(Y+ROW-1,X+COL-1,SHIPCHAR,1)
2050 NEXT J
2060 NEXT I
2070 RETURN
2080 REM SUBROUTINE ***PLAYERDEPLOYED***
2090 GOSUB 1520 :: REM CALL CLEARMENU
2100 CALL RENDERTEXT("PLAYER'S",YMENU,XMENU)
2110 CALL RENDERTEXT("SHIPS",YMENU+1,XMENU)
2120 CALL RENDERTEXT("DEPLOYED.",YMENU+2,XMENU)
2130 CALL RENDERTEXT("COMPUTER",YMENU+4,XMENU)
2140 CALL RENDERTEXT("DEPLOYING",YMENU+5,XMENU)
2150 CALL RENDERTEXT("SHIPS...",YMENU+6,XMENU)
2160 RETURN
2170 REM SUBROUTINE ***CHECKOVERLAP***
2180 FOR I=0 TO CURRENTSHIP-1
2190 FOR J=0 TO SHIPLENS(I)-1
2200 STOREDLOC=BCOORDS(PLAYER,I,J)
2210 FOR K=0 TO SHIPLENS(CURRENTSHIP)-1
2220 LOC=COORDS(K)
2230 IF LOC=STOREDLOC THEN SHIPERR=1 :: RETURN
2240 NEXT K
2250 NEXT J
2260 NEXT I
2270 RETURN
2280 REM SUBROUTINE ***CHECKHORIZONTAL***
2290 HORIZONTAL=0
2300 FOR I=1 TO SHIPLENS(CURRENTSHIP)-1
2310 PREV=INT(COORDS(I-1)/16) :: CURR=INT(COORDS(I)/16)
2320 IF PREV<>CURR THEN RETURN
2330 NEXT I
2340 HORIZONTAL=1
2350 RETURN
2360 REM SUBROUTINE ***CHECKSEQUENCE***
2370 MINCOORD=SERIAL(0)
2380 FOR I=1 TO SHIPLENS(CURRENTSHIP)-1
2390 MINCOORD=MIN(MINCOORD,SERIAL(I))
2400 NEXT I
2410 EXPSUM=MINCOORD
2420 FOR I=1 TO SHIPLENS(CURRENTSHIP)-1
2430 EXPSUM=EXPSUM+MINCOORD+I
2440 NEXT I
2450 ACTSUM=SERIAL(0)
2460 FOR I=1 TO SHIPLENS(CURRENTSHIP)-1
2470 ACTSUM=ACTSUM+SERIAL(I)
2480 NEXT I
2490 IF EXPSUM<>ACTSUM THEN SHIPERR=1
2500 RETURN
2510 REM SUBROUTINE ***RENDERTEXT***
2520 SUB RENDERTEXT(TEXT$,ROW,COL)
2530 STRLEN=LEN(TEXT$)
2540 FOR I=0 TO STRLEN-1
2550 C$=SEG$(TEXT$,I+1,1)
2560 CALL HCHAR(ROW,COL+I,ASC(C$))
2570 NEXT I
2580 SUBEND