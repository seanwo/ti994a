100 CALL CLEAR
110 GOSUB 180 :: REM CALL INIT
120 GOSUB 290 :: REM CALL SETCHARS
130 GOSUB 370 :: REM CALL SETCOLORSCHEME
140 GOSUB 440 :: REM CALL RENDERBOARDS
150 GOSUB 760 :: REM CALL DEPLOYSHIPS
160 FOR I=1 TO 1000 :: NEXT I 
170 END
180 REM SUBROUTINE ***INIT***
190 NUMSHIPS=5
200 DIM SHIPS(4) :: DIM SHIPS$(4)
210 SHIPS(0)=5 :: SHIPS(1)=4 :: SHIPS(2)=3 :: SHIPS(3)=3 :: SHIPS(4)=2 
220 SHIPS$(0)="CARRIER" :: SHIPS$(1)="BATTLESHIP" :: SHIPS$(2)="CRUISER" :: SHIPS$(3)="SUBMARINE" :: SHIPS$(4)="DESTROYER"
230 DIM P1COORDS(4,4) :: DIM P2COORDS(4,4) :: DIM P1COORDS$(4,4) :: DIM P2COORDS$(4,4) 
240 DIM COORDS(4) :: DIM COORDS$(4)
250 XLB=3 :: YLB=5 :: XSB=23 :: YSB=3 :: REM BOARD ORIGINS
260 XMENU=23 :: YMENU=14
270 DIM SERIAL(4)
280 RETURN
290 REM SUBROUTINE ***SETCHARS***
300 HOLECHAR=96 :: CALL CHAR(HOLECHAR,"3C4299A5A599423C") :: REM SET 9
310 TENCHAR=97 :: CALL CHAR(TENCHAR,"004FC949494949EF") :: REM SET 9
320 HITCHAR=104 :: CALL CHAR(HITCHAR,"003C7E7E7E7E3C00") :: REM SET 10
330 SHIPCHAR=112 :: CALL CHAR(SHIPCHAR,"3C4299A5A599423C") :: REM SET 11
340 MISSCHAR=128 :: CALL CHAR(MISSCHAR,"3C4299A5A599423C") :: REM SET 13
350 SUNKCHAR=136 :: CALL CHAR(SUNKCHAR,"3C4299A5A599423C") :: REM SET 14
360 RETURN
370 REM SUBROUTINE ***SETCOLORSCHEME***
380 CALL COLOR(9,2,1) :: REM BLACK ON TRANSPARENT
390 CALL COLOR(10,2,12) :: REM BLACK ON LIGHT YELLOW
400 CALL COLOR(11,2,3) :: REM BLACK ON MED GREEN
410 CALL COLOR(13,2,16) :: REM BLACK ON WHITE
420 CALL COLOR(14,2,9) :: REM BLACK ON MED RED
430 RETURN
440 REM SUBROUTINE ***RENDERBOARDS***
450 CALL CLEAR
460 DISPLAY AT(1,9):"BATTLESHIP"
470 GOSUB 510 :: REM CALL RENDERLGBOARD
480 GOSUB 590 :: REM CALL RENDERLGAXES
490 GOSUB 700 :: REM CALL RENDERSMBOARD
500 RETURN
510 REM SUBROUTINE ***RENDERLGBOARD***
520 X=XLB :: Y=YLB
530 FOR I=0 TO 18 STEP 2
540 FOR J=0 TO 18 STEP 2
550 CALL HCHAR(Y+I,X+J,HOLECHAR,1)
560 NEXT J
570 NEXT I
580 RETURN
590 REM SUBROUTINE ***RENDERLGAXES***
600 REM RENDER X-AXIS (NUMBERS)
610 FOR I=0 TO 8
620 CALL HCHAR(Y-2,I*2+X,49+I,1)
630 NEXT I
640 CALL HCHAR(Y-2,X+18,TENCHAR,1)
650 REM RENDER Y-AXIS (LETTERS)
660 FOR I=1 TO 10
670 CALL HCHAR(Y-2+I*2,X-2,64+I,1)
680 NEXT I
690 RETURN
700 REM SUBROUTINE ***RENDERSMBOARD***
710 X=XSB :: Y=YSB
720 FOR I=0 TO 9
730 CALL HCHAR(Y+I,X,HOLECHAR,10)
740 NEXT I
750 RETURN
760 REM SUBROUTINE ***DEPLOYSHIPS***
770 GOSUB 1790 :: REM CALL CLEARMENU
780 FOR CURRENTSHIP=0 TO NUMSHIPS-1
790 REM LABEL ***DEPLOYSHIP***
800 GOSUB 930 :: REM CALL DEPLOYMENU
810 GOSUB 1050 :: REM CALL DEPLOYINPUT
820 GOSUB 1180 :: REM CALL VALIDATESHIP
830 IF SHIPERR=1 THEN 790 :: REM GOTO DEPLOYSHIP
840 FOR I=0 TO SHIPS(CURRENTSHIP)-1
850 P1COORDS(CURRENTSHIP,I)=COORDS(I) :: P1COORDS$(CURRENTSHIP,I)=COORDS$(I)
860 NEXT I
870 GOSUB 1350 :: REM CALL RENDERSHIPLB
880 NEXT CURRENTSHIP
890 
900 GOSUB 510 :: REM CALL RENDERLGBOARD
910 GOSUB 1400 :: REM CALL PLAYERDEPLOYED
920 RETURN
930 REM SUBROUTINE ***DEPLOYMENU***
940 CALL RENDERTEXT("INPUT THE",YMENU,XMENU)
950 CALL RENDERTEXT("LOCATIONS",YMENU+1,XMENU)
960 CALL RENDERTEXT("FOR YOUR",YMENU+2,XMENU)
970 CALL RENDERTEXT("          ",YMENU+3,XMENU)
980 CALL RENDERTEXT(SHIPS$(CURRENTSHIP),YMENU+3,XMENU)
990 CALL RENDERTEXT("[IE. C3]:",YMENU+4,XMENU)
1000 FOR I=1 TO 5
1010 IF I>SHIPS(CURRENTSHIP) THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
1020 CALL RENDERTEXT(TEXT$,YMENU+4+I,XMENU)
1030 NEXT I
1040 RETURN
1050 REM SUBROUTINE ***DEPLOYINPUT***
1060 ON WARNING NEXT
1070 FOR I=0 TO SHIPS(CURRENTSHIP)-1
1080 REM LABEL ***INPUTROW***
1090 ACCEPT AT(YMENU+5+I,XMENU+3)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):COORDS$(I)
1100 IF COORDS$(I)="" THEN  1080 :: REM GOTO INPUTROW
1110 REM LABEL ***INPUTCOL***
1120 ACCEPT AT(YMENU+5+I,XMENU+4)VALIDATE(DIGIT)BEEP SIZE(2):COORDS(I)
1130 IF COORDS(I)>10 THEN  1110 :: REM GOTO INPUTCOL
1140 IF COORDS(I)<1 THEN  1110 :: REM GOTO INPUTCOL
1150 NEXT I
1160 ON WARNING PRINT
1170 RETURN
1180 REM SUBROUTINE ***VALIDATESHIP***
1190 SHIPERR=0
1200 GOSUB 1460 :: REM CALL CHECKHORIZONTAL
1210 FOR I=0 TO SHIPS(CURRENTSHIP)-1
1220 IF HORIZONTAL=1 THEN SERIAL(I)=COORDS(I) ELSE SERIAL(I)=ASC(COORDS$(I))-64
1230 NEXT I
1240 GOSUB 1530 :: REM CALL CHECKSEQUENCE
1250 IF SHIPERR=1 THEN RETURN
1260 GOSUB 1680 :: REM CALL CHECKOVERLAP
1270 RETURN
1280 REM SUBROUTINE ***RENDERSHIPSSMB***
1290 FOR I=0 TO NUMSHIPS-1
1300 FOR J=0 TO SHIPS(I)-1
1310 CALL HCHAR(YSB+ASC(P1COORDS$(I,J))-65,XSB+COORDS(I,J)-1,SHIPCHAR,1)
1320 NEXT J
1330 NEXT I
1340 RETURN
1350 REM SUBROUTINE ***RENDERSHIPLB***
1360 FOR I=0 TO SHIPS(CURRENTSHIP)-1
1370 CALL HCHAR(YLB+(ASC(COORDS$(I))-65)*2,XLB+(COORDS(I)-1)*2,SHIPCHAR,1)
1380 NEXT I
1390 RETURN
1400 REM SUBROUTINE ***PLAYERDEPLOYED***
1410 GOSUB 1790 :: REM CALL CLEARMENU
1420 CALL RENDERTEXT("PLAYER'S",YMENU,XMENU)
1430 CALL RENDERTEXT("SHIPS",YMENU+1,XMENU)
1440 CALL RENDERTEXT("DEPLOYED",YMENU+2,XMENU)
1450 RETURN
1460 REM SUBROUTINE ***CHECKHORIZONTAL***
1470 HORIZONTAL=0
1480 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1490 IF COORDS$(I-1)<>COORDS$(I) THEN RETURN
1500 NEXT I
1510 HORIZONTAL=1
1520 RETURN
1530 REM SUBROUTINE ***CHECKSEQUENCE***
1540 MINCOORD=SERIAL(0)
1550 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1560 MINCOORD=MIN(MINCOORD,SERIAL(I))
1570 NEXT I
1580 EXPSUM=MINCOORD
1590 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1600 EXPSUM=EXPSUM+MINCOORD+I
1610 NEXT I
1620 ACTSUM=SERIAL(0)
1630 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1640 ACTSUM=ACTSUM+SERIAL(I)
1650 NEXT I
1660 IF EXPSUM<>ACTSUM THEN SHIPERR=1
1670 RETURN
1680 REM SUBROUTINE ***CHECKOVERLAP***
1690 FOR I=0 TO CURRENTSHIP-1
1700 FOR J=0 TO SHIPS(I)-1
1710 STOREDLOC=(ASC(P1COORDS$(I,J))-64)*16+P1COORDS(I,J)
1720 FOR K=0 TO SHIPS(CURRENTSHIP)-1
1730 LOC=(ASC(COORDS$(K))-64)*16+COORDS(K)
1740 IF LOC=STOREDLOC THEN SHIPERR=1 :: RETURN
1750 NEXT K
1760 NEXT J
1770 NEXT I
1780 RETURN
1790 REM SUBROUTINE ***CLEARMENU***
1800 FOR I=0 TO 9 :: CALL HCHAR(YMENU+I,XMENU,32,10) :: NEXT I
1810 RETURN
1820 REM SUBROUTINE ***RENDERTEXT***
1830 SUB RENDERTEXT(TEXT$,ROW,COL)
1840 STRLEN=LEN(TEXT$)
1850 FOR I=0 TO STRLEN-1
1860 C$=SEG$(TEXT$,I+1,1)
1870 CALL HCHAR(ROW,COL+I,ASC(C$))
1880 NEXT I
1890 SUBEND