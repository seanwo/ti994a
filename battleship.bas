100 REM COPYRIGHT (C) 1987-2023 SEAN WOHLGEMUTH
110 REM ::
120 REM THIS PROGRAM IS FREE SOFTWARE: YOU CAN REDISTRIBUTE IT AND/OR MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE
130 REM AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION, EITHER VERSION 3 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER VERSION.
140 REM ::
150 REM THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY
160 REM OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
170 REM ::
180 REM YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE ALONG WITH THIS PROGRAM. IF NOT, SEE
190 REM <HTTPS://WWW.GNU.ORG/LICENSES/>.
200 REM ::
210 CALL CLEAR
220 CALL SCREEN(4)
230 RANDOMIZE
240 DIM SHIPS(1,4,4) :: REM SHIPS[PLAYER,SHIP,LOC]
250 CALL SETCHARS
260 CALL SETCOLORSCHEME
270 REM LABEL ***GAMELOOP***
280 CALL RENDERBOARDS
290 CALL DEPLOYSHIPS(SHIPS(,,))
300 CALL PLAYGAME(SHIPS(,,))
310 GOTO 280 :: REM GOTO GAMELOOP
320 END
330 REM SUBROUTINE ***SETCHARS***
340 SUB SETCHARS
350 CALL GETHOLECHAR(HOLECHAR)
360 CALL CHAR(HOLECHAR,"3C4299A5A599423C")
370 CALL GETFILLCHAR(FILLCHAR)
380 CALL CHAR(FILLCHAR,"0000000000000000")
390 CALL GETHITCHAR(HITCHAR)
400 CALL CHAR(HITCHAR,"3C7EFFFFFFFF7E3C")
410 CALL GETSHIPCHAR(SHIPCHAR)
420 CALL CHAR(SHIPCHAR,"3C4299A5A599423C")
430 CALL GETTENCHAR(TENCHAR)
440 CALL CHAR(TENCHAR,"004FC949494949EF")
450 CALL GETMISSCHAR(MISSCHAR)
460 CALL CHAR(MISSCHAR,"3C7EFFFFFFFF7E3C")
470 CALL GETSUNKCHAR(SUNKCHAR)
480 CALL CHAR(SUNKCHAR,"3C7EFFFFFFFF7E3C") 
490 SUBEND
500 REM SUBROUTINE ***SETCOLORSCHEME***
510 SUB SETCOLORSCHEME
520 CALL COLOR(9,2,8) :: REM BLACK ON CYAN
530 CALL COLOR(10,11,8) :: REM DARK YELLOW ON CYAN
540 CALL COLOR(11,2,15) :: REM BLACK ON GREY
550 CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
560 CALL COLOR(13,16,8) :: REM WHITE ON CYAN
570 CALL COLOR(14,9,8) :: REM MED RED ON CYAN
580 SUBEND
590 REM SUBROUTINE ***DEPLOYSHIPS***
600 SUB DEPLOYSHIPS(SHIPS(,,))
610 CALL DELOYPLAYER(SHIPS(,,))
620 CALL DEPLOYCOMPUTER(0,SHIPS(,,))
630 SUBEND
640 REM SUBROUTINE ***DELOYPLAYER***
650 SUB DELOYPLAYER(SHIPS(,,))
660 CALL GETNUMSHIPS(NUMSHIPS)
670 AUTODEPLOY$="N"
680 CALL MENUAUTODEPLOY(AUTODEPLOY$)
690 IF AUTODEPLOY$="Y" THEN CALL DEPLOYAUTO(SHIPS(,,)) ELSE CALL DEPLOYMANUAL(SHIPS(,,))
700 CALL RENDERSHIPSAUX(SHIPS(,,))
710 CALL RENDERHOLES
720 CALL MENUDEPLOYING
730 SUBEND
740 REM SUBROUTINE ***DEPLOYAUTO***
750 SUB DEPLOYAUTO(SHIPS(,,))
760 CALL GETMENUORIG(ROW,COL)
770 CALL RENDERTEXT("AUTO",(ROW+6),(COL))
780 CALL RENDERTEXT("DEPLOYING",(ROW+7),(COL))
790 CALL RENDERTEXT("SHIPS...",(ROW+8),(COL))
800 CALL DEPLOYCOMPUTER(1,SHIPS(,,))
810 CALL GETNUMSHIPS(NUMSHIPS)
820 FOR I=0 TO NUMSHIPS-1
830 CALL GETSHIPLEN(SHIPLEN,(I))
840 FOR J=0 TO SHIPLEN-1
850 SHIPS(0,I,J)=SHIPS(1,I,J)
860 NEXT J
870 NEXT I
880 SUBEND
890 REM SUBROUTINE ***DEPLOYMANUAL***
900 SUB DEPLOYMANUAL(SHIPS(,,))
910 CALL MENUCLEAR
920 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
930 CALL GETNUMSHIPS(NUMSHIPS)
940 FOR CURRENTSHIP=0 TO NUMSHIPS-1
950 REM LABEL ***DEPLOYMANSHIP***
960 CALL MENUDEPLOY((CURRENTSHIP))
970 CALL INPUTSHIP(SHIP(),(CURRENTSHIP))
980 PLAYER=0
990 ERRVAL=0
1000 CALL CHECKVALIDSHIP(ERRVAL,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1010 IF ERRVAL=1 THEN 960 :: REM GOTO DEPLOYMANSHIP
1020 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1030 FOR I=0 TO SHIPLEN-1
1040 SHIPS(0,CURRENTSHIP,I)=SHIP(I)
1050 NEXT I
1060 CALL RENDERSHIP((CURRENTSHIP),SHIP())
1070 NEXT CURRENTSHIP
1080 SUBEND
1090 REM SUBROUTINE ***DEPLOYCOMPUTER***
1100 SUB DEPLOYCOMPUTER(VISIBLE,SHIPS(,,))
1110 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
1120 CALL GETNUMSHIPS(NUMSHIPS)
1130 CALL GETBOARDORIG(ROW,COL)
1140 CALL GETSHIPCHAR(SHIPCHAR)
1150 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1160 REM LABEL ***DEPLOYCOMPSHIP***
1170 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1180 HORIZONTAL=INT(RND*2)
1190 SHIPBEGIN=INT(RND*(10-SHIPLEN))+1
1200 STATIC=INT(RND*10)+1
1210 FOR I=0 TO SHIPLEN-1
1220 IF HORIZONTAL=1 THEN SHIP(I)=16*STATIC+SHIPBEGIN+I ELSE SHIP(I)=16*(SHIPBEGIN+I)+STATIC
1230 NEXT I
1240 PLAYER=1
1250 ERRVAL=0
1260 CALL CHECKOVERLAP(ERRVAL,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1270 IF ERRVAL=1 THEN 1170 :: REM GOTO DEPLOYCOMPSHIP
1280 FOR I=0 TO SHIPLEN-1
1290 SHIPS(1,CURRENTSHIP,I)=SHIP(I)
1300 NEXT I
1310 CALL GETDEBUGFLAG(DEBUG)
1320 IF DEBUG=1 THEN VISIBLE=1
1330 IF VISIBLE=1 THEN CALL RENDERSHIP((CURRENTSHIP),SHIP())
1340 NEXT CURRENTSHIP
1350 SUBEND
1360 REM SUBROUTINE ***PLAYGAME***
1370 SUB PLAYGAME(SHIPS(,,))
1380 CALL MENUCLEAR
1390 CALL MENUTARGET
1400 DIM SHOTS(1,9,9) :: REM SHOTS[PLAYER, ROW,COL]
1410 FOR I=0 TO 9 :: FOR J=0 TO 9 :: SHOTS(0,I,J)=0 :: SHOTS(1,I,J)=0 :: NEXT J :: NEXT I
1420 DIM HITSLEFT(1,4) :: REM HITS[PLAYER,SHIP]
1430 CALL GETNUMSHIPS(NUMSHIPS)
1440 FOR I=0 TO NUMSHIPS-1
1450 CALL GETSHIPLEN(SHIPLEN,(I))
1460 HITSLEFT(0,I)=SHIPLEN :: HITSLEFT(1,I)=SHIPLEN
1470 NEXT I
1480 DIM SHIPSLEFT(1) :: REM SHIPSLEFT[PLAYER]
1490 SHIPSLEFT(0)=NUMSHIPS :: SHIPSLEFT(1)=NUMSHIPS
1500 CALL QUEUEINIT(Q(),QLEN)
1510 WINNER=-1
1520 CALL GETAUTOPLAY(AUTOPLAY)
1530 IF AUTOPLAY=1 THEN PLAYER=1 ELSE PLAYER=0
1540 REM LABEL ***TURNLOOP***
1550 IF PLAYER=0 THEN CALL PLAYERTURN(ROW,COL,SHOTS(,,))
1560 IF PLAYER=1 THEN CALL COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1570 SHOTS(PLAYER,ROW-1,COL-1)=1
1580 CALL PROCESSSHOT(WINNER,(ROW),(COL),(PLAYER),HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1590 IF WINNER=0 OR WINNER=1 THEN 1640 :: REM GOTO GAMEOVER
1600 CALL GETAUTOPLAY(AUTOPLAY)
1610 IF AUTOPLAY=0 THEN PLAYER=1-PLAYER
1620 GOTO 1550 :: REM GOTO TURNLOOP
1630 REM LABEL ***GAMEOVER***
1640 PLAYAGAIN$="N"
1650 CALL MENUGAMEOVER(PLAYAGAIN$,(WINNER))
1660 IF PLAYAGAIN$="Y" THEN 1690 :: REM SUBEND
1670 CALL CLEAR
1680 END
1690 SUBEND
1700 REM SUBROUTINE ***PLAYERTURN***
1710 SUB PLAYERTURN(ROW,COL,SHOTS(,,))
1720 REM LABEL ***INPUTLOOP***
1730 CALL INPUTTARGET(ROW$,COL)
1740 ROW=ASC(ROW$)-64
1750 CALL CHECKVALIDSHOT(ERRVAL,(ROW),(COL),0,SHOTS(,,))
1760 IF ERRVAL=1 THEN 1730 :: REM GOTO INPUTLOOP
1770 SUBEND
1780 REM SUBROUTINE ***COMPUTERTURN***
1790 SUB COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1800 CALL GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
1810 CALL GETMENUORIG(MROW,MCOL)
1820 TEXT$=CHR$(64+ROW)&STR$(COL)
1830 CALL HCHAR(MROW+8,MCOL,32,10)
1840 CALL RENDERTEXT(TEXT$,(MROW+8),(MCOL))
1850 SUBEND
1860 REM SUBROUTINE ***PROCESSSHOT***
1870 SUB PROCESSSHOT(WINNER,ROW,COL,PLAYER,HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1880 WINNER=-1 :: HIT=0 :: SHIP=0
1890 LOC=16*ROW+COL
1900 CALL CHECKHIT(HIT,SHIP,(LOC),(1-PLAYER),SHIPS(,,))
1910 IF PLAYER=1 AND HIT=1 THEN CALL QUEUEADD(Q(),QLEN,(LOC),ERRVAL)
1920 CALL RENDERSHOT((PLAYER),(HIT),(ROW),(COL))
1930 IF HIT=0 THEN 2050 :: REM SUBEND
1940 HITSLEFT(1-PLAYER,SHIP)=HITSLEFT(1-PLAYER,SHIP)-1
1950 IF HITSLEFT(1-PLAYER,SHIP)>0 THEN 2050 :: REM SUBEND
1960 SHIPSLEFT(1-PLAYER)=SHIPSLEFT(1-PLAYER)-1
1970 CALL RENDERSUNK((1-PLAYER),(SHIP),SHIPS(,,))
1980 IF SHIPSLEFT(1-PLAYER)=0 THEN WINNER=PLAYER
1990 IF PLAYER=0 THEN 2050 :: REM SUBEND
2000 CALL GETSHIPLEN(SHIPLEN,(SHIP))
2010 FOR I=0 TO SHIPLEN-1
2020 SUNKLOC=SHIPS(0,SHIP,I)
2030 CALL QUEUEDEL(Q(),QLEN,(SUNKLOC),ERRVAL)
2040 NEXT I
2050 SUBEND
2060 REM SUBROUTINE ***GAMEAI***
2070 SUB GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
2080 REM LABEL ***AISTART***
2090 IF QLEN<=OLDQLEN THEN OFFSET=0
2100 IF QLEN=0 THEN GOSUB 2220 :: REM GOSUB EMPTYQUEUE
2110 IF QLEN=0 THEN GOTO 2170 :: REM GOTO VALIDATESHOT
2120 IF OFFSET=0 THEN GOSUB 2260 :: REM GOSUB OFFSETZERO
2130 OFFSET=OFFSET+1
2140 ROW=INT(Q(0)/16) :: COL=Q(0)-INT(Q(0)/16)*16
2150 ROW=ROW+OFFSET*RDIR :: COL=COL+OFFSET*CDIR
2160 REM LABEL ***VALIDATESHOT***
2170 CALL CHECKVALIDSHOT(ERRVAL,(ROW),(COL),1,SHOTS(,,))
2180 IF ERRVAL=1 THEN OFFSET=0 :: GOTO 2090 :: REM GOTO AISTART
2190 OLDQLEN=QLEN
2200 GOTO 2330 :: REM GOTO SUBEND
2210 REM GOSUB ***EMPTYQUEUE***
2220 ROW=INT(RND*10)+1 :: COL=INT(RND*10)+1
2230 RDIR=0 :: CDIR=0 :: REVERSED=0 :: OFFSET=0
2240 RETURN
2250 REM GOSUB ***OFFSETZERO***
2260 IF REVERSED=1 THEN TMP=RDIR :: RDIR=CDIR :: CDIR=TMP :: REVERSED=0  :: RETURN
2270 IF RDIR<>0 THEN RDIR=RDIR*-1:: REVERSED=1 :: RETURN
2280 IF CDIR<>0 THEN CDIR=CDIR*-1:: REVERSED=1 :: RETURN
2290 DIR=INT(RND*4)
2300 IF DIR=0 OR DIR=2 THEN CDIR=DIR-1 ELSE RDIR=DIR-2
2310 REVERSED=0
2320 RETURN
2330 SUBEND
2340 REM SUBROUTINE ***RENDERTEXT***
2350 SUB RENDERTEXT(TEXT$,ROW,COL)
2360 STRLEN=LEN(TEXT$)
2370 FOR I=0 TO STRLEN-1
2380 C$=SEG$(TEXT$,I+1,1)
2390 CALL HCHAR(ROW,COL+I,ASC(C$))
2400 NEXT I
2410 SUBEND
2420 REM SUBROUTINE ***RENDERBOARDS***
2430 SUB RENDERBOARDS
2440 CALL CLEAR
2450 DISPLAY AT(1,9):"BATTLESHIP"
2460 CALL RENDERBOARD
2470 CALL RENDERAUX
2480 SUBEND
2490 REM SUBROUTINE ***RENDERBOARD***
2500 SUB RENDERBOARD
2510 CALL RENDERBACKBOARD
2520 CALL RENDERAXES
2530 CALL RENDERHOLES
2540 SUBEND
2550 REM SUBROUTINE ***RENDERBACKBOARD***
2560 SUB RENDERBACKBOARD
2570 CALL GETBOARDORIG(ROW,COL)
2580 CALL GETFILLCHAR(FILLCHAR)
2590 FOR I=0 TO 18
2600 CALL HCHAR(ROW+I,COL,FILLCHAR,19)
2610 NEXT I
2620 SUBEND
2630 REM SUBROUTINE ***RENDERHOLES***
2640 SUB RENDERHOLES
2650 CALL GETBOARDORIG(ROW,COL)
2660 CALL GETHOLECHAR(HOLECHAR)
2670 FOR I=0 TO 18 STEP 2
2680 FOR J=0 TO 18 STEP 2
2690 CALL HCHAR(ROW+I,COL+J,HOLECHAR,1)
2700 NEXT J
2710 NEXT I
2720 SUBEND
2730 REM SUBROUTINE ***RENDERAXES***
2740 SUB RENDERAXES
2750 CALL GETBOARDORIG(ROW,COL)
2760 CALL GETTENCHAR(TENCHAR)
2770 REM RENDER X-AXIS (NUMBERS)
2780 FOR I=0 TO 8
2790 CALL HCHAR(ROW-2,I*2+COL,49+I,1)
2800 NEXT I
2810 CALL HCHAR(ROW-2,COL+18,TENCHAR,1)
2820 REM RENDER Y-AXIS (LETTERS)
2830 FOR I=1 TO 10
2840 CALL HCHAR(ROW-2+I*2,COL-2,64+I,1)
2850 NEXT I
2860 SUBEND
2870 REM SUBROUTINE ***RENDERAUX***
2880 SUB RENDERAUX
2890 CALL GETAUXORIG(ROW,COL)
2900 CALL GETHOLECHAR(HOLECHAR)
2910 FOR I=0 TO 9
2920 CALL HCHAR(ROW+I,COL,HOLECHAR,10)
2930 NEXT I
2940 SUBEND
2950 REM SUBROUTINE ***RENDERSHIP***
2960 SUB RENDERSHIP(CURRENTSHIP,SHIP())
2970 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
2980 CALL GETSHIPCHAR(SHIPCHAR)
2990 CALL GETBOARDORIG(ROW,COL)
3000 FOR I=0 TO SHIPLEN-1
3010 ROFFSET=INT(SHIP(I)/16) :: COFFSET=SHIP(I)-INT(SHIP(I)/16)*16
3020 CALL HCHAR(ROW+(ROFFSET-1)*2,COL+(COFFSET-1)*2,SHIPCHAR,1)
3030 NEXT I
3040 SUBEND
3050 REM SUBROUTINE ***RENDERSHIPSAUX***
3060 SUB RENDERSHIPSAUX(SHIPS(,,))
3070 CALL GETNUMSHIPS(NUMSHIPS)
3080 CALL GETAUXORIG(ROW,COL)
3090 CALL GETSHIPCHAR(SHIPCHAR)
3100 FOR I=0 TO NUMSHIPS-1
3110 CALL GETSHIPLEN(SHIPLEN,(I))
3120 FOR J=0 TO SHIPLEN-1
3130 ROFFSET=INT(SHIPS(0,I,J)/16) :: COFFSET=SHIPS(0,I,J)-INT(SHIPS(0,I,J)/16)*16
3140 CALL HCHAR(ROW+ROFFSET-1,COL+COFFSET-1,SHIPCHAR,1)
3150 NEXT J
3160 NEXT I
3170 SUBEND
3180 REM SUBROUTINE ***RENDERSHOT***
3190 SUB RENDERSHOT(PLAYER,HIT,SROW,SCOL)
3200 CALL GETMENUORIG(ROW,COL)
3210 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
3220 IF HIT=0 THEN TEXT$="MISS" :: NOISE=-3 ELSE TEXT$="HIT" :: NOISE=-8
3230 CALL HCHAR(ROW,COL,32,10)
3240 CALL RENDERTEXT((TEXT$),(ROW),(COL))
3250 IF HIT=1 THEN CALL GETHITCHAR(CHARVAL) ELSE CALL GETMISSCHAR(CHARVAL)
3260 IF PLAYER=1 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3270 TROW=SROW-1 :: TCOL=SCOL-1
3280 IF PLAYER=0 THEN TROW=TROW*2 :: TCOL=TCOL*2
3290 CALL HCHAR(ROW+TROW,COL+TCOL,CHARVAL,1)
3300 CALL SOUND(500,NOISE,2) :: CALL SOUND(1,110,30)
3310 SUBEND
3320 REM SUBROUTINE ***RENDERSUNK***
3330 SUB RENDERSUNK(PLAYER,SHIP,SHIPS(,,))
3340 CALL GETSHIPLEN(SHIPLEN,(SHIP))
3350 IF PLAYER=0 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3360 CALL GETSUNKCHAR(SUNKCHAR)
3370 FOR I=0 TO SHIPLEN-1
3380 LOC=SHIPS(PLAYER,SHIP,I)
3390 TROW=INT(LOC/16)-1 :: TCOL=LOC-INT(LOC/16)*16-1
3400 IF PLAYER=1 THEN TROW=TROW*2 :: TCOL=TCOL*2
3410 CALL HCHAR(ROW+TROW,COL+TCOL,SUNKCHAR,1)
3420 NEXT I
3430 CALL GETSHIPNAME(SHIPNAME$,(SHIP))
3440 CALL GETMENUORIG(ROW,COL)
3450 IF PLAYER=1 THEN ROW=ROW+4 ELSE ROW=ROW+9
3460 CALL HCHAR(ROW,COL,32,10)
3470 CALL RENDERTEXT("DESTROYED",(ROW),(COL))
3480 CALL HCHAR(ROW,COL,32,10)
3490 CALL RENDERTEXT((SHIPNAME$),(ROW),(COL))
3500 CALL SOUND(1000,-6,2) :: CALL SOUND(1,110,30)
3510 SUBEND
3520 REM SUBROUTINE ***MENUCLEAR***
3530 SUB MENUCLEAR
3540 CALL GETMENUORIG(ROW,COL)
3550 FOR I=0 TO 9 :: CALL HCHAR(ROW+I,COL,32,10) :: NEXT I
3560 SUBEND
3570 REM SUBROUTINE ***MENUAUTODEPLOY***
3580 SUB MENUAUTODEPLOY(AUTODEPLOY$)
3590 CALL GETMENUORIG(ROW,COL)
3600 CALL MENUCLEAR
3610 CALL RENDERTEXT("AUTO",(ROW),(COL))
3620 CALL RENDERTEXT("DEPLOY",(ROW+1),(COL))
3630 CALL RENDERTEXT("YOUR",(ROW+2),(COL))
3640 CALL RENDERTEXT("SHIPS?",(ROW+3),(COL))
3650 CALL RENDERTEXT("[Y/N]:",(ROW+4),(COL))
3660 REM LABEL ***ASKAUTO***
3670 ACCEPT AT(ROW+4,COL+4)VALIDATE("YN")BEEP SIZE(1):AUTODEPLOY$
3680 IF AUTODEPLOY$="" THEN  3670 :: REM GOTO ASKAUTO
3690 SUBEND
3700 REM SUBROUTINE ***MENUDEPLOY***
3710 SUB MENUDEPLOY(CURRENTSHIP)
3720 CALL GETMENUORIG(ROW,COL)
3730 CALL RENDERTEXT("INPUT THE",(ROW),(COL))
3740 CALL RENDERTEXT("LOCATIONS",(ROW+1),(COL))
3750 CALL RENDERTEXT("FOR YOUR",(ROW+2),(COL))
3760 CALL RENDERTEXT("          ",(ROW+3),(COL))
3770 CALL GETSHIPNAME(SHIPNAME$,(CURRENTSHIP))
3780 CALL RENDERTEXT((SHIPNAME$),(ROW+3),(COL))
3790 CALL RENDERTEXT("[IE. C3]:",(ROW+4),(COL))
3800 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3810 FOR I=1 TO 5
3820 IF I>SHIPLEN THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
3830 CALL RENDERTEXT((TEXT$),(ROW+4+I),(COL))
3840 NEXT I
3850 SUBEND
3860 REM SUBROUTINE ***MENUTARGET***
3870 SUB MENUTARGET
3880 CALL GETMENUORIG(ROW,COL)
3890 CALL RENDERTEXT("PLAYER",(ROW),(COL))
3900 CALL RENDERTEXT("TARGET",(ROW+1),(COL))
3910 CALL RENDERTEXT("[IE. C3]",(ROW+2),(COL))
3920 CALL RENDERTEXT("COMPUTER",(ROW+6),(COL))
3930 CALL RENDERTEXT("TARGET",(ROW+7),(COL))
3940 SUBEND
3950 REM SUBROUTINE ***MENUDEPLOYING***
3960 SUB MENUDEPLOYING
3970 CALL GETMENUORIG(ROW,COL)
3980 CALL MENUCLEAR
3990 CALL RENDERTEXT("PLAYER'S",(ROW),(COL))
4000 CALL RENDERTEXT("SHIPS",(ROW+1),(COL))
4010 CALL RENDERTEXT("DEPLOYED.",(ROW+2),(COL))
4020 CALL RENDERTEXT("COMPUTER",(ROW+4),(COL))
4030 CALL RENDERTEXT("DEPLOYING",(ROW+5),(COL))
4040 CALL RENDERTEXT("SHIPS...",(ROW+6),(COL))
4050 SUBEND
4060 REM SUBROUTINE ***MENUGAMEOVER***
4070 SUB MENUGAMEOVER(PLAYAGAIN$,WINNER)
4080 CALL GETMENUORIG(ROW,COL)
4090 CALL MENUCLEAR
4100 CALL RENDERTEXT("GAME OVER",(ROW),(COL))
4110 CALL RENDERTEXT("WINNER:",(ROW+1),(COL))
4120 IF WINNER=0 THEN TEXT$="PLAYER" ELSE TEXT$="COMPUTER"
4130 CALL RENDERTEXT(TEXT$,(ROW+2),(COL))
4140 CALL RENDERTEXT("PLAY", (ROW+4),(COL))
4150 CALL RENDERTEXT("AGAIN?",(ROW+5),(COL))
4160 CALL RENDERTEXT("[Y/N]:",(ROW+6),(COL))
4170 REM LABEL ***ASKPLAYAGAIN***
4180 ACCEPT AT(ROW+6,COL+4)VALIDATE("YN")BEEP SIZE(1):PLAYAGAIN$
4190 IF PLAYAGAIN$="" THEN  4180 :: REM GOTO ASKPLAYAGAIN
4200 SUBEND
4210 REM SUBROUTINE ***INPUTPOS***
4220 SUB INPUTPOS(ROW,COL,INPUTROW$,INPUTCOL)
4230 ON WARNING NEXT
4240 REM LABEL ***GETROW***
4250 ACCEPT AT(ROW,COL-2)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):INPUTROW$
4260 IF INPUTROW$="" THEN  4250 :: REM GOTO GETROW
4270 REM LABEL ***GETCOL***
4280 ACCEPT AT(ROW,COL-2+1)VALIDATE(DIGIT)BEEP SIZE(2):INPUTCOL
4290 IF INPUTCOL>10 THEN  4280 :: REM GOTO GETCOL
4300 IF INPUTCOL<1 THEN  4280 :: REM GOTO GETCOL
4310 ON WARNING PRINT
4320 SUBEND
4330 REM SUBROUTINE ***INPUTSHIP***
4340 SUB INPUTSHIP(SHIP(),CURRENTSHIP)
4350 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4360 CALL GETMENUORIG(ROW,COL)
4370 FOR I=0 TO SHIPLEN-1
4380 INPUTROW$="" :: INPUTCOL=0
4390 CALL INPUTPOS((ROW+5+I),(COL+5),INPUTROW$,INPUTCOL)
4400 SHIP(I)=16*(ASC(INPUTROW$)-64)+INPUTCOL
4410 NEXT I
4420 SUBEND
4430 REM SUBROUTINE ***INPUTTARGET***
4440 SUB INPUTTARGET(TARGETROW$,TARGETCOL)
4450 CALL GETMENUORIG(ROW,COL)
4460 CALL HCHAR(ROW+3,COL,32,10)
4470 CALL INPUTPOS((ROW+3),(COL),TARGETROW$,TARGETCOL)
4480 SUBEND
4490 REM SUBROUTINE ***CHECKVALIDSHIP***
4500 SUB CHECKVALIDSHIP(ERRVAL,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4510 ERRVAL=0
4520 HORIZONTAL=0
4530 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4540 CALL CHECKSTRAIGHT(ERRVAL,(CURRENTSHIP),SHIP())
4550 IF ERRVAL=1 THEN 4650 :: REM SUBEND
4560 CALL CHECKHORIZONTAL(HORIZONTAL,(CURRENTSHIP),SHIP())
4570 DIM SEQUENCE(4) :: FOR I=0 TO 4 :: SEQUENCE(I)=0 :: NEXT I
4580 FOR I=0 TO SHIPLEN-1
4590 ROW=INT(SHIP(I)/16) :: COL=SHIP(I)-INT(SHIP(I)/16)*16
4600 IF HORIZONTAL=1 THEN SEQUENCE(I)=COL ELSE SEQUENCE(I)=ROW
4610 NEXT I
4620 CALL CHECKSEQUENTIAL(ERRVAL,(CURRENTSHIP),SEQUENCE())
4630 IF ERRVAL=1 THEN 4650 :: REM SUBEND
4640 CALL CHECKOVERLAP(ERRVAL,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
4650 SUBEND
4660 REM SUBROUTINE ***CHECKVALIDSHOT***
4670 SUB CHECKVALIDSHOT(ERRVAL,ROW,COL,PLAYER,SHOTS(,,))
4680 ERRVAL=0
4690 IF ROW<1 OR ROW>10 OR COL<1 OR COL>10 THEN ERRVAL=1 :: GOTO  4710 :: REM GOTO SUBEND
4700 IF SHOTS(PLAYER,ROW-1,COL-1)<>0 THEN ERRVAL=1
4710 SUBEND
4720 REM SUBROUTINE ***CHECKHIT***
4730 SUB CHECKHIT(HIT,SHIP,LOC,PLAYER,SHIPS(,,))
4740 HIT=0
4750 CALL GETNUMSHIPS(NUMSHIPS)
4760 FOR I=0 TO NUMSHIPS-1
4770 CALL GETSHIPLEN(SHIPLEN,(I))
4780 FOR J=0 TO SHIPLEN-1
4790 IF SHIPS(PLAYER,I,J)=LOC THEN HIT=1 :: SHIP=I :: GOTO 4820 :: REM SUBEND
4800 NEXT J
4810 NEXT I
4820 SUBEND
4830 REM SUBROUTINE ***CHECKHORIZONTAL***
4840 SUB CHECKHORIZONTAL(HORIZONTAL,CURRENTSHIP,SHIP())
4850 HORIZONTAL=0
4860 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4870 FOR I=1 TO SHIPLEN-1
4880 PREV=INT(SHIP(I-1)/16) :: CURR=INT(SHIP(I)/16)
4890 IF PREV<>CURR THEN 4920 :: REM SUBEND
4900 NEXT I
4910 HORIZONTAL=1
4920 SUBEND
4930 REM SUBROUTINE ***CHECKSTRAIGHT***
4940 SUB CHECKSTRAIGHT(ERRVAL,CURRENTSHIP,SHIP())
4950 ERRVAL=0
4960 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4970 FOR I=1 TO SHIPLEN-1
4980 ROW=INT(SHIP(I)/16) :: COL=SHIP(I)-INT(SHIP(I)/16)*16
4990 PROW=INT(SHIP(I-1)/16) ::PCOL=SHIP(I-1)-INT(SHIP(I-1)/16)*16
5000 IF (ROW<>PROW) AND (COL<>PCOL) THEN ERRVAL=1 :: GOTO 5020 :: REM SUBEND
5010 NEXT I
5020 SUBEND
5030 REM SUBROUTINE ***CHECKSEQUENTIAL***
5040 SUB CHECKSEQUENTIAL(ERRVAL,CURRENTSHIP,SEQUENCE())
5050 ERRVAL=0
5060 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
5070 MINCOORD=SEQUENCE(0)
5080 FOR I=1 TO SHIPLEN-1
5090 MINCOORD=MIN(MINCOORD,SEQUENCE(I))
5100 NEXT I
5110 EXPSUM=MINCOORD
5120 FOR I=1 TO SHIPLEN-1
5130 EXPSUM=EXPSUM+MINCOORD+I
5140 NEXT I
5150 ACTSUM=SEQUENCE(0)
5160 FOR I=1 TO SHIPLEN-1
5170 ACTSUM=ACTSUM+SEQUENCE(I)
5180 NEXT I
5190 IF EXPSUM<>ACTSUM THEN ERRVAL=1
5200 SUBEND
5210 REM SUBROUTINE ***CHECKOVERLAP***
5220 SUB CHECKOVERLAP(ERRVAL,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
5230 ERRVAL=0
5240 CALL GETSHIPLEN(CURRENTSHIPLEN,(CURRENTSHIP))
5250 FOR I=0 TO CURRENTSHIP-1
5260 CALL GETSHIPLEN(SHIPLEN,(I))
5270 FOR J=0 TO SHIPLEN-1
5280 STOREDLOC=SHIPS(PLAYER,I,J)
5290 FOR K=0 TO CURRENTSHIPLEN-1
5300 LOC=SHIP(K)
5310 IF LOC=STOREDLOC THEN ERRVAL=1 :: GOTO 5350 :: REM SUBEND
5320 NEXT K
5330 NEXT J
5340 NEXT I
5350 SUBEND
5360 REM SUBROUTINE ***QUEUESIZE***
5370 SUB QUEUESIZE(QSIZE)
5380 QSIZE=11
5390 SUBEND
5400 REM SUBROUTINE ***QUEUEINIT***
5410 SUB QUEUEINIT(Q(),QLEN)
5420 CALL QUEUESIZE(QSIZE)
5430 FOR I=0 TO QSIZE-1 :: Q(I)=-1 :: NEXT I
5440 QLEN=0
5450 SUBEND
5460 REM SUBROUTINE ***QUEUEADD***
5470 SUB QUEUEADD(Q(),QLEN,VALUE,ERRVAL)
5480 CALL QUEUESIZE(QSIZE)
5490 IF QLEN<QSIZE-1 THEN Q(QLEN)=VALUE :: QLEN=QLEN+1 :: ERRVAL=0 ELSE ERRVAL=1
5500 SUBEND
5510 REM SUBROUTINE ***QUEUEDEL***
5520 SUB QUEUEDEL(Q(),QLEN,VALUE,ERRVAL)
5530 DINDEX=-1 :: ERRVAL=-1
5540 FOR I=0 TO QLEN
5550 IF VALUE=Q(I) THEN DINDEX=I :: GOTO 5590 :: REM GOTO CONTRACT
5560 NEXT I
5570 GOTO 5630 :: REM SUBEND
5580 REM LABEL ***CONTRACT***
5590 FOR I=DINDEX TO QLEN-1
5600 Q(I)=Q(I+1)
5610 NEXT I
5620 QLEN=QLEN-1 :: ERRVAL=0
5630 SUBEND
5640 REM SUBROUTINE ***GETHOLECHAR***
5650 SUB GETHOLECHAR(CHARVAL)
5660 CHARVAL=96
5670 SUBEND
5680 REM SUBROUTINE ***GETFILLCHAR***
5690 SUB GETFILLCHAR(CHARVAL)
5700 CHARVAL=97
5710 SUBEND
5720 REM SUBROUTINE ***GETHITCHAR***
5730 SUB GETHITCHAR(CHARVAL)
5740 CHARVAL=104
5750 SUBEND
5760 REM SUBROUTINE ***GETSHIPCHAR***
5770 SUB GETSHIPCHAR(CHARVAL)
5780 CHARVAL=112
5790 SUBEND
5800 REM SUBROUTINE ***GETTENCHAR***
5810 SUB GETTENCHAR(CHARVAL)
5820 CHARVAL=120
5830 SUBEND
5840 REM SUBROUTINE ***GETMISSCHAR***
5850 SUB GETMISSCHAR(CHARVAL)
5860 CHARVAL=128
5870 SUBEND
5880 REM SUBROUTINE ***GETSUNKCHAR***
5890 SUB GETSUNKCHAR(CHARVAL)
5900 CHARVAL=136
5910 SUBEND
5920 REM SUBROUTINE ***GETNUMSHIPS***
5930 SUB GETNUMSHIPS(NUMSHIPS)
5940 NUMSHIPS=5
5950 SUBEND
5960 REM SUBROUTINE ***GETSHIPLEN***
5970 SUB GETSHIPLEN(SHIPLEN,INDEX)
5980 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
5990 SHIPLEN=SHIPLENS(INDEX)
6000 SUBEND
6010 REM SUBROUTINE ***GETSHIPNAME***
6020 SUB GETSHIPNAME(SHIPNAME$,INDEX)
6030 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
6040 SHIPNAME$=SHIPNAMES$(INDEX)
6050 SUBEND
6060 REM SUBROUTINE ***GETBOARDORIG***
6070 SUB GETBOARDORIG(ROW,COL)
6080 ROW=5 :: COL=3
6090 SUBEND
6100 REM SUBROUTINE ***GETAUXORIG***
6110 SUB GETAUXORIG(ROW,COL)
6120 ROW=3 :: COL=23
6130 SUBEND
6140 REM SUBROUTINE ***GETMENUORIG***
6150 SUB GETMENUORIG(ROW,COL)
6160 ROW=14 :: COL=23
6170 SUBEND
6180 REM SUBROUTINE ***GETDEBUGFLAG***
6190 SUB GETDEBUGFLAG(DEBUG)
6200 DEBUG=0
6210 SUBEND
6220 REM SUBROUTINE ***GETAUTOPLAY***
6230 SUB GETAUTOPLAY(AUTOPLAY)
6240 AUTOPLAY=0
6250 SUBEND