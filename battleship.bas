100 REM COPYRIGHT (C) 1987-2023 SEAN WOHLGEMUTH
110 REM ::
120 REM THIS PROGRAM IS FREE SOFTWARE: YOU CAN REDISTRIBUTE IT AND/OR MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE
130 REM AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION, EITHER VERSION 3 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER VERSION.
140 REM ::
150 REM THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY
160 REM OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
170 REM ::
180 REM YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE ALONG WITH THIS PROGRAM. IF NOT, SEE
190 REM <HTTPS://WWW.GNU.ORG/LICENSES/>.
200 REM ::
210 CALL CLEAR
220 CALL SCREEN(4)
230 RANDOMIZE
240 DIM SHIPS(1,4,4) :: REM SHIPS[PLAYER,SHIP,LOC]
250 CALL SETCHARS
260 CALL SETCOLORSCHEME
270 REM LABEL ***GAMELOOP***
280 CALL RENDERBOARDS
290 CALL DEPLOYSHIPS(SHIPS(,,))
300 CALL PLAYGAME(SHIPS(,,))
310 GOTO 270 :: REM GOTO GAMELOOP
320 END
330 REM SUBROUTINE ***SETCHARS***
340 SUB SETCHARS
350 CALL GETHOLECHAR(HOLECHAR)
360 CALL CHAR(HOLECHAR,"3C4299A5A599423C")
370 CALL GETFILLCHAR(FILLCHAR)
380 CALL CHAR(FILLCHAR,"0000000000000000")
390 CALL GETHITCHAR(HITCHAR)
400 CALL CHAR(HITCHAR,"3C7EFFFFFFFF7E3C")
410 CALL GETSHIPCHAR(SHIPCHAR)
420 CALL CHAR(SHIPCHAR,"3C4299A5A599423C")
430 CALL GETTENCHAR(TENCHAR)
440 CALL CHAR(TENCHAR,"004FC949494949EF")
450 CALL GETMISSCHAR(MISSCHAR)
460 CALL CHAR(MISSCHAR,"3C7EFFFFFFFF7E3C")
470 CALL GETSUNKCHAR(SUNKCHAR)
480 CALL CHAR(SUNKCHAR,"3C7EFFFFFFFF7E3C") 
490 SUBEND
500 REM SUBROUTINE ***SETCOLORSCHEME***
510 SUB SETCOLORSCHEME
520 CALL COLOR(9,2,8) :: REM BLACK ON CYAN
530 CALL COLOR(10,11,8) :: REM DARK YELLOW ON CYAN
540 CALL COLOR(11,2,15) :: REM BLACK ON GREY
550 CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
560 CALL COLOR(13,16,8) :: REM WHITE ON CYAN
570 CALL COLOR(14,9,8) :: REM MED RED ON CYAN
580 SUBEND
590 REM SUBROUTINE ***DEPLOYSHIPS***
600 SUB DEPLOYSHIPS(SHIPS(,,))
610 CALL DELOYPLAYER(SHIPS(,,))
620 CALL DEPLOYCOMPUTER(0,SHIPS(,,))
630 SUBEND
640 REM SUBROUTINE ***DELOYPLAYER***
650 SUB DELOYPLAYER(SHIPS(,,))
660 CALL GETNUMSHIPS(NUMSHIPS)
670 AUTODEPLOY$="N"
680 CALL MENUAUTODEPLOY(AUTODEPLOY$)
690 IF AUTODEPLOY$="Y" THEN CALL DEPLOYAUTO(SHIPS(,,)) ELSE CALL DEPLOYMANUAL(SHIPS(,,))
700 CALL RENDERSHIPSAUX(SHIPS(,,))
710 CALL RENDERHOLES
720 CALL MENUDEPLOYING
730 SUBEND
740 REM SUBROUTINE ***DEPLOYAUTO***
750 SUB DEPLOYAUTO(SHIPS(,,))
760 CALL GETMENUORIG(ROW,COL)
770 CALL RENDERTEXT("AUTO",(ROW+6),(COL))
780 CALL RENDERTEXT("DEPLOYING",(ROW+7),(COL))
790 CALL RENDERTEXT("SHIPS...",(ROW+8),(COL))
800 CALL DEPLOYCOMPUTER(1,SHIPS(,,))
810 CALL GETNUMSHIPS(NUMSHIPS)
820 FOR I=0 TO NUMSHIPS-1
830 CALL GETSHIPLEN(SHIPLEN,(I))
840 FOR J=0 TO SHIPLEN-1
850 SHIPS(0,I,J)=SHIPS(1,I,J)
860 NEXT J
870 NEXT I
880 SUBEND
890 REM SUBROUTINE ***DEPLOYMANUAL***
900 SUB DEPLOYMANUAL(SHIPS(,,))
910 CALL MENUCLEAR
920 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
930 CALL GETNUMSHIPS(NUMSHIPS)
940 FOR CURRENTSHIP=0 TO NUMSHIPS-1
950 REM LABEL ***DEPLOYMANSHIP***
960 CALL MENUDEPLOY((CURRENTSHIP))
970 CALL INPUTSHIP(SHIP(),(CURRENTSHIP))
980 PLAYER=0
990 SHIPERR=0
1000 CALL CHECKVALIDSHIP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1010 IF SHIPERR=1 THEN 950 :: REM GOTO DEPLOYMANSHIP
1020 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1030 FOR I=0 TO SHIPLEN-1
1040 SHIPS(0,CURRENTSHIP,I)=SHIP(I)
1050 NEXT I
1060 CALL RENDERSHIP((CURRENTSHIP),SHIP())
1070 NEXT CURRENTSHIP
1080 SUBEND
1090 REM SUBROUTINE ***DEPLOYCOMPUTER***
1100 SUB DEPLOYCOMPUTER(VISIBLE,SHIPS(,,))
1110 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
1120 CALL GETNUMSHIPS(NUMSHIPS)
1130 CALL GETBOARDORIG(ROW,COL)
1140 CALL GETSHIPCHAR(SHIPCHAR)
1150 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1160 REM LABEL ***DEPLOYCOMPSHIP***
1170 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1180 HORIZONTAL=INT(RND*2)
1190 SHIPBEGIN=INT(RND*(10-SHIPLEN))+1
1200 STATIC=INT(RND*10)+1
1210 FOR I=0 TO SHIPLEN-1
1220 IF HORIZONTAL=1 THEN SHIP(I)=16*STATIC+SHIPBEGIN+I ELSE SHIP(I)=16*(SHIPBEGIN+I)+STATIC
1230 NEXT I
1240 PLAYER=1
1250 SHIPERR=0
1260 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1270 IF SHIPERR=1 THEN 1160 :: REM GOTO DEPLOYCOMPSHIP
1280 FOR I=0 TO SHIPLEN-1
1290 SHIPS(1,CURRENTSHIP,I)=SHIP(I)
1300 NEXT I
1310 CALL GETDEBUGFLAG(DEBUG)
1320 IF DEBUG=1 THEN VISIBLE=1
1330 IF VISIBLE=1 THEN CALL RENDERSHIP((CURRENTSHIP),SHIP())
1340 NEXT CURRENTSHIP
1350 SUBEND
1360 REM SUBROUTINE ***PLAYGAME***
1370 SUB PLAYGAME(SHIPS(,,))
1380 CALL MENUCLEAR
1390 CALL MENUTARGET
1400 DIM SHOTS(1,9,9) :: REM SHOTS[PLAYER, ROW,COL]
1410 FOR I=0 TO 9 :: FOR J=0 TO 9 :: SHOTS(0,I,J)=0 :: SHOTS(1,I,J)=0 :: NEXT J :: NEXT I
1420 DIM HITSLEFT(1,4) :: REM HITS[PLAYER,SHIP]
1430 CALL GETNUMSHIPS(NUMSHIPS)
1440 FOR I=0 TO NUMSHIPS-1
1450 CALL GETSHIPLEN(SHIPLEN,I)
1460 HITSLEFT(0,I)=SHIPLEN :: HITSLEFT(1,I)=SHIPLEN
1470 NEXT I
1480 DIM SHIPSLEFT(1) :: REM SHIPSLEFT[PLAYER]
1490 SHIPSLEFT(0)=NUMSHIPS :: SHIPSLEFT(1)=NUMSHIPS
1500 CALL QUEUEINIT(Q(),QLEN)
1510 WINNER=-1
1520 CALL GETAUTOPLAY(AUTOPLAY)
1530 IF AUTOPLAY=1 THEN PLAYER=1 ELSE PLAYER=0
1540 REM LABEL ***TURNLOOP***
1550 IF PLAYER=0 THEN CALL PLAYERTURN(ROW,COL,SHOTS(,,))
1560 IF PLAYER=1 THEN CALL COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1570 ERRORVAL=0
1580 IF ERRORVAL=1 THEN 1540 :: REM GOTO TURNLOOP
1590 SHOTS(PLAYER,ROW-1,COL-1)=1
1600 CALL PROCESSSHOT(WINNER,(ROW),(COL),(PLAYER),HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1610 IF WINNER=0 OR WINNER=1 THEN 1650 :: REM GOTO GAMEOVER
1620 CALL GETAUTOPLAY(AUTOPLAY)
1630 IF AUTOPLAY=0 THEN PLAYER=1-PLAYER
1640 GOTO 1540 :: REM GOTO TURNLOOP
1650 REM LABEL ***GAMEOVER***
1660 PLAYAGAIN$="N"
1670 CALL MENUGAMEOVER(PLAYAGAIN$,(WINNER))
1680 IF PLAYAGAIN$="Y" THEN 1710 :: REM SUBEND
1690 CALL CLEAR
1700 END
1710 SUBEND
1720 REM SUBROUTINE ***PLAYERTURN***
1730 SUB PLAYERTURN(ROW,COL,SHOTS(,,))
1740 REM LABEL ***INPUTLOOP***
1750 CALL INPUTTARGET(ROW$,COL)
1760 ROW=ASC(ROW$)-64
1770 CALL CHECKVALIDSHOT(ERRORVAL,(ROW),(COL),0,SHOTS(,,))
1780 IF ERRORVAL=1 THEN 1740 :: REM GOTO INPUTLOOP
1790 SUBEND
1800 REM SUBROUTINE ***COMPUTERTURN***
1810 SUB COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1820 CALL GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
1830 CALL GETMENUORIG(MROW,MCOL)
1840 TEXT$=CHR$(64+ROW)&STR$(COL)
1850 CALL HCHAR(MROW+8,MCOL,32,10)
1860 CALL RENDERTEXT(TEXT$,MROW+8,MCOL)
1870 SUBEND
1880 REM SUBROUTINE ***PROCESSSHOT***
1890 SUB PROCESSSHOT(WINNER,ROW,COL,PLAYER,HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1900 WINNER=-1 :: HIT=0 :: SHIP=0
1910 LOC=16*ROW+COL
1920 CALL CHECKHIT(HIT,SHIP,(LOC),(1-PLAYER),SHIPS(,,))
1930 IF PLAYER=1 AND HIT=1 THEN CALL QUEUEADD(Q(),QLEN,(LOC),ERRVAL)
1940 CALL RENDERSHOT((PLAYER),(HIT),(ROW),(COL))
1950 IF HIT=0 THEN 2070 :: REM SUBEND
1960 HITSLEFT(1-PLAYER,SHIP)=HITSLEFT(1-PLAYER,SHIP)-1
1970 IF HITSLEFT(1-PLAYER,SHIP)>0 THEN 2070 :: REM SUBEND
1980 SHIPSLEFT(1-PLAYER)=SHIPSLEFT(1-PLAYER)-1
1990 CALL RENDERSUNK((1-PLAYER),(SHIP),SHIPS(,,))
2000 IF SHIPSLEFT(1-PLAYER)=0 THEN WINNER=PLAYER
2010 IF PLAYER=0 THEN 2070 :: REM SUBEND
2020 CALL GETSHIPLEN(SHIPLEN,(SHIP))
2030 FOR I=0 TO SHIPLEN-1
2040 SUNKLOC=SHIPS(0,SHIP,I)
2050 CALL QUEUEDEL(Q(),QLEN,(SUNKLOC),ERRVAL)
2060 NEXT I
2070 SUBEND
2080 REM SUBROUTINE ***GAMEAI***
2090 SUB GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
2100 REM LABEL ***AISTART***
2110 IF QLEN<=OLDQLEN THEN OFFSET=0
2120 IF QLEN=0 THEN GOSUB 2230 :: REM GOSUB EMPTYQUEUE
2130 IF QLEN=0 THEN GOTO 2180 :: REM GOTO VALIDATESHOT
2140 IF OFFSET<>0 THEN OFFSET=OFFSET+1
2150 IF OFFSET=0 THEN GOSUB 2270 :: REM GOSUB OFFSETZERO
2160 ROW=INT(Q(0)/16) :: COL=Q(0)-INT(Q(0)/16)*16
2170 ROW=ROW+OFFSET*RDIR :: COL=COL+OFFSET*CDIR
2180 REM LABEL ***VALIDATESHOT***
2190 CALL CHECKVALIDSHOT(ERRORVAL,(ROW),(COL),1,SHOTS(,,))
2200 IF ERRORVAL=1 THEN OFFSET=0 :: GOTO 2100 :: REM GOTO AISTART
2210 OLDQLEN=QLEN
2220 GOTO 2350 :: REM GOTO SUBEND
2230 REM GOSUB ***EMPTYQUEUE***
2240 ROW=INT(RND*10)+1 :: COL=INT(RND*10)+1
2250 RDIR=0 :: CDIR=0 :: REVERSED=0 :: OFFSET=0
2260 RETURN
2270 REM GOSUB ***OFFSETZERO***
2280 IF REVERSED=1 THEN TMP=RDIR :: RDIR=CDIR :: CDIR=TMP :: REVERSED=0 :: OFFSET=OFFSET+1 :: RETURN
2290 IF RDIR<>0 THEN RDIR=RDIR*-1:: REVERSED=1 :: OFFSET=OFFSET+1 :: RETURN
2300 IF CDIR<>0 THEN CDIR=CDIR*-1:: REVERSED=1 :: OFFSET=OFFSET+1 :: RETURN
2310 DIR=INT(RND*4)
2320 IF DIR=0 OR DIR=2 THEN CDIR=DIR-1 ELSE RDIR=DIR-2
2330 REVERSED=0 :: OFFSET=OFFSET+1
2340 RETURN
2350 SUBEND
2360 REM SUBROUTINE ***RENDERTEXT***
2370 SUB RENDERTEXT(TEXT$,ROW,COL)
2380 STRLEN=LEN(TEXT$)
2390 FOR I=0 TO STRLEN-1
2400 C$=SEG$(TEXT$,I+1,1)
2410 CALL HCHAR(ROW,COL+I,ASC(C$))
2420 NEXT I
2430 SUBEND
2440 REM SUBROUTINE ***RENDERBOARDS***
2450 SUB RENDERBOARDS
2460 CALL CLEAR
2470 DISPLAY AT(1,9):"BATTLESHIP"
2480 CALL RENDERBOARD
2490 CALL RENDERAUX
2500 SUBEND
2510 REM SUBROUTINE ***RENDERBOARD***
2520 SUB RENDERBOARD
2530 CALL RENDERBACKBOARD
2540 CALL RENDERAXES
2550 CALL RENDERHOLES
2560 SUBEND
2570 REM SUBROUTINE ***RENDERBACKBOARD***
2580 SUB RENDERBACKBOARD
2590 CALL GETBOARDORIG(ROW,COL)
2600 CALL GETFILLCHAR(FILLCHAR)
2610 FOR I=0 TO 18
2620 CALL HCHAR(ROW+I,COL,FILLCHAR,19)
2630 NEXT I
2640 SUBEND
2650 REM SUBROUTINE ***RENDERHOLES***
2660 SUB RENDERHOLES
2670 CALL GETBOARDORIG(ROW,COL)
2680 CALL GETHOLECHAR(HOLECHAR)
2690 FOR I=0 TO 18 STEP 2
2700 FOR J=0 TO 18 STEP 2
2710 CALL HCHAR(ROW+I,COL+J,HOLECHAR,1)
2720 NEXT J
2730 NEXT I
2740 SUBEND
2750 REM SUBROUTINE ***RENDERAXES***
2760 SUB RENDERAXES
2770 CALL GETBOARDORIG(ROW,COL)
2780 CALL GETTENCHAR(TENCHAR)
2790 REM RENDER X-AXIS (NUMBERS)
2800 FOR I=0 TO 8
2810 CALL HCHAR(ROW-2,I*2+COL,49+I,1)
2820 NEXT I
2830 CALL HCHAR(ROW-2,COL+18,TENCHAR,1)
2840 REM RENDER Y-AXIS (LETTERS)
2850 FOR I=1 TO 10
2860 CALL HCHAR(ROW-2+I*2,COL-2,64+I,1)
2870 NEXT I
2880 SUBEND
2890 REM SUBROUTINE ***RENDERAUX***
2900 SUB RENDERAUX
2910 CALL GETAUXORIG(ROW,COL)
2920 CALL GETHOLECHAR(HOLECHAR)
2930 FOR I=0 TO 9
2940 CALL HCHAR(ROW+I,COL,HOLECHAR,10)
2950 NEXT I
2960 SUBEND
2970 REM SUBROUTINE ***RENDERSHIP***
2980 SUB RENDERSHIP(CURRENTSHIP,SHIP())
2990 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3000 CALL GETSHIPCHAR(SHIPCHAR)
3010 CALL GETBOARDORIG(ROW,COL)
3020 FOR I=0 TO SHIPLEN-1
3030 COFFSET=SHIP(I)-INT(SHIP(I)/16)*16 :: ROFFSET=INT(SHIP(I)/16)
3040 CALL HCHAR(ROW+(ROFFSET-1)*2,COL+(COFFSET-1)*2,SHIPCHAR,1)
3050 NEXT I
3060 SUBEND
3070 REM SUBROUTINE ***RENDERSHIPSAUX***
3080 SUB RENDERSHIPSAUX(SHIPS(,,))
3090 CALL GETNUMSHIPS(NUMSHIPS)
3100 CALL GETAUXORIG(ROW,COL)
3110 CALL GETSHIPCHAR(SHIPCHAR)
3120 FOR I=0 TO NUMSHIPS-1
3130 CALL GETSHIPLEN(SHIPLEN,(I))
3140 FOR J=0 TO SHIPLEN-1
3150 COFFSET=SHIPS(0,I,J)-INT(SHIPS(0,I,J)/16)*16 :: ROFFSET=INT(SHIPS(0,I,J)/16)
3160 CALL HCHAR(ROW+ROFFSET-1,COL+COFFSET-1,SHIPCHAR,1)
3170 NEXT J
3180 NEXT I
3190 SUBEND
3200 REM SUBROUTINE ***RENDERSHOT***
3210 SUB RENDERSHOT(PLAYER,HIT,SROW,SCOL)
3220 CALL GETMENUORIG(ROW,COL)
3230 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
3240 IF HIT=0 THEN TEXT$="MISS" :: NOISE=-3 ELSE TEXT$="HIT" :: NOISE=-8
3250 CALL HCHAR(ROW,COL,32,10)
3260 CALL RENDERTEXT((TEXT$),(ROW),(COL))
3270 IF HIT=1 THEN CALL GETHITCHAR(CHARVAL) ELSE CALL GETMISSCHAR(CHARVAL)
3280 IF PLAYER=1 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3290 TROW=SROW-1 :: TCOL=SCOL-1
3300 IF PLAYER=0 THEN TROW=TROW*2 :: TCOL=TCOL*2
3310 CALL HCHAR(ROW+TROW,COL+TCOL,CHARVAL,1)
3320 CALL SOUND(500,NOISE,2) :: CALL SOUND(1,110,30)
3330 SUBEND
3340 REM SUBROUTINE ***RENDERSUNK***
3350 SUB RENDERSUNK(PLAYER,SHIP,SHIPS(,,))
3360 CALL GETSHIPLEN(SHIPLEN,(SHIP))
3370 IF PLAYER=0 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3380 CALL GETSUNKCHAR(SUNKCHAR)
3390 FOR I=0 TO SHIPLEN-1
3400 LOC=SHIPS(PLAYER,SHIP,I)
3410 TROW=INT(LOC/16)-1 :: TCOL=LOC-INT(LOC/16)*16-1
3420 IF PLAYER=1 THEN TROW=TROW*2 :: TCOL=TCOL*2
3430 CALL HCHAR(ROW+TROW,COL+TCOL,SUNKCHAR,1)
3440 NEXT I
3450 CALL GETSHIPNAME(SHIPNAME$,SHIP)
3460 CALL GETMENUORIG(ROW,COL)
3470 IF PLAYER=1 THEN ROW=ROW+4 ELSE ROW=ROW+9
3480 CALL HCHAR(ROW,COL,32,10)
3490 CALL RENDERTEXT("DESTROYED",(ROW),(COL))
3500 CALL HCHAR(ROW,COL,32,10)
3510 CALL RENDERTEXT((SHIPNAME$),(ROW),(COL))
3520 CALL SOUND(1000,-6,2) :: CALL SOUND(1,110,30)
3530 SUBEND
3540 REM SUBROUTINE ***MENUCLEAR***
3550 SUB MENUCLEAR
3560 CALL GETMENUORIG(ROW,COL)
3570 FOR I=0 TO 9 :: CALL HCHAR(ROW+I,COL,32,10) :: NEXT I
3580 SUBEND
3590 REM SUBROUTINE ***MENUAUTODEPLOY***
3600 SUB MENUAUTODEPLOY(AUTODEPLOY$)
3610 CALL GETMENUORIG(ROW,COL)
3620 CALL MENUCLEAR
3630 CALL RENDERTEXT("AUTO",(ROW),(COL))
3640 CALL RENDERTEXT("DEPLOY",(ROW+1),(COL))
3650 CALL RENDERTEXT("YOUR",(ROW+2),(COL))
3660 CALL RENDERTEXT("SHIPS?",(ROW+3),(COL))
3670 CALL RENDERTEXT("[Y/N]:",(ROW+4),(COL))
3680 REM LABEL ***ASKAUTO***
3690 ACCEPT AT(ROW+4,COL+4)VALIDATE("YN")BEEP SIZE(1):AUTODEPLOY$
3700 IF AUTODEPLOY$="" THEN  3680 :: REM GOTO ASKAUTO
3710 SUBEND
3720 REM SUBROUTINE ***MENUDEPLOY***
3730 SUB MENUDEPLOY(CURRENTSHIP)
3740 CALL GETMENUORIG(ROW,COL)
3750 CALL RENDERTEXT("INPUT THE",(ROW),(COL))
3760 CALL RENDERTEXT("LOCATIONS",(ROW+1),(COL))
3770 CALL RENDERTEXT("FOR YOUR",(ROW+2),(COL))
3780 CALL RENDERTEXT("          ",(ROW+3),(COL))
3790 CALL GETSHIPNAME(SHIPNAME$,(CURRENTSHIP))
3800 CALL RENDERTEXT((SHIPNAME$),(ROW+3),(COL))
3810 CALL RENDERTEXT("[IE. C3]:",(ROW+4),(COL))
3820 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3830 FOR I=1 TO 5
3840 IF I>SHIPLEN THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
3850 CALL RENDERTEXT((TEXT$),(ROW+4+I),(COL))
3860 NEXT I
3870 SUBEND
3880 REM SUBROUTINE ***MENUTARGET***
3890 SUB MENUTARGET
3900 CALL GETMENUORIG(ROW,COL)
3910 CALL RENDERTEXT("PLAYER",(ROW),(COL))
3920 CALL RENDERTEXT("TARGET",(ROW+1),(COL))
3930 CALL RENDERTEXT("[IE. C3]",(ROW+2),(COL))
3940 CALL RENDERTEXT("COMPUTER",(ROW+6),(COL))
3950 CALL RENDERTEXT("TARGET",(ROW+7),(COL))
3960 SUBEND
3970 REM SUBROUTINE ***MENUDEPLOYING***
3980 SUB MENUDEPLOYING
3990 CALL GETMENUORIG(ROW,COL)
4000 CALL MENUCLEAR
4010 CALL RENDERTEXT("PLAYER'S",(ROW),(COL))
4020 CALL RENDERTEXT("SHIPS",(ROW+1),(COL))
4030 CALL RENDERTEXT("DEPLOYED.",(ROW+2),(COL))
4040 CALL RENDERTEXT("COMPUTER",(ROW+4),(COL))
4050 CALL RENDERTEXT("DEPLOYING",(ROW+5),(COL))
4060 CALL RENDERTEXT("SHIPS...",(ROW+6),(COL))
4070 SUBEND
4080 REM SUBROUTINE ***MENUGAMEOVER***
4090 SUB MENUGAMEOVER(PLAYAGAIN$,WINNER)
4100 CALL GETMENUORIG(ROW,COL)
4110 CALL MENUCLEAR
4120 CALL RENDERTEXT("GAME OVER",(ROW),(COL))
4130 CALL RENDERTEXT("WINNER:",(ROW+1),(COL))
4140 IF WINNER=0 THEN TEXT$="PLAYER" ELSE TEXT$="COMPUTER"
4150 CALL RENDERTEXT(TEXT$,(ROW+2),(COL))
4160 CALL RENDERTEXT("PLAY", (ROW+4),(COL))
4170 CALL RENDERTEXT("AGAIN?",(ROW+5),(COL))
4180 CALL RENDERTEXT("[Y/N]:",(ROW+6),(COL))
4190 REM LABEL ***GETROW***
4200 ACCEPT AT(ROW+6,COL+4)VALIDATE("YN")BEEP SIZE(1):PLAYAGAIN$
4210 IF PLAYAGAIN$="" THEN  4190 :: REM GOTO ASKPLAYAGAIN
4220 SUBEND
4230 REM SUBROUTINE ***INPUTPOS***
4240 SUB INPUTPOS(ROW,COL,INPUTROW$,INPUTCOL)
4250 ON WARNING NEXT
4260 REM LABEL ***GETROW***
4270 ACCEPT AT(ROW,COL-2)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):INPUTROW$
4280 IF INPUTROW$="" THEN  4260 :: REM GOTO GETROW
4290 REM LABEL ***GETCOL***
4300 ACCEPT AT(ROW,COL-2+1)VALIDATE(DIGIT)BEEP SIZE(2):INPUTCOL
4310 IF INPUTCOL>10 THEN  4290 :: REM GOTO GETCOL
4320 IF INPUTCOL<1 THEN  4290 :: REM GOTO GETCOL
4330 ON WARNING PRINT
4340 SUBEND
4350 REM SUBROUTINE ***INPUTSHIP***
4360 SUB INPUTSHIP(SHIP(),CURRENTSHIP)
4370 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4380 CALL GETMENUORIG(ROW,COL)
4390 FOR I=0 TO SHIPLEN-1
4400 INPUTROW$="" :: INPUTCOL=0
4410 CALL INPUTPOS((ROW+5+I),(COL+5),INPUTROW$,INPUTCOL)
4420 SHIP(I)=16*(ASC(INPUTROW$)-64)+INPUTCOL
4430 NEXT I
4440 SUBEND
4450 REM SUBROUTINE ***INPUTTARGET***
4460 SUB INPUTTARGET(TARGETROW$,TARGETCOL)
4470 CALL GETMENUORIG(ROW,COL)
4480 CALL HCHAR(ROW+3,COL,32,10)
4490 CALL INPUTPOS((ROW+3),(COL),TARGETROW$,TARGETCOL)
4500 SUBEND
4510 REM SUBROUTINE ***CHECKVALIDSHIP***
4520 SUB CHECKVALIDSHIP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4530 SHIPERR=0
4540 HORIZONTAL=0
4550 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4560 CALL CHECKHORIZONTAL(HORIZONTAL,(CURRENTSHIP),SHIP())
4570 DIM SEQUENCE(4) :: FOR I=0 TO 4 :: SEQUENCE(I)=0 :: NEXT I
4580 FOR I=0 TO SHIPLEN-1
4590 COL=SHIP(I)-INT(SHIP(I)/16)*16 :: ROW=INT(SHIP(I)/16)
4600 IF HORIZONTAL=1 THEN SEQUENCE(I)=COL ELSE SEQUENCE(I)=ROW
4610 NEXT I
4620 CALL CHECKSEQUENTIAL(SHIPERR,(CURRENTSHIP),SEQUENCE())
4630 IF SHIPERR=1 THEN 4650 :: REM SUBEND
4640 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
4650 SUBEND
4660 REM SUBROUTINE ***CHECKVALIDSHOT***
4670 SUB CHECKVALIDSHOT(ERRORVAL,ROW,COL,PLAYER,SHOTS(,,))
4680 ERRORVAL=0
4690 IF ROW<1 OR ROW>10 OR COL<1 OR COL>10 THEN ERRORVAL=1 :: GOTO  4710 :: REM GOTO SUBEND
4700 IF SHOTS(PLAYER,ROW-1,COL-1)<>0 THEN ERRORVAL=1
4710 SUBEND
4720 REM SUBROUTINE ***CHECKHIT***
4730 SUB CHECKHIT(HIT,SHIP,LOC,PLAYER,SHIPS(,,))
4740 HIT=0
4750 CALL GETNUMSHIPS(NUMSHIPS)
4760 FOR I=0 TO NUMSHIPS-1
4770 CALL GETSHIPLEN(SHIPLEN,(I))
4780 FOR J=0 TO SHIPLEN-1
4790 IF SHIPS(PLAYER,I,J)=LOC THEN HIT=1 :: SHIP=I :: GOTO 4820 :: REM SUBEND
4800 NEXT J
4810 NEXT I
4820 SUBEND
4830 REM SUBROUTINE ***CHECKHORIZONTAL***
4840 SUB CHECKHORIZONTAL(HORIZONTAL,CURRENTSHIP,SHIP())
4850 HORIZONTAL=0
4860 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4870 FOR I=1 TO SHIPLEN-1
4880 PREV=INT(SHIP(I-1)/16) :: CURR=INT(SHIP(I)/16)
4890 IF PREV<>CURR THEN 4920 :: REM SUBEND
4900 NEXT I
4910 HORIZONTAL=1
4920 SUBEND
4930 REM SUBROUTINE ***CHECKSEQUENTIAL***
4940 SUB CHECKSEQUENTIAL(SHIPERR,CURRENTSHIP,SEQUENCE())
4950 SHIPERR=0
4960 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4970 MINCOORD=SEQUENCE(0)
4980 FOR I=1 TO SHIPLEN-1
4990 MINCOORD=MIN(MINCOORD,SEQUENCE(I))
5000 NEXT I
5010 EXPSUM=MINCOORD
5020 FOR I=1 TO SHIPLEN-1
5030 EXPSUM=EXPSUM+MINCOORD+I
5040 NEXT I
5050 ACTSUM=SEQUENCE(0)
5060 FOR I=1 TO SHIPLEN-1
5070 ACTSUM=ACTSUM+SEQUENCE(I)
5080 NEXT I
5090 IF EXPSUM<>ACTSUM THEN SHIPERR=1
5100 SUBEND
5110 REM SUBROUTINE ***CHECKOVERLAP***
5120 SUB CHECKOVERLAP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
5130 SHIPERR=0
5140 CALL GETSHIPLEN(CURRENTSHIPLEN,(CURRENTSHIP))
5150 FOR I=0 TO CURRENTSHIP-1
5160 CALL GETSHIPLEN(SHIPLEN,(I))
5170 FOR J=0 TO SHIPLEN-1
5180 STOREDLOC=SHIPS(PLAYER,I,J)
5190 FOR K=0 TO CURRENTSHIPLEN-1
5200 LOC=SHIP(K)
5210 IF LOC=STOREDLOC THEN SHIPERR=1 :: GOTO 5250 :: REM SUBEND
5220 NEXT K
5230 NEXT J
5240 NEXT I
5250 SUBEND
5260 REM SUBROUTINE ***QUEUESIZE***
5270 SUB QUEUESIZE(QSIZE)
5280 QSIZE=11
5290 SUBEND
5300 REM SUBROUTINE ***QUEUEINIT***
5310 SUB QUEUEINIT(Q(),QLEN)
5320 CALL QUEUESIZE(QSIZE)
5330 FOR I=0 TO QSIZE-1 :: Q(I)=-1 :: NEXT I
5340 QLEN=0
5350 SUBEND
5360 REM SUBROUTINE ***QUEUEADD***
5370 SUB QUEUEADD(Q(),QLEN,VALUE,ERRVAL)
5380 CALL QUEUESIZE(QSIZE)
5390 IF QLEN<QSIZE-1 THEN Q(QLEN)=VALUE :: QLEN=QLEN+1 :: ERRVAL=0 ELSE ERRVAL=1
5400 SUBEND
5410 REM SUBROUTINE ***QUEUEDEL***
5420 SUB QUEUEDEL(Q(),QLEN,VALUE,ERRVAL)
5430 DINDEX=-1 :: ERRVAL=-1
5440 FOR I=0 TO QLEN
5450 IF VALUE=Q(I) THEN DINDEX=I :: GOTO 5470 :: REM GOTO QUEUEDELFOUND
5460 NEXT I
5470 IF DINDEX=-1 THEN 5520 :: REM SUBEND
5480 FOR I=DINDEX TO QLEN-1
5490 Q(I)=Q(I+1)
5500 NEXT I
5510 QLEN=QLEN-1 :: ERRVAL=0
5520 SUBEND
5530 REM SUBROUTINE ***GETHOLECHAR***
5540 SUB GETHOLECHAR(CHARVAL)
5550 CHARVAL=96
5560 SUBEND
5570 REM SUBROUTINE ***GETFILLCHAR***
5580 SUB GETFILLCHAR(CHARVAL)
5590 CHARVAL=97
5600 SUBEND
5610 REM SUBROUTINE ***GETHITCHAR***
5620 SUB GETHITCHAR(CHARVAL)
5630 CHARVAL=104
5640 SUBEND
5650 REM SUBROUTINE ***GETSHIPCHAR***
5660 SUB GETSHIPCHAR(CHARVAL)
5670 CHARVAL=112
5680 SUBEND
5690 REM SUBROUTINE ***GETTENCHAR***
5700 SUB GETTENCHAR(CHARVAL)
5710 CHARVAL=120
5720 SUBEND
5730 REM SUBROUTINE ***GETMISSCHAR***
5740 SUB GETMISSCHAR(CHARVAL)
5750 CHARVAL=128
5760 SUBEND
5770 REM SUBROUTINE ***GETSUNKCHAR***
5780 SUB GETSUNKCHAR(CHARVAL)
5790 CHARVAL=136
5800 SUBEND
5810 REM SUBROUTINE ***GETNUMSHIPS***
5820 SUB GETNUMSHIPS(NUMSHIPS)
5830 NUMSHIPS=5
5840 SUBEND
5850 REM SUBROUTINE ***GETSHIPLEN***
5860 SUB GETSHIPLEN(SHIPLEN,INDEX)
5870 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
5880 SHIPLEN=SHIPLENS(INDEX)
5890 SUBEND
5900 REM SUBROUTINE ***GETSHIPNAME***
5910 SUB GETSHIPNAME(SHIPNAME$,INDEX)
5920 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
5930 SHIPNAME$=SHIPNAMES$(INDEX)
5940 SUBEND
5950 REM SUBROUTINE ***GETBOARDORIG***
5960 SUB GETBOARDORIG(ROW,COL)
5970 ROW=5 :: COL=3
5980 SUBEND
5990 REM SUBROUTINE ***GETAUXORIG***
6000 SUB GETAUXORIG(ROW,COL)
6010 ROW=3 :: COL=23
6020 SUBEND
6030 REM SUBROUTINE ***GETMENUORIG***
6040 SUB GETMENUORIG(ROW,COL)
6050 ROW=14 :: COL=23
6060 SUBEND
6070 REM SUBROUTINE ***GETDEBUGFLAG***
6080 SUB GETDEBUGFLAG(DEBUG)
6090 DEBUG=0
6100 SUBEND
6110 REM SUBROUTINE ***GETAUTOPLAY***
6120 SUB GETAUTOPLAY(AUTOPLAY)
6130 AUTOPLAY=0
6140 SUBEND