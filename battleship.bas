100 REM COPYRIGHT (C) 1987-2023 SEAN WOHLGEMUTH
110 REM ::
120 REM THIS PROGRAM IS FREE SOFTWARE: YOU CAN REDISTRIBUTE IT AND/OR MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE
130 REM AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION, EITHER VERSION 3 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER VERSION.
140 REM ::
150 REM THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY
160 REM OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
170 REM ::
180 REM YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE ALONG WITH THIS PROGRAM. IF NOT, SEE
190 REM <HTTPS://WWW.GNU.ORG/LICENSES/>.
200 REM ::
210 CALL CLEAR
220 CALL SCREEN(4)
230 RANDOMIZE
240 DIM SHIPS(1,4,4) :: REM SHIPS[PLAYER,SHIP,LOC]
250 CALL SETCHARS
260 CALL SETCOLORSCHEME
270 REM LABEL ***GAMELOOP***
280 CALL RENDERBOARDS
290 CALL DEPLOYSHIPS(SHIPS(,,))
300 CALL PLAYGAME(SHIPS(,,))
310 GOTO 270 :: REM GOTO GAMELOOP
320 END
330 REM SUBROUTINE ***SETCHARS***
340 SUB SETCHARS
350 CALL GETHOLECHAR(HOLECHAR)
360 CALL CHAR(HOLECHAR,"3C4299A5A599423C")
370 CALL GETFILLCHAR(FILLCHAR)
380 CALL CHAR(FILLCHAR,"0000000000000000")
390 CALL GETHITCHAR(HITCHAR)
400 CALL CHAR(HITCHAR,"3C7EFFFFFFFF7E3C")
410 CALL GETSHIPCHAR(SHIPCHAR)
420 CALL CHAR(SHIPCHAR,"3C4299A5A599423C")
430 CALL GETTENCHAR(TENCHAR)
440 CALL CHAR(TENCHAR,"004FC949494949EF")
450 CALL GETMISSCHAR(MISSCHAR)
460 CALL CHAR(MISSCHAR,"3C7EFFFFFFFF7E3C")
470 CALL GETSUNKCHAR(SUNKCHAR)
480 CALL CHAR(SUNKCHAR,"3C7EFFFFFFFF7E3C") 
490 SUBEND
500 REM SUBROUTINE ***SETCOLORSCHEME***
510 SUB SETCOLORSCHEME
520 CALL COLOR(9,2,8) :: REM BLACK ON CYAN
530 CALL COLOR(10,11,8) :: REM DARK YELLOW ON CYAN
540 CALL COLOR(11,2,15) :: REM BLACK ON GREY
550 CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
560 CALL COLOR(13,16,8) :: REM WHITE ON CYAN
570 CALL COLOR(14,9,8) :: REM MED RED ON CYAN
580 SUBEND
590 REM SUBROUTINE ***DEPLOYSHIPS***
600 SUB DEPLOYSHIPS(SHIPS(,,))
610 CALL DELOYPLAYER(SHIPS(,,))
620 CALL DEPLOYCOMPUTER(0,SHIPS(,,))
630 SUBEND
640 REM SUBROUTINE ***DELOYPLAYER***
650 SUB DELOYPLAYER(SHIPS(,,))
660 CALL GETNUMSHIPS(NUMSHIPS)
670 AUTODEPLOY$="N"
680 CALL MENUAUTODEPLOY(AUTODEPLOY$)
690 IF AUTODEPLOY$="Y" THEN CALL DEPLOYAUTO(SHIPS(,,)) ELSE CALL DEPLOYMANUAL(SHIPS(,,))
700 CALL RENDERSHIPSAUX(SHIPS(,,))
710 CALL RENDERHOLES
720 CALL MENUDEPLOYING
730 SUBEND
740 REM SUBROUTINE ***DEPLOYAUTO***
750 SUB DEPLOYAUTO(SHIPS(,,))
760 CALL GETMENUORIG(ROW,COL)
770 CALL RENDERTEXT("AUTO",(ROW+6),(COL))
780 CALL RENDERTEXT("DEPLOYING",(ROW+7),(COL))
790 CALL RENDERTEXT("SHIPS...",(ROW+8),(COL))
800 CALL DEPLOYCOMPUTER(1,SHIPS(,,))
810 CALL GETNUMSHIPS(NUMSHIPS)
820 FOR I=0 TO NUMSHIPS-1
830 CALL GETSHIPLEN(SHIPLEN,(I))
840 FOR J=0 TO SHIPLEN-1
850 SHIPS(0,I,J)=SHIPS(1,I,J)
860 NEXT J
870 NEXT I
880 SUBEND
890 REM SUBROUTINE ***DEPLOYMANUAL***
900 SUB DEPLOYMANUAL(SHIPS(,,))
910 CALL MENUCLEAR
920 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
930 CALL GETNUMSHIPS(NUMSHIPS)
940 FOR CURRENTSHIP=0 TO NUMSHIPS-1
950 REM LABEL ***DEPLOYMANSHIP***
960 CALL MENUDEPLOY((CURRENTSHIP))
970 CALL INPUTSHIP(SHIP(),(CURRENTSHIP))
980 PLAYER=0
990 SHIPERR=0
1000 CALL CHECKVALIDSHIP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1010 IF SHIPERR=1 THEN 950 :: REM GOTO DEPLOYMANSHIP
1020 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1030 FOR I=0 TO SHIPLEN-1
1040 SHIPS(0,CURRENTSHIP,I)=SHIP(I)
1050 NEXT I
1060 CALL RENDERSHIP((CURRENTSHIP),SHIP())
1070 NEXT CURRENTSHIP
1080 SUBEND
1090 REM SUBROUTINE ***DEPLOYCOMPUTER***
1100 SUB DEPLOYCOMPUTER(VISIBLE,SHIPS(,,))
1110 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
1120 CALL GETNUMSHIPS(NUMSHIPS)
1130 CALL GETBOARDORIG(ROW,COL)
1140 CALL GETSHIPCHAR(SHIPCHAR)
1150 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1160 REM LABEL ***DEPLOYCOMPSHIP***
1170 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1180 HORIZONTAL=INT(RND*2)
1190 SHIPBEGIN=INT(RND*(10-SHIPLEN))+1
1200 STATIC=INT(RND*10)+1
1210 FOR I=0 TO SHIPLEN-1
1220 IF HORIZONTAL=1 THEN SHIP(I)=16*STATIC+SHIPBEGIN+I ELSE SHIP(I)=16*(SHIPBEGIN+I)+STATIC
1230 NEXT I
1240 PLAYER=1
1250 SHIPERR=0
1260 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1270 IF SHIPERR=1 THEN 1160 :: REM GOTO DEPLOYCOMPSHIP
1280 FOR I=0 TO SHIPLEN-1
1290 SHIPS(1,CURRENTSHIP,I)=SHIP(I)
1300 NEXT I
1310 CALL GETDEBUGFLAG(DEBUG)
1320 IF DEBUG=1 THEN VISIBLE=1
1330 IF VISIBLE=1 THEN CALL RENDERSHIP((CURRENTSHIP),SHIP())
1340 NEXT CURRENTSHIP
1350 SUBEND
1360 REM SUBROUTINE ***PLAYGAME***
1370 SUB PLAYGAME(SHIPS(,,))
1380 CALL MENUCLEAR
1390 CALL MENUTARGET
1400 DIM SHOTS(1,9,9) :: REM SHOTS[PLAYER, ROW,COL]
1410 FOR I=0 TO 9 :: FOR J=0 TO 9 :: SHOTS(0,I,J)=0 :: SHOTS(1,I,J)=0 :: NEXT J :: NEXT I
1420 DIM HITSLEFT(1,4) :: REM HITS[PLAYER,SHIP]
1430 CALL GETNUMSHIPS(NUMSHIPS)
1440 FOR I=0 TO NUMSHIPS-1
1450 CALL GETSHIPLEN(SHIPLEN,I)
1460 HITSLEFT(0,I)=SHIPLEN :: HITSLEFT(1,I)=SHIPLEN
1470 NEXT I
1480 DIM SHIPSLEFT(1) :: REM SHIPSLEFT[PLAYER]
1490 SHIPSLEFT(0)=NUMSHIPS :: SHIPSLEFT(1)=NUMSHIPS
1500 CALL QUEUEINIT(Q(),QLEN)
1510 WINNER=-1
1520 PLAYER=0
1530 REM LABEL ***TURNLOOP***
1540 IF PLAYER=0 THEN CALL PLAYERTURN(ROW,COL,SHOTS(,,))
1550 IF PLAYER=1 THEN CALL COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1560 ERRORVAL=0
1570 IF ERRORVAL=1 THEN 1530 :: REM GOTO TURNLOOP
1580 SHOTS(PLAYER,ROW-1,COL-1)=1
1590 CALL PROCESSSHOT(WINNER,(ROW),(COL),(PLAYER),HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1600 IF WINNER=0 OR WINNER=1 THEN 1630 :: REM GOTO GAMEOVER
1610 PLAYER=1-PLAYER
1620 GOTO 1530 :: REM GOTO TURNLOOP
1630 REM LABEL ***GAMEOVER***
1640 PLAYAGAIN$="N"
1650 CALL MENUGAMEOVER(PLAYAGAIN$,(WINNER))
1660 IF PLAYAGAIN$="Y" THEN 1690 :: REM SUBEND
1670 CALL CLEAR
1680 END
1690 SUBEND
1700 REM SUBROUTINE ***PLAYERTURN***
1710 SUB PLAYERTURN(ROW,COL,SHOTS(,,))
1720 REM LABEL ***INPUTLOOP***
1730 CALL INPUTTARGET(ROW$,COL)
1740 ROW=ASC(ROW$)-64
1750 CALL CHECKVALIDSHOT(ERRORVAL,(ROW),(COL),0,SHOTS(,,))
1760 IF ERRORVAL=1 THEN 1720 :: REM GOTO INPUTLOOP
1770 SUBEND
1780 REM SUBROUTINE ***COMPUTERTURN***
1790 SUB COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1800 CALL GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
1810 CALL GETMENUORIG(MROW,MCOL)
1820 TEXT$=CHR$(64+ROW)&STR$(COL)
1830 CALL HCHAR(MROW+8,MCOL,32,10)
1840 CALL RENDERTEXT(TEXT$,MROW+8,MCOL)
1850 SUBEND
1860 REM SUBROUTINE ***PROCESSSHOT***
1870 SUB PROCESSSHOT(WINNER,ROW,COL,PLAYER,HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1880 WINNER=-1 :: HIT=0 :: SHIP=0
1890 LOC=16*ROW+COL
1900 CALL CHECKHIT(HIT,SHIP,(LOC),(1-PLAYER),SHIPS(,,))
1910 IF PLAYER=1 AND HIT=1 THEN CALL QUEUEADD(Q(),QLEN,(LOC),ERRVAL)
1920 CALL RENDERSHOT((PLAYER),(HIT),(ROW),(COL))
1930 IF HIT=0 THEN 2050 :: REM SUBEND
1940 HITSLEFT(1-PLAYER,SHIP)=HITSLEFT(1-PLAYER,SHIP)-1
1950 IF HITSLEFT(1-PLAYER,SHIP)>0 THEN 2050 :: REM SUBEND
1960 SHIPSLEFT(1-PLAYER)=SHIPSLEFT(1-PLAYER)-1
1970 CALL RENDERSUNK((1-PLAYER),(SHIP),SHIPS(,,))
1980 IF SHIPSLEFT(1-PLAYER)=0 THEN WINNER=PLAYER
1990 IF PLAYER=0 THEN 2050 :: REM SUBEND
2000 CALL GETSHIPLEN(SHIPLEN,(SHIP))
2010 FOR I=0 TO SHIPLEN-1
2020 SUNKLOC=SHIPS(0,SHIP,I)
2030 CALL QUEUEDEL(Q(),QLEN,(SUNKLOC),ERRVAL)
2040 NEXT I
2050 SUBEND
2060 REM SUBROUTINE ***GAMEAI***
2070 SUB GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
2080 REM LABEL ***AISTART***
2090 REM PRINT "BEGIN QLEN:"&STR$(QLEN)&",RDIR:"&STR$(RDIR)&",CDIR:"&STR$(CDIR)&",REVERSED:"&STR$(REVERSED)&",OFFSET:"&STR$(OFFSET)
2100 IF QLEN<=OLDQLEN THEN OFFSET=0
2110 IF QLEN=0 THEN GOSUB 2210 :: REM GOSUB EMPTYQUEUE
2120 IF QLEN=0 THEN GOTO 2170 :: REM GOTO VALIDATESHOT
2130 IF OFFSET<>0 THEN OFFSET=OFFSET+1
2140 IF OFFSET=0 THEN GOSUB 2250 :: REM GOSUB OFFSETZERO
2150 ROW=INT(Q(0)/16) :: COL=Q(0)-INT(Q(0)/16)*16
2160 ROW=ROW+OFFSET*RDIR :: COL=COL+OFFSET*CDIR
2170 REM LABEL ***VALIDATESHOT***
2180 CALL CHECKVALIDSHOT(ERRORVAL,(ROW),(COL),1,SHOTS(,,))
2190 IF ERRORVAL=1 THEN OFFSET=0 :: GOTO 2080 :: REM GOTO AISTART
2200 GOTO 2330 :: REM GOTO SUBEND
2210 REM GOSUB ***EMPTYQUEUE***
2220 ROW=INT(RND*10)+1 :: COL=INT(RND*10)+1
2230 RDIR=0 :: CDIR=0 :: REVERSED=0 :: OFFSET=0
2240 RETURN
2250 REM GOSUB ***OFFSETZERO***
2260 IF REVERSED=1 THEN TMP=RDIR :: RDIR=CDIR :: CDIR=TMP :: REVERSED=0 :: OFFSET=OFFSET+1 :: RETURN
2270 IF RDIR<>0 THEN RDIR=RDIR*-1:: REVERSED=1 :: OFFSET=OFFSET+1 :: RETURN
2280 IF CDIR<>0 THEN CDIR=CDIR*-1:: REVERSED=1 :: OFFSET=OFFSET+1 :: RETURN
2290 DIR=INT(RND*4)
2300 IF DIR=0 OR DIR=2 THEN CDIR=DIR-1 ELSE RDIR=DIR-2
2310 REVERSED=0 :: OFFSET=OFFSET+1
2320 RETURN
2330 OLDQLEN=QLEN
2340 REM PRINT "END RDIR:"&STR$(RDIR)&",CDIR:"&STR$(CDIR)&",REVERSED:"&STR$(REVERSED)&",OFFSET:"&STR$(OFFSET)&",ROW:"&STR$(ROW)&",COL:"&STR$(COL)
2350 SUBEND
2360 REM SUBROUTINE ***RENDERTEXT***
2370 SUB RENDERTEXT(TEXT$,ROW,COL)
2380 STRLEN=LEN(TEXT$)
2390 FOR I=0 TO STRLEN-1
2400 C$=SEG$(TEXT$,I+1,1)
2410 CALL HCHAR(ROW,COL+I,ASC(C$))
2420 NEXT I
2430 SUBEND
2440 REM SUBROUTINE ***RENDERBOARDS***
2450 SUB RENDERBOARDS
2460 CALL CLEAR
2470 DISPLAY AT(1,9):"BATTLESHIP"
2480 CALL RENDERBOARD
2490 CALL RENDERAUX
2500 SUBEND
2510 REM SUBROUTINE ***RENDERBOARD***
2520 SUB RENDERBOARD
2530 CALL RENDERBACKBOARD
2540 CALL RENDERAXES
2550 CALL RENDERHOLES
2560 SUBEND
2570 REM SUBROUTINE ***RENDERBACKBOARD***
2580 SUB RENDERBACKBOARD
2590 CALL GETBOARDORIG(ROW,COL)
2600 CALL GETFILLCHAR(FILLCHAR)
2610 FOR I=0 TO 18
2620 CALL HCHAR(ROW+I,COL,FILLCHAR,19)
2630 NEXT I
2640 SUBEND
2650 REM SUBROUTINE ***RENDERHOLES***
2660 SUB RENDERHOLES
2670 CALL GETBOARDORIG(ROW,COL)
2680 CALL GETHOLECHAR(HOLECHAR)
2690 FOR I=0 TO 18 STEP 2
2700 FOR J=0 TO 18 STEP 2
2710 CALL HCHAR(ROW+I,COL+J,HOLECHAR,1)
2720 NEXT J
2730 NEXT I
2740 SUBEND
2750 REM SUBROUTINE ***RENDERAXES***
2760 SUB RENDERAXES
2770 CALL GETBOARDORIG(ROW,COL)
2780 CALL GETTENCHAR(TENCHAR)
2790 REM RENDER X-AXIS (NUMBERS)
2800 FOR I=0 TO 8
2810 CALL HCHAR(ROW-2,I*2+COL,49+I,1)
2820 NEXT I
2830 CALL HCHAR(ROW-2,COL+18,TENCHAR,1)
2840 REM RENDER Y-AXIS (LETTERS)
2850 FOR I=1 TO 10
2860 CALL HCHAR(ROW-2+I*2,COL-2,64+I,1)
2870 NEXT I
2880 SUBEND
2890 REM SUBROUTINE ***RENDERAUX***
2900 SUB RENDERAUX
2910 CALL GETAUXORIG(ROW,COL)
2920 CALL GETHOLECHAR(HOLECHAR)
2930 FOR I=0 TO 9
2940 CALL HCHAR(ROW+I,COL,HOLECHAR,10)
2950 NEXT I
2960 SUBEND
2970 REM SUBROUTINE ***RENDERSHIP***
2980 SUB RENDERSHIP(CURRENTSHIP,SHIP())
2990 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3000 CALL GETSHIPCHAR(SHIPCHAR)
3010 CALL GETBOARDORIG(ROW,COL)
3020 FOR I=0 TO SHIPLEN-1
3030 COFFSET=SHIP(I)-INT(SHIP(I)/16)*16 :: ROFFSET=INT(SHIP(I)/16)
3040 CALL HCHAR(ROW+(ROFFSET-1)*2,COL+(COFFSET-1)*2,SHIPCHAR,1)
3050 NEXT I
3060 SUBEND
3070 REM SUBROUTINE ***RENDERSHIPSAUX***
3080 SUB RENDERSHIPSAUX(SHIPS(,,))
3090 CALL GETNUMSHIPS(NUMSHIPS)
3100 CALL GETAUXORIG(ROW,COL)
3110 CALL GETSHIPCHAR(SHIPCHAR)
3120 FOR I=0 TO NUMSHIPS-1
3130 CALL GETSHIPLEN(SHIPLEN,(I))
3140 FOR J=0 TO SHIPLEN-1
3150 COFFSET=SHIPS(0,I,J)-INT(SHIPS(0,I,J)/16)*16 :: ROFFSET=INT(SHIPS(0,I,J)/16)
3160 CALL HCHAR(ROW+ROFFSET-1,COL+COFFSET-1,SHIPCHAR,1)
3170 NEXT J
3180 NEXT I
3190 SUBEND
3200 REM SUBROUTINE ***RENDERSHOT***
3210 SUB RENDERSHOT(PLAYER,HIT,SROW,SCOL)
3220 CALL GETMENUORIG(ROW,COL)
3230 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
3240 IF HIT=0 THEN TEXT$="MISS" :: NOISE=-3 ELSE TEXT$="HIT" :: NOISE=-8
3250 CALL HCHAR(ROW,COL,32,10)
3260 CALL RENDERTEXT((TEXT$),(ROW),(COL))
3270 IF HIT=1 THEN CALL GETHITCHAR(CHARVAL) ELSE CALL GETMISSCHAR(CHARVAL)
3280 IF PLAYER=1 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3290 TROW=SROW-1 :: TCOL=SCOL-1
3300 IF PLAYER=0 THEN TROW=TROW*2 :: TCOL=TCOL*2
3310 CALL HCHAR(ROW+TROW,COL+TCOL,CHARVAL,1)
3320 CALL SOUND(500,NOISE,2) :: CALL SOUND(1,110,30)
3330 SUBEND
3340 REM SUBROUTINE ***RENDERSUNK***
3350 SUB RENDERSUNK(PLAYER,SHIP,SHIPS(,,))
3360 CALL GETSHIPLEN(SHIPLEN,(SHIP))
3370 IF PLAYER=0 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3380 CALL GETSUNKCHAR(SUNKCHAR)
3390 FOR I=0 TO SHIPLEN-1
3400 LOC=SHIPS(PLAYER,SHIP,I)
3410 TROW=INT(LOC/16)-1 :: TCOL=LOC-INT(LOC/16)*16-1
3420 IF PLAYER=1 THEN TROW=TROW*2 :: TCOL=TCOL*2
3430 CALL HCHAR(ROW+TROW,COL+TCOL,SUNKCHAR,1)
3440 NEXT I
3450 CALL GETSHIPNAME(SHIPNAME$,SHIP)
3460 CALL GETMENUORIG(ROW,COL)
3470 IF PLAYER=1 THEN ROW=ROW+4 ELSE ROW=ROW+9
3480 CALL HCHAR(ROW,COL,32,10)
3490 CALL RENDERTEXT("DESTROYED",(ROW),(COL))
3500 CALL HCHAR(ROW,COL,32,10)
3510 CALL RENDERTEXT((SHIPNAME$),(ROW),(COL))
3520 CALL SOUND(1000,-6,2) :: CALL SOUND(1,110,30)
3530 SUBEND
3540 REM SUBROUTINE ***MENUCLEAR***
3550 SUB MENUCLEAR
3560 CALL GETMENUORIG(ROW,COL)
3570 FOR I=0 TO 9 :: CALL HCHAR(ROW+I,COL,32,10) :: NEXT I
3580 SUBEND
3590 REM SUBROUTINE ***MENUAUTODEPLOY***
3600 SUB MENUAUTODEPLOY(AUTODEPLOY$)
3610 CALL GETMENUORIG(ROW,COL)
3620 CALL MENUCLEAR
3630 CALL RENDERTEXT("AUTO",(ROW),(COL))
3640 CALL RENDERTEXT("DEPLOY",(ROW+1),(COL))
3650 CALL RENDERTEXT("YOUR",(ROW+2),(COL))
3660 CALL RENDERTEXT("SHIPS?",(ROW+3),(COL))
3670 CALL RENDERTEXT("[Y/N]:",(ROW+4),(COL))
3680 ACCEPT AT(ROW+4,COL+4)VALIDATE("YN")BEEP SIZE(1):AUTODEPLOY$
3690 SUBEND
3700 REM SUBROUTINE ***MENUDEPLOY***
3710 SUB MENUDEPLOY(CURRENTSHIP)
3720 CALL GETMENUORIG(ROW,COL)
3730 CALL RENDERTEXT("INPUT THE",(ROW),(COL))
3740 CALL RENDERTEXT("LOCATIONS",(ROW+1),(COL))
3750 CALL RENDERTEXT("FOR YOUR",(ROW+2),(COL))
3760 CALL RENDERTEXT("          ",(ROW+3),(COL))
3770 CALL GETSHIPNAME(SHIPNAME$,(CURRENTSHIP))
3780 CALL RENDERTEXT((SHIPNAME$),(ROW+3),(COL))
3790 CALL RENDERTEXT("[IE. C3]:",(ROW+4),(COL))
3800 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3810 FOR I=1 TO 5
3820 IF I>SHIPLEN THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
3830 CALL RENDERTEXT((TEXT$),(ROW+4+I),(COL))
3840 NEXT I
3850 SUBEND
3860 REM SUBROUTINE ***MENUTARGET***
3870 SUB MENUTARGET
3880 CALL GETMENUORIG(ROW,COL)
3890 CALL RENDERTEXT("PLAYER",(ROW),(COL))
3900 CALL RENDERTEXT("TARGET",(ROW+1),(COL))
3910 CALL RENDERTEXT("[IE. C3]",(ROW+2),(COL))
3920 CALL RENDERTEXT("COMPUTER",(ROW+6),(COL))
3930 CALL RENDERTEXT("TARGET",(ROW+7),(COL))
3940 SUBEND
3950 REM SUBROUTINE ***MENUDEPLOYING***
3960 SUB MENUDEPLOYING
3970 CALL GETMENUORIG(ROW,COL)
3980 CALL MENUCLEAR
3990 CALL RENDERTEXT("PLAYER'S",(ROW),(COL))
4000 CALL RENDERTEXT("SHIPS",(ROW+1),(COL))
4010 CALL RENDERTEXT("DEPLOYED.",(ROW+2),(COL))
4020 CALL RENDERTEXT("COMPUTER",(ROW+4),(COL))
4030 CALL RENDERTEXT("DEPLOYING",(ROW+5),(COL))
4040 CALL RENDERTEXT("SHIPS...",(ROW+6),(COL))
4050 SUBEND
4060 REM SUBROUTINE ***MENUGAMEOVER***
4070 SUB MENUGAMEOVER(PLAYAGAIN$,WINNER)
4080 CALL GETMENUORIG(ROW,COL)
4090 CALL MENUCLEAR
4100 CALL RENDERTEXT("GAME OVER",(ROW),(COL))
4110 CALL RENDERTEXT("WINNER:",(ROW+1),(COL))
4120 IF WINNER=0 THEN TEXT$="PLAYER" ELSE TEXT$="COMPUTER"
4130 CALL RENDERTEXT(TEXT$,(ROW+2),(COL))
4140 CALL RENDERTEXT("PLAY", (ROW+4),(COL))
4150 CALL RENDERTEXT("AGAIN?",(ROW+5),(COL))
4160 CALL RENDERTEXT("[Y/N]:",(ROW+6),(COL))
4170 ACCEPT AT(ROW+6,COL+4)VALIDATE("YN")BEEP SIZE(1):PLAYAGAIN$
4180 SUBEND
4190 REM SUBROUTINE ***INPUTPOS***
4200 SUB INPUTPOS(ROW,COL,INPUTROW$,INPUTCOL)
4210 ON WARNING NEXT
4220 REM LABEL ***GETROW***
4230 ACCEPT AT(ROW,COL-2)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):INPUTROW$
4240 IF INPUTROW$="" THEN  4220 :: REM GOTO GETROW
4250 REM LABEL ***GETCOL***
4260 ACCEPT AT(ROW,COL-2+1)VALIDATE(DIGIT)BEEP SIZE(2):INPUTCOL
4270 IF INPUTCOL>10 THEN  4250 :: REM GOTO GETCOL
4280 IF INPUTCOL<1 THEN  4250 :: REM GOTO GETCOL
4290 ON WARNING PRINT
4300 SUBEND
4310 REM SUBROUTINE ***INPUTSHIP***
4320 SUB INPUTSHIP(SHIP(),CURRENTSHIP)
4330 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4340 CALL GETMENUORIG(ROW,COL)
4350 FOR I=0 TO SHIPLEN-1
4360 INPUTROW$="" :: INPUTCOL=0
4370 CALL INPUTPOS((ROW+5+I),(COL+5),INPUTROW$,INPUTCOL)
4380 SHIP(I)=16*(ASC(INPUTROW$)-64)+INPUTCOL
4390 NEXT I
4400 SUBEND
4410 REM SUBROUTINE ***INPUTTARGET***
4420 SUB INPUTTARGET(TARGETROW$,TARGETCOL)
4430 CALL GETMENUORIG(ROW,COL)
4440 CALL HCHAR(ROW+3,COL,32,10)
4450 CALL INPUTPOS((ROW+3),(COL),TARGETROW$,TARGETCOL)
4460 SUBEND
4470 REM SUBROUTINE ***CHECKVALIDSHIP***
4480 SUB CHECKVALIDSHIP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4490 SHIPERR=0
4500 HORIZONTAL=0
4510 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4520 CALL CHECKHORIZONTAL(HORIZONTAL,(CURRENTSHIP),SHIP())
4530 DIM SEQUENCE(4) :: FOR I=0 TO 4 :: SEQUENCE(I)=0 :: NEXT I
4540 FOR I=0 TO SHIPLEN-1
4550 COL=SHIP(I)-INT(SHIP(I)/16)*16 :: ROW=INT(SHIP(I)/16)
4560 IF HORIZONTAL=1 THEN SEQUENCE(I)=COL ELSE SEQUENCE(I)=ROW
4570 NEXT I
4580 CALL CHECKSEQUENTIAL(SHIPERR,(CURRENTSHIP),SEQUENCE())
4590 IF SHIPERR=1 THEN 4610 :: REM SUBEND
4600 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
4610 SUBEND
4620 REM SUBROUTINE ***CHECKVALIDSHOT***
4630 SUB CHECKVALIDSHOT(ERRORVAL,ROW,COL,PLAYER,SHOTS(,,))
4640 ERRORVAL=0
4650 IF ROW<1 OR ROW>10 OR COL<1 OR COL>10 THEN ERRORVAL=1 :: GOTO  4670 :: REM GOTO SUBEND
4660 IF SHOTS(PLAYER,ROW-1,COL-1)<>0 THEN ERRORVAL=1
4670 SUBEND
4680 REM SUBROUTINE ***CHECKHIT***
4690 SUB CHECKHIT(HIT,SHIP,LOC,PLAYER,SHIPS(,,))
4700 HIT=0
4710 CALL GETNUMSHIPS(NUMSHIPS)
4720 FOR I=0 TO NUMSHIPS-1
4730 CALL GETSHIPLEN(SHIPLEN,(I))
4740 FOR J=0 TO SHIPLEN-1
4750 IF SHIPS(PLAYER,I,J)=LOC THEN HIT=1 :: SHIP=I :: GOTO 4780 :: REM SUBEND
4760 NEXT J
4770 NEXT I
4780 SUBEND
4790 REM SUBROUTINE ***CHECKHORIZONTAL***
4800 SUB CHECKHORIZONTAL(HORIZONTAL,CURRENTSHIP,SHIP())
4810 HORIZONTAL=0
4820 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4830 FOR I=1 TO SHIPLEN-1
4840 PREV=INT(SHIP(I-1)/16) :: CURR=INT(SHIP(I)/16)
4850 IF PREV<>CURR THEN 4880 :: REM SUBEND
4860 NEXT I
4870 HORIZONTAL=1
4880 SUBEND
4890 REM SUBROUTINE ***CHECKSEQUENTIAL***
4900 SUB CHECKSEQUENTIAL(SHIPERR,CURRENTSHIP,SEQUENCE())
4910 SHIPERR=0
4920 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4930 MINCOORD=SEQUENCE(0)
4940 FOR I=1 TO SHIPLEN-1
4950 MINCOORD=MIN(MINCOORD,SEQUENCE(I))
4960 NEXT I
4970 EXPSUM=MINCOORD
4980 FOR I=1 TO SHIPLEN-1
4990 EXPSUM=EXPSUM+MINCOORD+I
5000 NEXT I
5010 ACTSUM=SEQUENCE(0)
5020 FOR I=1 TO SHIPLEN-1
5030 ACTSUM=ACTSUM+SEQUENCE(I)
5040 NEXT I
5050 IF EXPSUM<>ACTSUM THEN SHIPERR=1
5060 SUBEND
5070 REM SUBROUTINE ***CHECKOVERLAP***
5080 SUB CHECKOVERLAP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
5090 SHIPERR=0
5100 CALL GETSHIPLEN(CURRENTSHIPLEN,(CURRENTSHIP))
5110 FOR I=0 TO CURRENTSHIP-1
5120 CALL GETSHIPLEN(SHIPLEN,(I))
5130 FOR J=0 TO SHIPLEN-1
5140 STOREDLOC=SHIPS(PLAYER,I,J)
5150 FOR K=0 TO CURRENTSHIPLEN-1
5160 LOC=SHIP(K)
5170 IF LOC=STOREDLOC THEN SHIPERR=1 :: GOTO 5210 :: REM SUBEND
5180 NEXT K
5190 NEXT J
5200 NEXT I
5210 SUBEND
5220 REM SUBROUTINE ***QUEUESIZE***
5230 SUB QUEUESIZE(QSIZE)
5240 QSIZE=11
5250 SUBEND
5260 REM SUBROUTINE ***QUEUEINIT***
5270 SUB QUEUEINIT(Q(),QLEN)
5280 CALL QUEUESIZE(QSIZE)
5290 FOR I=0 TO QSIZE-1 :: Q(I)=-1 :: NEXT I
5300 QLEN=0
5310 SUBEND
5320 REM SUBROUTINE ***QUEUEADD***
5330 SUB QUEUEADD(Q(),QLEN,VALUE,ERRVAL)
5340 CALL QUEUESIZE(QSIZE)
5350 IF QLEN<QSIZE-1 THEN Q(QLEN)=VALUE :: QLEN=QLEN+1 :: ERRVAL=0 ELSE ERRVAL=1
5360 SUBEND
5370 REM SUBROUTINE ***QUEUEDEL***
5380 SUB QUEUEDEL(Q(),QLEN,VALUE,ERRVAL)
5390 DINDEX=-1 :: ERRVAL=-1
5400 FOR I=0 TO QLEN
5410 IF VALUE=Q(I) THEN DINDEX=I :: GOTO 5430 :: REM GOTO QUEUEDELFOUND
5420 NEXT I
5430 IF DINDEX=-1 THEN 5480 :: REM SUBEND
5440 FOR I=DINDEX TO QLEN-1
5450 Q(I)=Q(I+1)
5460 NEXT I
5470 QLEN=QLEN-1 :: ERRVAL=0
5480 SUBEND
5490 REM SUBROUTINE ***GETHOLECHAR***
5500 SUB GETHOLECHAR(CHARVAL)
5510 CHARVAL=96
5520 SUBEND
5530 REM SUBROUTINE ***GETFILLCHAR***
5540 SUB GETFILLCHAR(CHARVAL)
5550 CHARVAL=97
5560 SUBEND
5570 REM SUBROUTINE ***GETHITCHAR***
5580 SUB GETHITCHAR(CHARVAL)
5590 CHARVAL=104
5600 SUBEND
5610 REM SUBROUTINE ***GETSHIPCHAR***
5620 SUB GETSHIPCHAR(CHARVAL)
5630 CHARVAL=112
5640 SUBEND
5650 REM SUBROUTINE ***GETTENCHAR***
5660 SUB GETTENCHAR(CHARVAL)
5670 CHARVAL=120
5680 SUBEND
5690 REM SUBROUTINE ***GETMISSCHAR***
5700 SUB GETMISSCHAR(CHARVAL)
5710 CHARVAL=128
5720 SUBEND
5730 REM SUBROUTINE ***GETSUNKCHAR***
5740 SUB GETSUNKCHAR(CHARVAL)
5750 CHARVAL=136
5760 SUBEND
5770 REM SUBROUTINE ***GETNUMSHIPS***
5780 SUB GETNUMSHIPS(NUMSHIPS)
5790 NUMSHIPS=5
5800 SUBEND
5810 REM SUBROUTINE ***GETSHIPLEN***
5820 SUB GETSHIPLEN(SHIPLEN,INDEX)
5830 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
5840 SHIPLEN=SHIPLENS(INDEX)
5850 SUBEND
5860 REM SUBROUTINE ***GETSHIPNAME***
5870 SUB GETSHIPNAME(SHIPNAME$,INDEX)
5880 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
5890 SHIPNAME$=SHIPNAMES$(INDEX)
5900 SUBEND
5910 REM SUBROUTINE ***GETBOARDORIG***
5920 SUB GETBOARDORIG(ROW,COL)
5930 ROW=5 :: COL=3
5940 SUBEND
5950 REM SUBROUTINE ***GETAUXORIG***
5960 SUB GETAUXORIG(ROW,COL)
5970 ROW=3 :: COL=23
5980 SUBEND
5990 REM SUBROUTINE ***GETMENUORIG***
6000 SUB GETMENUORIG(ROW,COL)
6010 ROW=14 :: COL=23
6020 SUBEND
6030 REM SUBROUTINE ***GETDEBUGFLAG***
6040 SUB GETDEBUGFLAG(DEBUG)
6050 DEBUG=0
6060 SUBEND