100 CALL CLEAR
110 CALL SCREEN(4)
120 RANDOMIZE
130 CALL SETCHARS
140 CALL SETCOLORSCHEME
150 CALL RENDERBOARDS
160 DIM SHIPS(1,4,4) :: REM SHIPS[PLAYER,SHIP,LOC]
170 CALL DEPLOYSHIPS(SHIPS(,,))
180 CALL PLAYGAME(SHIPS(,,))
190 FOR I=1 TO 1000 :: NEXT I 
200 END
210 REM SUBROUTINE ***SETCHARS***
220 SUB SETCHARS
230 CALL GETHOLECHAR(HOLECHAR)
240 CALL CHAR(HOLECHAR,"3C4299A5A599423C")
250 CALL GETFILLCHAR(FILLCHAR)
260 CALL CHAR(FILLCHAR,"0000000000000000")
270 CALL GETHITCHAR(HITCHAR)
280 CALL CHAR(HITCHAR,"3C7EFFFFFFFF7E3C")
290 CALL GETSHIPCHAR(SHIPCHAR)
300 CALL CHAR(SHIPCHAR,"3C4299A5A599423C")
310 CALL GETTENCHAR(TENCHAR)
320 CALL CHAR(TENCHAR,"004FC949494949EF")
330 CALL GETMISSCHAR(MISSCHAR)
340 CALL CHAR(MISSCHAR,"3C7EFFFFFFFF7E3C")
350 CALL GETSUNKCHAR(SUNKCHAR)
360 CALL CHAR(SUNKCHAR,"3C7EFFFFFFFF7E3C") 
370 SUBEND
380 REM SUBROUTINE ***SETCOLORSCHEME***
390 SUB SETCOLORSCHEME
400 CALL COLOR(9,2,8) :: REM BLACK ON CYAN
410 CALL COLOR(10,11,8) :: REM DARK YELLOW ON CYAN
420 CALL COLOR(11,2,15) :: REM BLACK ON GREY
430 CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
440 CALL COLOR(13,16,8) :: REM WHITE ON CYAN
450 CALL COLOR(14,9,8) :: REM MED RED ON CYAN
460 SUBEND
470 REM SUBROUTINE ***DEPLOYSHIPS***
480 SUB DEPLOYSHIPS(SHIPS(,,))
490 CALL DELOYPLAYER(SHIPS(,,))
500 CALL DEPLOYCOMPUTER(0,SHIPS(,,))
510 SUBEND
520 REM SUBROUTINE ***DELOYPLAYER***
530 SUB DELOYPLAYER(SHIPS(,,))
540 CALL GETNUMSHIPS(NUMSHIPS)
550 CALL GETMENUORIG(ROW,COL)
560 CALL MENUCLEAR
570 CALL RENDERTEXT("AUTO",(ROW),(COL))
580 CALL RENDERTEXT("DEPLOY",(ROW+1),(COL))
590 CALL RENDERTEXT("YOUR",(ROW+2),(COL))
600 CALL RENDERTEXT("SHIPS?",(ROW+3),(COL))
610 CALL RENDERTEXT("[Y/N]:",(ROW+4),(COL))
620 ACCEPT AT(ROW+4,COL+4)VALIDATE("YN")BEEP SIZE(1):AUTODEPLOY$
630 IF AUTODEPLOY$="Y" THEN CALL DEPLOYAUTO(SHIPS(,,)) ELSE CALL DEPLOYMANUAL(SHIPS(,,))
640 CALL RENDERSHIPSAUX(SHIPS(,,))
650 CALL RENDERHOLES
660 CALL MENUDEPLOYING
670 SUBEND
680 REM SUBROUTINE ***DEPLOYAUTO***
690 SUB DEPLOYAUTO(SHIPS(,,))
700 CALL GETMENUORIG(ROW,COL)
710 CALL RENDERTEXT("AUTO",(ROW+6),(COL))
720 CALL RENDERTEXT("DEPLOYING",(ROW+7),(COL))
730 CALL RENDERTEXT("SHIPS...",(ROW+8),(COL))
740 CALL DEPLOYCOMPUTER(1,SHIPS(,,))
750 CALL GETNUMSHIPS(NUMSHIPS)
760 FOR I=0 TO NUMSHIPS-1
770 CALL GETSHIPLEN(SHIPLEN,(I))
780 FOR J=0 TO SHIPLEN-1
790 SHIPS(0,I,J)=SHIPS(1,I,J)
800 NEXT J
810 NEXT I
820 SUBEND
830 REM SUBROUTINE ***DEPLOYMANUAL***
840 SUB DEPLOYMANUAL(SHIPS(,,))
850 CALL MENUCLEAR
860 DIM SHIP(4)
870 CALL GETNUMSHIPS(NUMSHIPS)
880 FOR CURRENTSHIP=0 TO NUMSHIPS-1
890 REM LABEL ***DEPLOYMANSHIP***
900 CALL MENUDEPLOY((CURRENTSHIP))
910 CALL INPUTSHIP(SHIP(),(CURRENTSHIP))
920 PLAYER=0
930 SHIPERR=0
940 CALL CHECKVALIDSHIP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
950 IF SHIPERR=1 THEN 890 :: REM GOTO DEPLOYMANSHIP
960 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
970 FOR I=0 TO SHIPLEN-1
980 SHIPS(0,CURRENTSHIP,I)=SHIP(I)
990 NEXT I
1000 CALL RENDERSHIP((CURRENTSHIP),SHIP())
1010 NEXT CURRENTSHIP
1020 SUBEND
1030 REM SUBROUTINE ***DEPLOYCOMPUTER***
1040 SUB DEPLOYCOMPUTER(VISIBLE,SHIPS(,,))
1050 DIM SHIP(4)
1060 CALL GETNUMSHIPS(NUMSHIPS)
1070 CALL GETBOARDORIG(ROW,COL)
1080 CALL GETSHIPCHAR(SHIPCHAR)
1090 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1100 REM LABEL ***DEPLOYCOMPSHIP***
1110 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1120 HORIZONTAL=INT(RND*2)
1130 SHIPBEGIN=INT(RND*(10-SHIPLEN))+1
1140 STATIC=INT(RND*10)+1
1150 FOR I=0 TO SHIPLEN-1
1160 IF HORIZONTAL=1 THEN SHIP(I)=16*STATIC+SHIPBEGIN+I ELSE SHIP(I)=16*(SHIPBEGIN+I)+STATIC
1170 NEXT I
1180 PLAYER=1
1190 SHIPERR=0
1200 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1210 IF SHIPERR=1 THEN 1100 :: REM GOTO DEPLOYCOMPSHIP
1220 FOR I=0 TO SHIPLEN-1
1230 SHIPS(1,CURRENTSHIP,I)=SHIP(I)
1240 NEXT I
1250 CALL GETDEBUGFLAG(DEBUG)
1260 IF DEBUG=1 THEN VISIBLE=1
1270 IF VISIBLE=1 THEN CALL RENDERSHIP((CURRENTSHIP),SHIP())
1280 NEXT CURRENTSHIP
1290 SUBEND
1300 REM SUBROUTINE ***PLAYGAME***
1310 SUB PLAYGAME(SHIPS(,,))
1320 CALL MENUCLEAR
1330 CALL MENUTARGET
1340 DIM SHOTS(1,9,9) :: REM SHOTS[PLAYER, ROW,COL]
1350 DIM HITSLEFT(1,4) :: REM HITS[PLAYER,SHIP]
1360 DIM SHIPSLEFT(1) :: REM SHIPSLEFT[PLAYER]
1370 CALL GETNUMSHIPS(NUMSHIPS)
1380 SHIPSLEFT(0)=NUMSHIPS :: SHIPSLEFT(1)=NUMSHIPS
1390 FOR I=0 TO NUMSHIPS-1
1400 CALL GETSHIPLEN(SHIPLEN,I)
1410 HITSLEFT(0,I)=SHIPLEN :: HITSLEFT(1,I)=SHIPLEN
1420 NEXT I
1430 WINNER=-1
1440 PLAYER=0
1450 REM LABEL ***FIRELOOP***
1460 CALL INPUTTARGET(ROW$,COL)
1470 ROW=ASC(ROW$)-64
1480 ERRORVAL=0
1490 CALL CHECKVALIDSHOT(ERRORVAL,(ROW),(COL),(PLAYER),SHOTS(,,))
1500 IF ERRORVAL=1 THEN 1450 :: REM GOTO FIRELOOP
1510 SHOTS(PLAYER,ROW-1,COL-1)=1
1520 CALL PROCESSSHOT(WINNER,(ROW),(COL),(PLAYER),HITSLEFT(,),SHIPSLEFT(),SHIPS(,,))
1530 IF WINNER=0 OR WINNER=1 THEN END
1540 GOTO 1450 :: REM GOTO FIRELOOP
1550 SUBEND
1560 REM SUBROUTINE ***PROCESSSHOT***
1570 SUB PROCESSSHOT(WINNER,ROW,COL,PLAYER,HITSLEFT(,),SHIPSLEFT(),SHIPS(,,))
1580 WINNER=-1 :: HIT=0 :: SHIP=0
1590 LOC=16*ROW+COL
1600 CALL CHECKHIT(HIT,SHIP,(LOC),(1-PLAYER),SHIPS(,,))
1610 CALL RENDERSHOT((PLAYER),(HIT),(ROW),(COL))
1620 IF HIT=0 THEN 1680 :: REM GOTO PROCESSSHOT.SUBEND
1630 HITSLEFT(1-PLAYER,SHIP)=HITSLEFT(1-PLAYER,SHIP)-1
1640 IF HITSLEFT(1-PLAYER,SHIP)>0 THEN 1680 :: REM GOTO PROCESSSHOT.SUBEND
1650 SHIPSLEFT(1-PLAYER)=SHIPSLEFT(1-PLAYER)-1
1660 CALL RENDERSUNK((1-PLAYER),(SHIP),SHIPS(,,))
1670 IF SHIPSLEFT(1-PLAYER)=0 THEN WINNER=PLAYER
1680 SUBEND
1690 REM SUBROUTINE ***RENDERTEXT***
1700 SUB RENDERTEXT(TEXT$,ROW,COL)
1710 STRLEN=LEN(TEXT$)
1720 FOR I=0 TO STRLEN-1
1730 C$=SEG$(TEXT$,I+1,1)
1740 CALL HCHAR(ROW,COL+I,ASC(C$))
1750 NEXT I
1760 SUBEND
1770 REM SUBROUTINE ***RENDERBOARDS***
1780 SUB RENDERBOARDS
1790 CALL CLEAR
1800 DISPLAY AT(1,9):"BATTLESHIP"
1810 CALL RENDERBOARD
1820 CALL RENDERAUX
1830 SUBEND
1840 REM SUBROUTINE ***RENDERBOARD***
1850 SUB RENDERBOARD
1860 CALL RENDERBACKBOARD
1870 CALL RENDERAXES
1880 CALL RENDERHOLES
1890 SUBEND
1900 REM SUBROUTINE ***RENDERBACKBOARD***
1910 SUB RENDERBACKBOARD
1920 CALL GETBOARDORIG(ROW,COL)
1930 CALL GETFILLCHAR(FILLCHAR)
1940 FOR I=0 TO 18
1950 CALL HCHAR(ROW+I,COL,FILLCHAR,19)
1960 NEXT I
1970 SUBEND
1980 REM SUBROUTINE ***RENDERHOLES***
1990 SUB RENDERHOLES
2000 CALL GETBOARDORIG(ROW,COL)
2010 CALL GETHOLECHAR(HOLECHAR)
2020 FOR I=0 TO 18 STEP 2
2030 FOR J=0 TO 18 STEP 2
2040 CALL HCHAR(ROW+I,COL+J,HOLECHAR,1)
2050 NEXT J
2060 NEXT I
2070 SUBEND
2080 REM SUBROUTINE ***RENDERAXES***
2090 SUB RENDERAXES
2100 CALL GETBOARDORIG(ROW,COL)
2110 CALL GETTENCHAR(TENCHAR)
2120 REM RENDER X-AXIS (NUMBERS)
2130 FOR I=0 TO 8
2140 CALL HCHAR(ROW-2,I*2+COL,49+I,1)
2150 NEXT I
2160 CALL HCHAR(ROW-2,COL+18,TENCHAR,1)
2170 REM RENDER Y-AXIS (LETTERS)
2180 FOR I=1 TO 10
2190 CALL HCHAR(ROW-2+I*2,COL-2,64+I,1)
2200 NEXT I
2210 SUBEND
2220 REM SUBROUTINE ***RENDERAUX***
2230 SUB RENDERAUX
2240 CALL GETAUXORIG(ROW,COL)
2250 CALL GETHOLECHAR(HOLECHAR)
2260 FOR I=0 TO 9
2270 CALL HCHAR(ROW+I,COL,HOLECHAR,10)
2280 NEXT I
2290 SUBEND
2300 REM SUBROUTINE ***RENDERSHIP***
2310 SUB RENDERSHIP(CURRENTSHIP,SHIP())
2320 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
2330 CALL GETSHIPCHAR(SHIPCHAR)
2340 CALL GETBOARDORIG(ROW,COL)
2350 FOR I=0 TO SHIPLEN-1
2360 COFFSET=SHIP(I)-INT(SHIP(I)/16)*16 :: ROFFSET=INT(SHIP(I)/16)
2370 CALL HCHAR(ROW+(ROFFSET-1)*2,COL+(COFFSET-1)*2,SHIPCHAR,1)
2380 NEXT I
2390 SUBEND
2400 REM SUBROUTINE ***RENDERSHIPSAUX***
2410 SUB RENDERSHIPSAUX(SHIPS(,,))
2420 CALL GETNUMSHIPS(NUMSHIPS)
2430 CALL GETAUXORIG(ROW,COL)
2440 CALL GETSHIPCHAR(SHIPCHAR)
2450 FOR I=0 TO NUMSHIPS-1
2460 CALL GETSHIPLEN(SHIPLEN,(I))
2470 FOR J=0 TO SHIPLEN-1
2480 COFFSET=SHIPS(0,I,J)-INT(SHIPS(0,I,J)/16)*16 :: ROFFSET=INT(SHIPS(0,I,J)/16)
2490 CALL HCHAR(ROW+ROFFSET-1,COL+COFFSET-1,SHIPCHAR,1)
2500 NEXT J
2510 NEXT I
2520 SUBEND
2530 REM SUBROUTINE ***RENDERSHOT***
2540 SUB RENDERSHOT(PLAYER,HIT,SROW,SCOL)
2550 CALL GETMENUORIG(ROW,COL)
2560 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
2570 IF HIT=0 THEN TEXT$="(MISS)" :: NOISE=-3 ELSE TEXT$="(HIT)" :: NOISE=-8
2580 CALL HCHAR(ROW,COL,32,10)
2590 CALL RENDERTEXT((TEXT$),(ROW),(COL))
2600 IF HIT=1 THEN CALL GETHITCHAR(CHARVAL) ELSE CALL GETMISSCHAR(CHARVAL)
2610 IF PLAYER=1 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
2620 TROW=SROW-1 :: TCOL=SCOL-1
2630 IF PLAYER=0 THEN TROW=TROW*2 :: TCOL=TCOL*2
2640 CALL HCHAR(ROW+TROW,COL+TCOL,CHARVAL,1)
2650 CALL SOUND(500,NOISE,2) :: CALL SOUND(1,110,30)
2660 SUBEND
2670 REM SUBROUTINE ***RENDERSUNK***
2680 SUB RENDERSUNK(PLAYER,SHIP,SHIPS(,,))
2690 CALL GETSHIPLEN(SHIPLEN,(SHIP))
2700 IF PLAYER=0 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
2710 CALL GETSUNKCHAR(SUNKCHAR)
2720 FOR I=0 TO SHIPLEN-1
2730 LOC=SHIPS(PLAYER,SHIP,I)
2740 TROW=INT(LOC/16)-1 :: TCOL=LOC-INT(LOC/16)*16-1
2750 IF PLAYER=1 THEN TROW=TROW*2 :: TCOL=TCOL*2
2760 CALL HCHAR(ROW+TROW,COL+TCOL,SUNKCHAR,1)
2770 NEXT I
2780 CALL GETSHIPNAME(SHIPNAME$,SHIP)
2790 CALL GETMENUORIG(ROW,COL)
2800 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
2810 CALL HCHAR(ROW,COL,32,10)
2820 CALL RENDERTEXT((SHIPNAME$),(ROW),(COL))
2830 CALL SOUND(1000,-6,2) :: CALL SOUND(1,110,30)
2840 SUBEND
2850 REM SUBROUTINE ***MENUCLEAR***
2860 SUB MENUCLEAR
2870 CALL GETMENUORIG(ROW,COL)
2880 FOR I=0 TO 9 :: CALL HCHAR(ROW+I,COL,32,10) :: NEXT I
2890 SUBEND
2900 REM SUBROUTINE ***MENUDEPLOY***
2910 SUB MENUDEPLOY(CURRENTSHIP)
2920 CALL GETMENUORIG(ROW,COL)
2930 CALL RENDERTEXT("INPUT THE",(ROW),(COL))
2940 CALL RENDERTEXT("LOCATIONS",(ROW+1),(COL))
2950 CALL RENDERTEXT("FOR YOUR",(ROW+2),(COL))
2960 CALL RENDERTEXT("          ",(ROW+3),(COL))
2970 CALL GETSHIPNAME(SHIPNAME$,(CURRENTSHIP))
2980 CALL RENDERTEXT((SHIPNAME$),(ROW+3),(COL))
2990 CALL RENDERTEXT("[IE. C3]:",(ROW+4),(COL))
3000 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3010 FOR I=1 TO 5
3020 IF I>SHIPLEN THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
3030 CALL RENDERTEXT((TEXT$),(ROW+4+I),(COL))
3040 NEXT I
3050 SUBEND
3060 REM SUBROUTINE ***MENUTARGET***
3070 SUB MENUTARGET
3080 CALL GETMENUORIG(ROW,COL)
3090 CALL RENDERTEXT("PLAYER",(ROW),(COL))
3100 CALL RENDERTEXT("TARGET",(ROW+1),(COL))
3110 CALL RENDERTEXT("[IE. C3]",(ROW+2),(COL))
3120 CALL RENDERTEXT("COMPUTER",(ROW+6),(COL))
3130 CALL RENDERTEXT("TARGET",(ROW+7),(COL))
3140 SUBEND
3150 REM SUBROUTINE ***MENUDEPLOYING***
3160 SUB MENUDEPLOYING
3170 CALL GETMENUORIG(ROW,COL)
3180 CALL MENUCLEAR
3190 CALL RENDERTEXT("PLAYER'S",(ROW),(COL))
3200 CALL RENDERTEXT("SHIPS",(ROW+1),(COL))
3210 CALL RENDERTEXT("DEPLOYED.",(ROW+2),(COL))
3220 CALL RENDERTEXT("COMPUTER",(ROW+4),(COL))
3230 CALL RENDERTEXT("DEPLOYING",(ROW+5),(COL))
3240 CALL RENDERTEXT("SHIPS...",(ROW+6),(COL))
3250 SUBEND
3260 REM SUBROUTINE ***CHECKVALIDSHIP***
3270 SUB CHECKVALIDSHIP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
3280 SHIPERR=0
3290 HORIZONTAL=0
3300 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3310 CALL CHECKHORIZONTAL(HORIZONTAL,(CURRENTSHIP),SHIP())
3320 DIM SEQUENCE(4)
3330 FOR I=0 TO SHIPLEN-1
3340 COL=SHIP(I)-INT(SHIP(I)/16)*16 :: ROW=INT(SHIP(I)/16)
3350 IF HORIZONTAL=1 THEN SEQUENCE(I)=COL ELSE SEQUENCE(I)=ROW
3360 NEXT I
3370 CALL CHECKSEQUENTIAL(SHIPERR,(CURRENTSHIP),SEQUENCE())
3380 IF SHIPERR=1 THEN 3400 :: REM SUBEND
3390 CALL CHECKOVERLAP(SHIPERR,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
3400 SUBEND
3410 REM SUBROUTINE ***CHECKVALIDSHOT***
3420 SUB CHECKVALIDSHOT(ERRORVAL,ROW,COL,PLAYER,SHOTS(,,))
3430 ERRORVAL=0
3440 IF SHOTS(PLAYER,ROW-1,COL-1)<>0 THEN ERRORVAL=1
3450 SUBEND
3460 REM SUBROUTINE ***CHECKHIT***
3470 SUB CHECKHIT(HIT,SHIP,LOC,PLAYER,SHIPS(,,))
3480 HIT=0
3490 CALL GETNUMSHIPS(NUMSHIPS)
3500 FOR I=0 TO NUMSHIPS-1
3510 CALL GETSHIPLEN(SHIPLEN,(I))
3520 FOR J=0 TO SHIPLEN-1
3530 IF SHIPS(PLAYER,I,J)=LOC THEN HIT=1 :: SHIP=I :: GOTO 3560 :: REM SUBEND
3540 NEXT J
3550 NEXT I
3560 SUBEND
3570 REM SUBROUTINE ***CHECKHORIZONTAL***
3580 SUB CHECKHORIZONTAL(HORIZONTAL,CURRENTSHIP,SHIP())
3590 HORIZONTAL=0
3600 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3610 FOR I=1 TO SHIPLEN-1
3620 PREV=INT(SHIP(I-1)/16) :: CURR=INT(SHIP(I)/16)
3630 IF PREV<>CURR THEN 3660 :: REM SUBEND
3640 NEXT I
3650 HORIZONTAL=1
3660 SUBEND
3670 REM SUBROUTINE ***CHECKSEQUENTIAL***
3680 SUB CHECKSEQUENTIAL(SHIPERR,CURRENTSHIP,SEQUENCE())
3690 SHIPERR=0
3700 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3710 MINCOORD=SEQUENCE(0)
3720 FOR I=1 TO SHIPLEN-1
3730 MINCOORD=MIN(MINCOORD,SEQUENCE(I))
3740 NEXT I
3750 EXPSUM=MINCOORD
3760 FOR I=1 TO SHIPLEN-1
3770 EXPSUM=EXPSUM+MINCOORD+I
3780 NEXT I
3790 ACTSUM=SEQUENCE(0)
3800 FOR I=1 TO SHIPLEN-1
3810 ACTSUM=ACTSUM+SEQUENCE(I)
3820 NEXT I
3830 IF EXPSUM<>ACTSUM THEN SHIPERR=1
3840 SUBEND
3850 REM SUBROUTINE ***CHECKOVERLAP***
3860 SUB CHECKOVERLAP(SHIPERR,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
3870 SHIPERR=0
3880 CALL GETSHIPLEN(CURRENTSHIPLEN,(CURRENTSHIP))
3890 FOR I=0 TO CURRENTSHIP-1
3900 CALL GETSHIPLEN(SHIPLEN,(I))
3910 FOR J=0 TO SHIPLEN-1
3920 STOREDLOC=SHIPS(PLAYER,I,J)
3930 FOR K=0 TO CURRENTSHIPLEN-1
3940 LOC=SHIP(K)
3950 IF LOC=STOREDLOC THEN SHIPERR=1 :: GOTO 3990 :: REM SUBEND
3960 NEXT K
3970 NEXT J
3980 NEXT I
3990 SUBEND
4000 REM SUBROUTINE ***INPUTPOS***
4010 SUB INPUTPOS(ROW,COL,INPUTROW$,INPUTCOL)
4020 ON WARNING NEXT
4030 REM LABEL ***GETROW***
4040 ACCEPT AT(ROW,COL-2)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):INPUTROW$
4050 IF INPUTROW$="" THEN  4030 :: REM GOTO GETROW
4060 REM LABEL ***GETCOL***
4070 ACCEPT AT(ROW,COL-2+1)VALIDATE(DIGIT)BEEP SIZE(2):INPUTCOL
4080 IF INPUTCOL>10 THEN  4060 :: REM GOTO GETCOL
4090 IF INPUTCOL<1 THEN  4060 :: REM GOTO GETCOL
4100 ON WARNING PRINT
4110 SUBEND
4120 REM SUBROUTINE ***INPUTSHIP***
4130 SUB INPUTSHIP(SHIP(),CURRENTSHIP)
4140 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4150 CALL GETMENUORIG(ROW,COL)
4160 FOR I=0 TO SHIPLEN-1
4170 INPUTROW$="" :: INPUTCOL=0
4180 CALL INPUTPOS((ROW+5+I),(COL+5),INPUTROW$,INPUTCOL)
4190 SHIP(I)=16*(ASC(INPUTROW$)-64)+INPUTCOL
4200 NEXT I
4210 SUBEND
4220 REM SUBROUTINE ***INPUTTARGET***
4230 SUB INPUTTARGET(TARGETROW$,TARGETCOL)
4240 CALL GETMENUORIG(ROW,COL)
4250 CALL HCHAR(ROW+3,COL,32,10)
4260 CALL INPUTPOS((ROW+3),(COL),TARGETROW$,TARGETCOL)
4270 SUBEND
4280 REM SUBROUTINE ***GETHOLECHAR***
4290 SUB GETHOLECHAR(CHARVAL)
4300 CHARVAL=96
4310 SUBEND
4320 REM SUBROUTINE ***GETFILLCHAR***
4330 SUB GETFILLCHAR(CHARVAL)
4340 CHARVAL=97
4350 SUBEND
4360 REM SUBROUTINE ***GETHITCHAR***
4370 SUB GETHITCHAR(CHARVAL)
4380 CHARVAL=104
4390 SUBEND
4400 REM SUBROUTINE ***GETSHIPCHAR***
4410 SUB GETSHIPCHAR(CHARVAL)
4420 CHARVAL=112
4430 SUBEND
4440 REM SUBROUTINE ***GETTENCHAR***
4450 SUB GETTENCHAR(CHARVAL)
4460 CHARVAL=120
4470 SUBEND
4480 REM SUBROUTINE ***GETMISSCHAR***
4490 SUB GETMISSCHAR(CHARVAL)
4500 CHARVAL=128
4510 SUBEND
4520 REM SUBROUTINE ***GETSUNKCHAR***
4530 SUB GETSUNKCHAR(CHARVAL)
4540 CHARVAL=136
4550 SUBEND
4560 REM SUBROUTINE ***GETNUMSHIPS***
4570 SUB GETNUMSHIPS(NUMSHIPS)
4580 NUMSHIPS=5
4590 SUBEND
4600 REM SUBROUTINE ***GETSHIPLEN***
4610 SUB GETSHIPLEN(SHIPLEN,INDEX)
4620 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
4630 SHIPLEN=SHIPLENS(INDEX)
4640 SUBEND
4650 REM SUBROUTINE ***GETSHIPNAME***
4660 SUB GETSHIPNAME(SHIPNAME$,INDEX)
4670 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
4680 SHIPNAME$=SHIPNAMES$(INDEX)
4690 SUBEND
4700 REM SUBROUTINE ***GETBOARDORIG***
4710 SUB GETBOARDORIG(ROW,COL)
4720 ROW=5 :: COL=3
4730 SUBEND
4740 REM SUBROUTINE ***GETAUXORIG***
4750 SUB GETAUXORIG(ROW,COL)
4760 ROW=3 :: COL=23
4770 SUBEND
4780 REM SUBROUTINE ***GETMENUORIG***
4790 SUB GETMENUORIG(ROW,COL)
4800 ROW=14 :: COL=23
4810 SUBEND
4820 REM SUBROUTINE ***GETDEBUGFLAG***
4830 SUB GETDEBUGFLAG(DEBUG)
4840 DEBUG=1
4850 SUBEND