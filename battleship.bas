100 CALL CLEAR
110 GOSUB 180 :: REM CALL INIT
120 GOSUB 290 :: REM CALL SETCHARS
130 GOSUB 340 :: REM CALL SETCOLORSCHEME
140 GOSUB 380 :: REM CALL DRAWBOARDS
150 GOSUB 920 :: REM CALL PLACESHIPS
160 FOR I=1 TO 1000 :: NEXT I 
170 END
180 REM SUBROUTINE ***INIT***
190 NUMSHIPS=5
200 DIM SHIPS(4) :: DIM SHIPS$(4)
210 SHIPS(0)=5 :: SHIPS(1)=4 :: SHIPS(2)=3 :: SHIPS(3)=3 :: SHIPS(4)=2 
220 SHIPS$(0)="CARRIER" :: SHIPS$(1)="BATTLESHIP" :: SHIPS$(2)="CRUISER" :: SHIPS$(3)="SUBMARINE" :: SHIPS$(4)="DESTROYER"
230 DIM P1COORDS(4,4) :: DIM P2COORDS(4,4) :: DIM P1COORDS$(4,4) :: DIM P2COORDS$(4,4) 
240 DIM COORDS(4) :: DIM COORDS$(4)
250 XLB=1 :: YLB=3 :: XSB=23 :: YSB=3 :: REM BOARD ORIGINS
260 XMENU=23 :: YMENU=14
270 DIM SERIAL(4)
280 RETURN
290 REM SUBROUTINE ***SETCHARS***
300 CALL CHAR(96,"3C4299A5A599423C") :: REM PEG HOLE
310 CALL CHAR(104,"003C7E7E7E7E3C00") :: REM PEG
320 CALL CHAR(112,"004FC949494949EF") :: REM "10"
330 RETURN
340 REM SUBROUTINE ***SETCOLORSCHEME***
350 CALL COLOR(9,2,8)
360 CALL COLOR(12,8,8)
370 RETURN
380 REM SUBROUTINE ***DRAWBOARDS***
390 CALL CLEAR
400 DISPLAY AT(1,9):"BATTLESHIP"
410 REM RENDER LARGE BOARD
420 X=XLB :: Y=YLB
430 FOR I=2 TO 20 STEP 2
440 FOR J=0 TO 18 STEP 2
450 CALL HCHAR(Y+I,X+2+J,92,1)
460 NEXT J
470 NEXT I
480 REM RENDER "1-10" BORDER
490 FOR I=0 TO 8
500 CALL HCHAR(Y,I*2+X+2,49+I,1)
510 NEXT I
520 CALL HCHAR(Y,X+20,112,1)
530 REM RENDER "A-J" BORDER
540 FOR I=1 TO 10
550 CALL HCHAR(Y+I*2,X,64+I,1)
560 NEXT I
570 REM RENDER SMALL BOARD
580 X=XSB :: Y=YSB
590 FOR I=0 TO 9
600 CALL HCHAR(Y+I,X,96,10)
610 NEXT I
620 RETURN
630 REM SUBROUTINE ***PREPAREMENU***
640 CALL RENDERTEXT("INPUT THE",YMENU,XMENU)
650 CALL RENDERTEXT("LOCATIONS",YMENU+1,XMENU)
660 CALL RENDERTEXT("FOR YOUR",YMENU+2,XMENU)
670 CALL RENDERTEXT("          ",YMENU+3,XMENU)
680 CALL RENDERTEXT(SHIPS$(CURRENTSHIP),YMENU+3,XMENU)
690 CALL RENDERTEXT("[IE. C3]:",YMENU+4,XMENU)
700 FOR I=1 TO 5
710 IF I>SHIPS(CURRENTSHIP) THEN 740 :: REM CALL BLANK
720 CALL RENDERTEXT("POS"&STR$(I)&":    ",YMENU+4+I,XMENU)
730 GOTO 760 :: REM GOTO MENUDONE
740 REM LABEL ***BLANK***
750 CALL RENDERTEXT("        ",YMENU+4+I,XMENU)
760 REM LABEL ***MENUDONE***
770 NEXT I
780 RETURN
790 REM SUBROUTINE ***PREPAREINPUT***
800 ON WARNING NEXT
810 FOR I=0 TO SHIPS(CURRENTSHIP)-1
820 REM LABEL ***INPUTROW***
830 ACCEPT AT(YMENU+5+I,XMENU+3)VALIDATE("ABCDEFGHIJ")BEEP SIZE(1):COORDS$(I)
840 IF COORDS$(I)="" THEN  820 :: REM CALL INPUTROW
850 REM LABEL ***INPUTCOL***
860 ACCEPT AT(YMENU+5+I,XMENU+4)VALIDATE(DIGIT)BEEP SIZE(2):COORDS(I)
870 IF COORDS(I)>10 THEN  850 :: REM CALL INPUTCOL
880 IF COORDS(I)<1 THEN  850 :: REM CALL INPUTCOL
890 NEXT I
900 ON WARNING PRINT
910 RETURN
920 REM SUBROUTINE ***PLACESHIPS***
930 GOSUB 1610 :: REM CALL CLEARMENU
940 FOR CURRENTSHIP=0 TO 4
950 REM LABEL ***PLACESHIP***
960 GOSUB 630 :: REM CALL PREPAREMENU
970 GOSUB 790 :: REM CALL PREPAREINPUT
980 GOSUB 1390 :: REM CALL VALIDATESHIP
990 IF SHIPERR=1 THEN 950 :: REM CALL PLACESHIP
1000 FOR I=0 TO SHIPS(CURRENTSHIP)-1
1010 P1COORDS(CURRENTSHIP,I)=COORDS(I) :: P1COORDS$(CURRENTSHIP,I)=COORDS$(I)
1020 NEXT I
1030 NEXT CURRENTSHIP
1040 GOSUB 1560 :: REM CALL PLAYERLOCKEDIN
1050 RETURN
1060 REM SUBROUTINE ***CHECKHORIZONTAL***
1070 HORIZONTAL=0
1080 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1090 IF COORDS$(I-1)<>COORDS$(I) THEN RETURN
1100 NEXT I
1110 HORIZONTAL=1
1120 RETURN
1130 REM SUBROUTINE ***CHECKOVERLAP***
1140 FOR I=0 TO CURRENTSHIP-1
1150 FOR J=0 TO SHIPS(I)-1
1160 STOREDLOC=(ASC(P1COORDS$(I,J))-64)*16+P1COORDS(I,J)
1170 FOR K=0 TO SHIPS(CURRENTSHIP)-1
1180 LOC=(ASC(COORDS$(K))-64)*16+COORDS(K)
1190 IF LOC=STOREDLOC THEN SHIPERR=1 :: RETURN
1200 NEXT K
1210 NEXT J
1220 NEXT I
1230 RETURN
1240 REM SUBROUTINE ***CHECKSEQUENCE***
1250 MINCOORD=SERIAL(0)
1260 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1270 MINCOORD=MIN(MINCOORD,SERIAL(I))
1280 NEXT I
1290 EXPSUM=MINCOORD
1300 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1310 EXPSUM=EXPSUM+MINCOORD+I
1320 NEXT I
1330 ACTSUM=SERIAL(0)
1340 FOR I=1 TO SHIPS(CURRENTSHIP)-1
1350 ACTSUM=ACTSUM+SERIAL(I)
1360 NEXT I
1370 IF EXPSUM<>ACTSUM THEN SHIPERR=1
1380 RETURN
1390 REM SUBROUTINE ***VALIDATESHIP***
1400 SHIPERR=0
1410 GOSUB 1060 :: REM CALL CHECKHORIZONTAL
1420 IF HORIZONTAL<>1 THEN 1470 :: REM CALL VERTICAL
1430 FOR I=0 TO SHIPS(CURRENTSHIP)-1
1440 SERIAL(I)=COORDS(I)
1450 NEXT I
1460 GOTO 1510 :: REM GOTO STARTSEQCHECK
1470 REM LABEL ***VERTICAL***
1480 FOR I=0 TO SHIPS(CURRENTSHIP)-1
1490 SERIAL(I)=ASC(COORDS$(I))-64
1500 NEXT I
1510 REM LABEL ***STARTSEQCHECK***
1520 GOSUB 1240 :: REM CALL CHECKSEQUENCE
1530 IF SHIPERR=1 THEN RETURN
1540 GOSUB 1130 :: REM CALL CHECKOVERLAP
1550 RETURN
1560 REM SUBROUTINE ***PLAYERLOCKEDIN***
1570 GOSUB 1610 :: REM CALL CLEARMENU
1580 CALL RENDERTEXT("PLAYER",YMENU,XMENU)
1590 CALL RENDERTEXT("LOCKED IN",YMENU+1,XMENU)
1600 RETURN
1610 REM SUBROUTINE ***CLEARMENU***
1620 FOR I=0 TO 9 :: CALL HCHAR(YMENU+I,XMENU,32,10) :: NEXT I
1630 RETURN
1640 REM SUBROUTINE ***RENDERTEXT***
1650 SUB RENDERTEXT(TEXT$,ROW,COL)
1660 STRLEN=LEN(TEXT$)
1670 FOR I=0 TO STRLEN-1
1680 C$=SEG$(TEXT$,I+1,1)
1690 CALL HCHAR(ROW,COL+I,ASC(C$))
1700 NEXT I
1710 SUBEND