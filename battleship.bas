100 REM COPYRIGHT (C) 1987-2023 SEAN WOHLGEMUTH
110 REM ::
120 REM THIS PROGRAM IS FREE SOFTWARE: YOU CAN REDISTRIBUTE IT AND/OR MODIFY IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE
130 REM AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION, EITHER VERSION 3 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER VERSION.
140 REM ::
150 REM THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY
160 REM OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
170 REM ::
180 REM YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE ALONG WITH THIS PROGRAM. IF NOT, SEE
190 REM <HTTPS://WWW.GNU.ORG/LICENSES/>.
200 REM ::
210 RANDOMIZE
220 DIM SHIPS(1,4,4) :: REM SHIPS[PLAYER,SHIP,LOC]
230 CALL SETUP
240 REM LABEL ***GAMELOOP***
250 CALL RENDERBOARD
260 CALL RENDERAUX
270 CALL DELOYPLAYER(SHIPS(,,))
280 CALL DEPLOYCOMPUTER(0,SHIPS(,,))
290 CALL PLAYGAME(SHIPS(,,))
300 GOTO 250 :: REM GOTO GAMELOOP
310 END
320 REM SUBROUTINE ***SETUP***
330 SUB SETUP
340 CALL GETHOLECHAR(HOLECHAR)
350 CALL GETFILLCHAR(FILLCHAR)
360 CALL GETHITCHAR(HITCHAR)
370 CALL GETSHIPCHAR(SHIPCHAR)
380 CALL GETTENCHAR(TENCHAR)
390 CALL GETMISSCHAR(MISSCHAR)
400 CALL GETSUNKCHAR(SUNKCHAR)
410 CALL CHAR(HOLECHAR,"3C4299A5A599423C",FILLCHAR,"0000000000000000",HITCHAR,"3C7EFFFFFFFF7E3C",SHIPCHAR,"3C4299A5A599423C")
420 CALL CHAR(TENCHAR,"004FC949494949EF",MISSCHAR,"3C7EFFFFFFFF7E3C",SUNKCHAR,"3C7EFFFFFFFF7E3C")
430 REM CALL CHAR(HOLECHAR,"3C4299A5A599423C")
440 REM CALL CHAR(FILLCHAR,"0000000000000000")
450 REM CALL CHAR(HITCHAR,"3C7EFFFFFFFF7E3C")
460 REM CALL CHAR(SHIPCHAR,"3C4299A5A599423C")
470 REM CALL CHAR(TENCHAR,"004FC949494949EF")
480 REM CALL CHAR(MISSCHAR,"3C7EFFFFFFFF7E3C")
490 REM CALL CHAR(SUNKCHAR,"3C7EFFFFFFFF7E3C") 
500 CALL COLOR(9,2,8,10,11,8,11,2,15,12,2,1,13,16,8,14,9,8)
510 REM CALL COLOR(9,2,8) :: REM BLACK ON CYAN
520 REM CALL COLOR(10,11,8) :: REM DARK YELLOW ON CYAN
530 REM CALL COLOR(11,2,15) :: REM BLACK ON GREY
540 REM CALL COLOR(12,2,1) :: REM BLACK ON TRANSPARENT
550 REM CALL COLOR(13,16,8) :: REM WHITE ON CYAN
560 REM CALL COLOR(14,9,8) :: REM MED RED ON CYAN
570 SUBEND
580 REM SUBROUTINE ***DELOYPLAYER***
590 SUB DELOYPLAYER(SHIPS(,,))
600 CALL GETNUMSHIPS(NUMSHIPS)
610 AUTODEPLOY$="N"
620 CALL MENUAUTODEPLOY(AUTODEPLOY$)
630 IF AUTODEPLOY$="Y" THEN CALL DEPLOYAUTO(SHIPS(,,)) ELSE CALL DEPLOYMANUAL(SHIPS(,,))
640 CALL GETNUMSHIPS(NUMSHIPS)
650 CALL GETAUXORIG(ROW,COL)
660 CALL GETSHIPCHAR(SHIPCHAR)
670 FOR I=0 TO NUMSHIPS-1
680 CALL GETSHIPLEN(SHIPLEN,(I))
690 FOR J=0 TO SHIPLEN-1
700 ROFFSET=INT(SHIPS(0,I,J)/16) :: COFFSET=SHIPS(0,I,J)-INT(SHIPS(0,I,J)/16)*16
710 CALL HCHAR(ROW+ROFFSET-1,COL+COFFSET-1,SHIPCHAR,1)
720 NEXT J
730 NEXT I
740 CALL RENDERHOLES
750 CALL GETMENUORIG(ROW,COL)
760 CALL MENUCLEAR
770 CALL RENDERTEXT("PLAYER'S",(ROW),(COL))
780 CALL RENDERTEXT("SHIPS",(ROW+1),(COL))
790 CALL RENDERTEXT("DEPLOYED.",(ROW+2),(COL))
800 CALL RENDERTEXT("COMPUTER",(ROW+4),(COL))
810 CALL RENDERTEXT("DEPLOYING",(ROW+5),(COL))
820 CALL RENDERTEXT("SHIPS...",(ROW+6),(COL))
830 SUBEND
840 REM SUBROUTINE ***DEPLOYAUTO***
850 SUB DEPLOYAUTO(SHIPS(,,))
860 CALL GETMENUORIG(ROW,COL)
870 CALL RENDERTEXT("AUTO",(ROW+6),(COL))
880 CALL RENDERTEXT("DEPLOYING",(ROW+7),(COL))
890 CALL RENDERTEXT("SHIPS...",(ROW+8),(COL))
900 CALL DEPLOYCOMPUTER(1,SHIPS(,,))
910 CALL GETNUMSHIPS(NUMSHIPS)
920 FOR I=0 TO NUMSHIPS-1
930 CALL GETSHIPLEN(SHIPLEN,(I))
940 FOR J=0 TO SHIPLEN-1
950 SHIPS(0,I,J)=SHIPS(1,I,J)
960 NEXT J
970 NEXT I
980 SUBEND
990 REM SUBROUTINE ***DEPLOYMANUAL***
1000 SUB DEPLOYMANUAL(SHIPS(,,))
1010 CALL MENUCLEAR
1020 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
1030 CALL GETNUMSHIPS(NUMSHIPS)
1040 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1050 REM LABEL ***DEPLOYMANSHIP***
1060 CALL MENUDEPLOY((CURRENTSHIP))
1070 CALL INPUTSHIP(SHIP(),(CURRENTSHIP))
1080 PLAYER=0
1090 ERRVAL=0
1100 CALL CHECKVALIDSHIP(ERRVAL,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1110 IF ERRVAL=1 THEN 1060 :: REM GOTO DEPLOYMANSHIP
1120 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1130 FOR I=0 TO SHIPLEN-1
1140 SHIPS(0,CURRENTSHIP,I)=SHIP(I)
1150 NEXT I
1160 CALL RENDERSHIP((CURRENTSHIP),SHIP())
1170 NEXT CURRENTSHIP
1180 SUBEND
1190 REM SUBROUTINE ***DEPLOYCOMPUTER***
1200 SUB DEPLOYCOMPUTER(VISIBLE,SHIPS(,,))
1210 DIM SHIP(4) :: FOR I = 0 TO 4 :: SHIP(I)=0 :: NEXT I
1220 CALL GETNUMSHIPS(NUMSHIPS)
1230 CALL GETBOARDORIG(ROW,COL)
1240 CALL GETSHIPCHAR(SHIPCHAR)
1250 FOR CURRENTSHIP=0 TO NUMSHIPS-1
1260 REM LABEL ***DEPLOYCOMPSHIP***
1270 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
1280 HORIZONTAL=INT(RND*2)
1290 SHIPBEGIN=INT(RND*(10-SHIPLEN))+1
1300 STATIC=INT(RND*10)+1
1310 FOR I=0 TO SHIPLEN-1
1320 IF HORIZONTAL=1 THEN SHIP(I)=16*STATIC+SHIPBEGIN+I ELSE SHIP(I)=16*(SHIPBEGIN+I)+STATIC
1330 NEXT I
1340 PLAYER=1
1350 ERRVAL=0
1360 CALL CHECKOVERLAP(ERRVAL,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
1370 IF ERRVAL=1 THEN 1270 :: REM GOTO DEPLOYCOMPSHIP
1380 FOR I=0 TO SHIPLEN-1
1390 SHIPS(1,CURRENTSHIP,I)=SHIP(I)
1400 NEXT I
1410 REM VISIBLE=1 :: REM SHOW COMPUTER SHIPS FOR DEBUGGING
1420 IF VISIBLE=1 THEN CALL RENDERSHIP((CURRENTSHIP),SHIP())
1430 NEXT CURRENTSHIP
1440 SUBEND
1450 REM SUBROUTINE ***PLAYGAME***
1460 SUB PLAYGAME(SHIPS(,,))
1470 AUTOPLAY=0
1480 CALL MENUCLEAR
1490 CALL MENUTARGET
1500 DIM SHOTS(1,9,9) :: REM SHOTS[PLAYER, ROW,COL]
1510 FOR I=0 TO 9 :: FOR J=0 TO 9 :: SHOTS(0,I,J)=0 :: SHOTS(1,I,J)=0 :: NEXT J :: NEXT I
1520 DIM HITSLEFT(1,4) :: REM HITS[PLAYER,SHIP]
1530 CALL GETNUMSHIPS(NUMSHIPS)
1540 FOR I=0 TO NUMSHIPS-1
1550 CALL GETSHIPLEN(SHIPLEN,(I))
1560 HITSLEFT(0,I)=SHIPLEN :: HITSLEFT(1,I)=SHIPLEN
1570 NEXT I
1580 DIM SHIPSLEFT(1) :: REM SHIPSLEFT[PLAYER]
1590 SHIPSLEFT(0)=NUMSHIPS :: SHIPSLEFT(1)=NUMSHIPS
1600 DIM Q(11) :: FOR I=0 TO 10 :: Q(I)=-1 :: NEXT I :: QLEN=0
1610 WINNER=-1
1620 IF AUTOPLAY=1 THEN PLAYER=1 ELSE PLAYER=0
1630 REM LABEL ***TURNLOOP***
1640 IF PLAYER=0 THEN CALL PLAYERTURN(ROW,COL,SHOTS(,,))
1650 IF PLAYER=1 THEN CALL COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1660 SHOTS(PLAYER,ROW-1,COL-1)=1
1670 CALL PROCESSSHOT(WINNER,(ROW),(COL),(PLAYER),HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1680 IF WINNER=0 OR WINNER=1 THEN 1720 :: REM GOTO GAMEOVER
1690 IF AUTOPLAY=0 THEN PLAYER=1-PLAYER
1700 GOTO 1640 :: REM GOTO TURNLOOP
1710 REM LABEL ***GAMEOVER***
1720 PLAYAGAIN$="N"
1730 CALL MENUGAMEOVER(PLAYAGAIN$,(WINNER))
1740 IF PLAYAGAIN$="Y" THEN 1770 :: REM SUBEND
1750 CALL CLEAR
1760 END
1770 SUBEND
1780 REM SUBROUTINE ***PLAYERTURN***
1790 SUB PLAYERTURN(ROW,COL,SHOTS(,,))
1800 REM LABEL ***INPUTLOOP***
1810 CALL INPUTTARGET(ROW$,COL)
1820 ROW=ASC(ROW$)-64
1830 CALL CHECKVALIDSHOT(ERRVAL,(ROW),(COL),0,SHOTS(,,))
1840 IF ERRVAL=1 THEN 1810 :: REM GOTO INPUTLOOP
1850 SUBEND
1860 REM SUBROUTINE ***COMPUTERTURN***
1870 SUB COMPUTERTURN(ROW,COL,Q(),QLEN,SHOTS(,,))
1880 CALL GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
1890 CALL GETMENUORIG(MROW,MCOL)
1900 TEXT$=CHR$(64+ROW)&STR$(COL)
1910 CALL HCHAR(MROW+8,MCOL,32,10)
1920 CALL RENDERTEXT(TEXT$,(MROW+8),(MCOL))
1930 SUBEND
1940 REM SUBROUTINE ***PROCESSSHOT***
1950 SUB PROCESSSHOT(WINNER,ROW,COL,PLAYER,HITSLEFT(,),SHIPSLEFT(),SHIPS(,,),Q(),QLEN)
1960 WINNER=-1 :: HIT=0 :: SHIP=0
1970 LOC=16*ROW+COL
1980 CALL CHECKHIT(HIT,SHIP,(LOC),(1-PLAYER),SHIPS(,,))
1990 IF PLAYER=1 AND HIT=1 THEN Q(QLEN)=LOC :: QLEN=QLEN+1 
2000 CALL RENDERSHOT((PLAYER),(HIT),(ROW),(COL))
2010 IF HIT=0 THEN 2130 :: REM SUBEND
2020 HITSLEFT(1-PLAYER,SHIP)=HITSLEFT(1-PLAYER,SHIP)-1
2030 IF HITSLEFT(1-PLAYER,SHIP)>0 THEN 2130 :: REM SUBEND
2040 SHIPSLEFT(1-PLAYER)=SHIPSLEFT(1-PLAYER)-1
2050 CALL RENDERSUNK((1-PLAYER),(SHIP),SHIPS(,,))
2060 IF SHIPSLEFT(1-PLAYER)=0 THEN WINNER=PLAYER
2070 IF PLAYER=0 THEN 2130 :: REM SUBEND
2080 CALL GETSHIPLEN(SHIPLEN,(SHIP))
2090 FOR I=0 TO SHIPLEN-1
2100 SUNKLOC=SHIPS(0,SHIP,I)
2110 CALL QUEUEDEL(Q(),QLEN,(SUNKLOC),ERRVAL)
2120 NEXT I
2130 SUBEND
2140 REM SUBROUTINE ***GAMEAI***
2150 SUB GAMEAI(ROW,COL,Q(),QLEN,SHOTS(,,))
2160 REM LABEL ***AISTART***
2170 IF QLEN<=OLDQLEN THEN OFFSET=0
2180 IF QLEN=0 THEN GOSUB 2300 :: REM GOSUB EMPTYQUEUE
2190 IF QLEN=0 THEN GOTO 2250 :: REM GOTO VALIDATESHOT
2200 IF OFFSET=0 THEN GOSUB 2340 :: REM GOSUB OFFSETZERO
2210 OFFSET=OFFSET+1
2220 ROW=INT(Q(0)/16) :: COL=Q(0)-INT(Q(0)/16)*16
2230 ROW=ROW+OFFSET*RDIR :: COL=COL+OFFSET*CDIR
2240 REM LABEL ***VALIDATESHOT***
2250 CALL CHECKVALIDSHOT(ERRVAL,(ROW),(COL),1,SHOTS(,,))
2260 IF ERRVAL=1 THEN OFFSET=0 :: GOTO 2170 :: REM GOTO AISTART
2270 OLDQLEN=QLEN
2280 GOTO 2410 :: REM GOTO SUBEND
2290 REM GOSUB ***EMPTYQUEUE***
2300 ROW=INT(RND*10)+1 :: COL=INT(RND*10)+1
2310 RDIR=0 :: CDIR=0 :: REVERSED=0 :: OFFSET=0
2320 RETURN
2330 REM GOSUB ***OFFSETZERO***
2340 IF REVERSED=1 THEN TMP=RDIR :: RDIR=CDIR :: CDIR=TMP :: REVERSED=0 :: RETURN
2350 IF RDIR<>0 THEN RDIR=RDIR*-1:: REVERSED=1 :: RETURN
2360 IF CDIR<>0 THEN CDIR=CDIR*-1:: REVERSED=1 :: RETURN
2370 DIR=INT(RND*4)
2380 IF DIR=0 OR DIR=2 THEN CDIR=DIR-1 ELSE RDIR=DIR-2
2390 REVERSED=0
2400 RETURN
2410 SUBEND
2420 REM SUBROUTINE ***RENDERTEXT***
2430 SUB RENDERTEXT(TEXT$,ROW,COL)
2440 STRLEN=LEN(TEXT$)
2450 FOR I=0 TO STRLEN-1
2460 C$=SEG$(TEXT$,I+1,1)
2470 CALL HCHAR(ROW,COL+I,ASC(C$))
2480 NEXT I
2490 SUBEND
2500 REM SUBROUTINE ***RENDERBOARD***
2510 SUB RENDERBOARD
2520 CALL CLEAR
2530 CALL SCREEN(4)
2540 DISPLAY AT(1,9):"BATTLESHIP"
2550 CALL GETBOARDORIG(ROW,COL)
2560 CALL GETFILLCHAR(FILLCHAR)
2570 FOR I=0 TO 18
2580 CALL HCHAR(ROW+I,COL,FILLCHAR,19)
2590 NEXT I
2600 CALL GETBOARDORIG(ROW,COL)
2610 CALL GETTENCHAR(TENCHAR)
2620 REM RENDER X-AXIS (NUMBERS)
2630 FOR I=0 TO 8
2640 CALL HCHAR(ROW-2,I*2+COL,49+I,1)
2650 NEXT I
2660 CALL HCHAR(ROW-2,COL+18,TENCHAR,1)
2670 REM RENDER Y-AXIS (LETTERS)
2680 FOR I=1 TO 10
2690 CALL HCHAR(ROW-2+I*2,COL-2,64+I,1)
2700 NEXT I
2710 CALL RENDERHOLES
2720 SUBEND
2730 REM SUBROUTINE ***RENDERHOLES***
2740 SUB RENDERHOLES
2750 CALL GETBOARDORIG(ROW,COL)
2760 CALL GETHOLECHAR(HOLECHAR)
2770 FOR I=0 TO 18 STEP 2
2780 FOR J=0 TO 18 STEP 2
2790 CALL HCHAR(ROW+I,COL+J,HOLECHAR,1)
2800 NEXT J
2810 NEXT I
2820 SUBEND
2830 REM SUBROUTINE ***RENDERAUX***
2840 SUB RENDERAUX
2850 CALL GETAUXORIG(ROW,COL)
2860 CALL GETHOLECHAR(HOLECHAR)
2870 FOR I=0 TO 9
2880 CALL HCHAR(ROW+I,COL,HOLECHAR,10)
2890 NEXT I
2900 SUBEND
2910 REM SUBROUTINE ***RENDERSHIP***
2920 SUB RENDERSHIP(CURRENTSHIP,SHIP())
2930 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
2940 CALL GETSHIPCHAR(SHIPCHAR)
2950 CALL GETBOARDORIG(ROW,COL)
2960 FOR I=0 TO SHIPLEN-1
2970 ROFFSET=INT(SHIP(I)/16) :: COFFSET=SHIP(I)-INT(SHIP(I)/16)*16
2980 CALL HCHAR(ROW+(ROFFSET-1)*2,COL+(COFFSET-1)*2,SHIPCHAR,1)
2990 NEXT I
3000 SUBEND
3010 REM SUBROUTINE ***RENDERSHOT***
3020 SUB RENDERSHOT(PLAYER,HIT,SROW,SCOL)
3030 CALL GETMENUORIG(ROW,COL)
3040 IF PLAYER=0 THEN ROW=ROW+4 ELSE ROW=ROW+9
3050 IF HIT=0 THEN TEXT$="MISS" :: NOISE=-3 ELSE TEXT$="HIT" :: NOISE=-8
3060 CALL HCHAR(ROW,COL,32,10)
3070 CALL RENDERTEXT((TEXT$),(ROW),(COL))
3080 IF HIT=1 THEN CALL GETHITCHAR(CHARVAL) ELSE CALL GETMISSCHAR(CHARVAL)
3090 IF PLAYER=1 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3100 TROW=SROW-1 :: TCOL=SCOL-1
3110 IF PLAYER=0 THEN TROW=TROW*2 :: TCOL=TCOL*2
3120 CALL HCHAR(ROW+TROW,COL+TCOL,CHARVAL,1)
3130 CALL SOUND(500,NOISE,2) :: CALL SOUND(1,110,30)
3140 SUBEND
3150 REM SUBROUTINE ***RENDERSUNK***
3160 SUB RENDERSUNK(PLAYER,SHIP,SHIPS(,,))
3170 CALL GETSHIPLEN(SHIPLEN,(SHIP))
3180 IF PLAYER=0 THEN CALL GETAUXORIG(ROW,COL) ELSE CALL GETBOARDORIG(ROW,COL)
3190 CALL GETSUNKCHAR(SUNKCHAR)
3200 FOR I=0 TO SHIPLEN-1
3210 LOC=SHIPS(PLAYER,SHIP,I)
3220 TROW=INT(LOC/16)-1 :: TCOL=LOC-INT(LOC/16)*16-1
3230 IF PLAYER=1 THEN TROW=TROW*2 :: TCOL=TCOL*2
3240 CALL HCHAR(ROW+TROW,COL+TCOL,SUNKCHAR,1)
3250 NEXT I
3260 CALL GETSHIPNAME(SHIPNAME$,(SHIP))
3270 CALL GETMENUORIG(ROW,COL)
3280 IF PLAYER=1 THEN ROW=ROW+4 ELSE ROW=ROW+9
3290 CALL HCHAR(ROW,COL,32,10)
3300 CALL RENDERTEXT("DESTROYED",(ROW),(COL))
3310 CALL HCHAR(ROW,COL,32,10)
3320 CALL RENDERTEXT((SHIPNAME$),(ROW),(COL))
3330 CALL SOUND(1000,-6,2) :: CALL SOUND(1,110,30)
3340 SUBEND
3350 REM SUBROUTINE ***MENUCLEAR***
3360 SUB MENUCLEAR
3370 CALL GETMENUORIG(ROW,COL)
3380 FOR I=0 TO 9 :: CALL HCHAR(ROW+I,COL,32,10) :: NEXT I
3390 SUBEND
3400 REM SUBROUTINE ***MENUAUTODEPLOY***
3410 SUB MENUAUTODEPLOY(AUTODEPLOY$)
3420 CALL GETMENUORIG(ROW,COL)
3430 CALL MENUCLEAR
3440 CALL RENDERTEXT("AUTO",(ROW),(COL))
3450 CALL RENDERTEXT("DEPLOY",(ROW+1),(COL))
3460 CALL RENDERTEXT("YOUR",(ROW+2),(COL))
3470 CALL RENDERTEXT("SHIPS?",(ROW+3),(COL))
3480 CALL RENDERTEXT("[Y/N]:",(ROW+4),(COL))
3490 CALL SOUND(200,1398,0)
3500 AUTODEPLOY$=""
3510 CALL HCHAR(ROW+4,COL+6,30)
3520 REM LABEL ***ASKAUTO***
3530 CALL KEY(0,K,S)
3540 IF S=0 OR S=-1 THEN 3530 :: REM GOTO ASKAUTO
3550 IF K<>78 AND K<>89 THEN 3530 :: REM GOTO ASKAUTO
3560 CALL HCHAR(ROW+4,COL+6,K)
3570 AUTODEPLOY$=CHR$(K)
3580 SUBEND
3590 REM SUBROUTINE ***MENUDEPLOY***
3600 SUB MENUDEPLOY(CURRENTSHIP)
3610 CALL GETMENUORIG(ROW,COL)
3620 CALL RENDERTEXT("INPUT THE",(ROW),(COL))
3630 CALL RENDERTEXT("LOCATIONS",(ROW+1),(COL))
3640 CALL RENDERTEXT("FOR YOUR",(ROW+2),(COL))
3650 CALL RENDERTEXT("          ",(ROW+3),(COL))
3660 CALL GETSHIPNAME(SHIPNAME$,(CURRENTSHIP))
3670 CALL RENDERTEXT((SHIPNAME$),(ROW+3),(COL))
3680 CALL RENDERTEXT("[IE. C3]:",(ROW+4),(COL))
3690 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
3700 FOR I=1 TO 5
3710 IF I>SHIPLEN THEN TEXT$="        " ELSE TEXT$="POS"&STR$(I)&":    "
3720 CALL RENDERTEXT((TEXT$),(ROW+4+I),(COL))
3730 NEXT I
3740 SUBEND
3750 REM SUBROUTINE ***MENUTARGET***
3760 SUB MENUTARGET
3770 CALL GETMENUORIG(ROW,COL)
3780 CALL RENDERTEXT("PLAYER",(ROW),(COL))
3790 CALL RENDERTEXT("TARGET",(ROW+1),(COL))
3800 CALL RENDERTEXT("[IE. C3]",(ROW+2),(COL))
3810 CALL RENDERTEXT("COMPUTER",(ROW+6),(COL))
3820 CALL RENDERTEXT("TARGET",(ROW+7),(COL))
3830 SUBEND
3840 REM SUBROUTINE ***MENUGAMEOVER***
3850 SUB MENUGAMEOVER(PLAYAGAIN$,WINNER)
3860 CALL GETMENUORIG(ROW,COL)
3870 CALL MENUCLEAR
3880 CALL RENDERTEXT("GAME OVER",(ROW),(COL))
3890 CALL RENDERTEXT("WINNER:",(ROW+1),(COL))
3900 IF WINNER=0 THEN TEXT$="PLAYER" ELSE TEXT$="COMPUTER"
3910 CALL RENDERTEXT(TEXT$,(ROW+2),(COL))
3920 CALL RENDERTEXT("PLAY", (ROW+4),(COL))
3930 CALL RENDERTEXT("AGAIN?",(ROW+5),(COL))
3940 CALL RENDERTEXT("[Y/N]:",(ROW+6),(COL))
3950 CALL SOUND(200,1398,0)
3960 PLAYAGAIN$=""
3970 CALL HCHAR(ROW+6,COL+6,30)
3980 REM LABEL ***ASKPLAYAGAIN***
3990 CALL KEY(0,K,S)
4000 IF S=0 OR S=-1 THEN 3990 :: REM GOTO ASKPLAYAGAIN
4010 IF K<>78 AND K<>89 THEN 3990 :: REM GOTO ASKPLAYAGAIN
4020 CALL HCHAR(ROW+6,COL+6,K)
4030 PLAYAGAIN$=CHR$(K)
4040 SUBEND
4050 REM SUBROUTINE ***INPUTPOS***
4060 SUB INPUTPOS(ROW,COL,INPUTROW$,INPUTCOL)
4070 REM LABEL ***GETROW***
4080 CALL SOUND(200,1398,0)
4090 OFFSET=0
4100 INPUTROW$=""
4110 CALL HCHAR(ROW,COL+OFFSET,30)
4120 CALL KEY(0,K,S)
4130 IF S=0 OR S=-1 OR K<65 OR K>74 THEN 4090 :: REM GOTO GETROW
4140 CALL HCHAR (ROW,COL+OFFSET,K)
4150 INPUTROW$=CHR$(K)
4160 REM LABEL ***GETCOL1***
4170 OFFSET=1
4180 INPUTCOL=0
4190 CALL HCHAR(ROW,COL+OFFSET,30)
4200 CALL KEY(0,K,S)
4210 IF (S=0 OR S=-1) OR (K<>8 AND (K<49 OR K>57)) THEN 4170 :: REM GOTO GETCOL1
4220 IF K=8 THEN CALL HCHAR(ROW,COL+OFFSET,32) :: GOTO 4090 :: REM GOTO GETROW
4230 CALL HCHAR (ROW,COL+OFFSET,K)
4240 INPUTCOL=K-48
4250 REM LABEL ***GETCOL2***
4260 OFFSET=2
4270 CALL HCHAR(ROW,COL+OFFSET,30)
4280 CALL KEY(0,K,S)
4290 IF (S=0 OR S=-1) OR (K<>13 AND K<>8 AND K<>48) THEN 4260 :: REM GOTO GETCOL2
4300 CALL HCHAR(ROW,COL+OFFSET,32)
4310 IF K=8 THEN 4170 :: REM GOTO GETCOL1
4320 IF K=13 THEN 4430 :: REM GOTO INPUTPOS.SUBEND
4330 IF INPUTCOL>1 THEN 4260 :: REM GOTO GETCOL2
4340 CALL HCHAR(ROW,COL+OFFSET,K)
4350 REM LABEL ***GETCOL3***
4360 OFFSET=3
4370 CALL HCHAR(ROW,COL+OFFSET,30)
4380 CALL KEY(0,K,S)
4390 IF (S=0 OR S=-1) OR (K<>13 AND K<>8) THEN 4360 :: REM GOTO GETCOL3
4400 CALL HCHAR(ROW,COL+OFFSET,32)
4410 IF K=8 THEN 4260 :: REM GOTO GETCOL2
4420 INPUTCOL=10
4430 SUBEND
4440 REM SUBROUTINE ***INPUTSHIP***
4450 SUB INPUTSHIP(SHIP(),CURRENTSHIP)
4460 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4470 CALL GETMENUORIG(ROW,COL)
4480 FOR I=0 TO SHIPLEN-1
4490 INPUTROW$="" :: INPUTCOL=0
4500 CALL INPUTPOS((ROW+5+I),(COL+5),INPUTROW$,INPUTCOL)
4510 SHIP(I)=16*(ASC(INPUTROW$)-64)+INPUTCOL
4520 NEXT I
4530 SUBEND
4540 REM SUBROUTINE ***INPUTTARGET***
4550 SUB INPUTTARGET(TARGETROW$,TARGETCOL)
4560 CALL GETMENUORIG(ROW,COL)
4570 CALL HCHAR(ROW+3,COL,32,10)
4580 CALL INPUTPOS((ROW+3),(COL),TARGETROW$,TARGETCOL)
4590 SUBEND
4600 REM SUBROUTINE ***CHECKVALIDSHIP***
4610 SUB CHECKVALIDSHIP(ERRVAL,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
4620 ERRVAL=0
4630 HORIZONTAL=0
4640 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4650 CALL CHECKSTRAIGHT(ERRVAL,(CURRENTSHIP),SHIP())
4660 IF ERRVAL=1 THEN 4760 :: REM SUBEND
4670 CALL CHECKHORIZONTAL(HORIZONTAL,(CURRENTSHIP),SHIP())
4680 DIM SEQUENCE(4) :: FOR I=0 TO 4 :: SEQUENCE(I)=0 :: NEXT I
4690 FOR I=0 TO SHIPLEN-1
4700 ROW=INT(SHIP(I)/16) :: COL=SHIP(I)-INT(SHIP(I)/16)*16
4710 IF HORIZONTAL=1 THEN SEQUENCE(I)=COL ELSE SEQUENCE(I)=ROW
4720 NEXT I
4730 CALL CHECKSEQUENTIAL(ERRVAL,(CURRENTSHIP),SEQUENCE())
4740 IF ERRVAL=1 THEN 4760 :: REM SUBEND
4750 CALL CHECKOVERLAP(ERRVAL,(PLAYER),(CURRENTSHIP),SHIP(),SHIPS(,,))
4760 SUBEND
4770 REM SUBROUTINE ***CHECKVALIDSHOT***
4780 SUB CHECKVALIDSHOT(ERRVAL,ROW,COL,PLAYER,SHOTS(,,))
4790 ERRVAL=0
4800 IF ROW<1 OR ROW>10 OR COL<1 OR COL>10 THEN ERRVAL=1 :: GOTO 4820 :: REM GOTO SUBEND
4810 IF SHOTS(PLAYER,ROW-1,COL-1)<>0 THEN ERRVAL=1
4820 SUBEND
4830 REM SUBROUTINE ***CHECKHIT***
4840 SUB CHECKHIT(HIT,SHIP,LOC,PLAYER,SHIPS(,,))
4850 HIT=0
4860 CALL GETNUMSHIPS(NUMSHIPS)
4870 FOR I=0 TO NUMSHIPS-1
4880 CALL GETSHIPLEN(SHIPLEN,(I))
4890 FOR J=0 TO SHIPLEN-1
4900 IF SHIPS(PLAYER,I,J)=LOC THEN HIT=1 :: SHIP=I :: GOTO 4930 :: REM SUBEND
4910 NEXT J
4920 NEXT I
4930 SUBEND
4940 REM SUBROUTINE ***CHECKHORIZONTAL***
4950 SUB CHECKHORIZONTAL(HORIZONTAL,CURRENTSHIP,SHIP())
4960 HORIZONTAL=0
4970 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
4980 FOR I=1 TO SHIPLEN-1
4990 PREV=INT(SHIP(I-1)/16) :: CURR=INT(SHIP(I)/16)
5000 IF PREV<>CURR THEN 5030 :: REM SUBEND
5010 NEXT I
5020 HORIZONTAL=1
5030 SUBEND
5040 REM SUBROUTINE ***CHECKSTRAIGHT***
5050 SUB CHECKSTRAIGHT(ERRVAL,CURRENTSHIP,SHIP())
5060 ERRVAL=0
5070 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
5080 FOR I=1 TO SHIPLEN-1
5090 ROW=INT(SHIP(I)/16) :: COL=SHIP(I)-INT(SHIP(I)/16)*16
5100 PROW=INT(SHIP(I-1)/16) ::PCOL=SHIP(I-1)-INT(SHIP(I-1)/16)*16
5110 IF (ROW<>PROW) AND (COL<>PCOL) THEN ERRVAL=1 :: GOTO 5130 :: REM SUBEND
5120 NEXT I
5130 SUBEND
5140 REM SUBROUTINE ***CHECKSEQUENTIAL***
5150 SUB CHECKSEQUENTIAL(ERRVAL,CURRENTSHIP,SEQUENCE())
5160 ERRVAL=0
5170 CALL GETSHIPLEN(SHIPLEN,(CURRENTSHIP))
5180 MINCOORD=SEQUENCE(0)
5190 FOR I=1 TO SHIPLEN-1
5200 MINCOORD=MIN(MINCOORD,SEQUENCE(I))
5210 NEXT I
5220 EXPSUM=MINCOORD
5230 FOR I=1 TO SHIPLEN-1
5240 EXPSUM=EXPSUM+MINCOORD+I
5250 NEXT I
5260 ACTSUM=SEQUENCE(0)
5270 FOR I=1 TO SHIPLEN-1
5280 ACTSUM=ACTSUM+SEQUENCE(I)
5290 NEXT I
5300 IF EXPSUM<>ACTSUM THEN ERRVAL=1
5310 SUBEND
5320 REM SUBROUTINE ***CHECKOVERLAP***
5330 SUB CHECKOVERLAP(ERRVAL,PLAYER,CURRENTSHIP,SHIP(),SHIPS(,,))
5340 ERRVAL=0
5350 CALL GETSHIPLEN(CURRENTSHIPLEN,(CURRENTSHIP))
5360 FOR I=0 TO CURRENTSHIP-1
5370 CALL GETSHIPLEN(SHIPLEN,(I))
5380 FOR J=0 TO SHIPLEN-1
5390 STOREDLOC=SHIPS(PLAYER,I,J)
5400 FOR K=0 TO CURRENTSHIPLEN-1
5410 LOC=SHIP(K)
5420 IF LOC=STOREDLOC THEN ERRVAL=1 :: GOTO 5460 :: REM SUBEND
5430 NEXT K
5440 NEXT J
5450 NEXT I
5460 SUBEND
5470 REM SUBROUTINE ***QUEUEDEL***
5480 SUB QUEUEDEL(Q(),QLEN,VALUE,ERRVAL)
5490 DINDEX=-1 :: ERRVAL=-1
5500 FOR I=0 TO QLEN
5510 IF VALUE=Q(I) THEN DINDEX=I :: GOTO 5550 :: REM GOTO CONTRACT
5520 NEXT I
5530 GOTO 5590 :: REM SUBEND
5540 REM LABEL ***CONTRACT***
5550 FOR I=DINDEX TO QLEN-1
5560 Q(I)=Q(I+1)
5570 NEXT I
5580 QLEN=QLEN-1 :: ERRVAL=0
5590 SUBEND
5600 REM SUBROUTINE ***GETHOLECHAR***
5610 SUB GETHOLECHAR(CHARVAL)
5620 CHARVAL=96
5630 SUBEND
5640 REM SUBROUTINE ***GETFILLCHAR***
5650 SUB GETFILLCHAR(CHARVAL)
5660 CHARVAL=97
5670 SUBEND
5680 REM SUBROUTINE ***GETHITCHAR***
5690 SUB GETHITCHAR(CHARVAL)
5700 CHARVAL=104
5710 SUBEND
5720 REM SUBROUTINE ***GETSHIPCHAR***
5730 SUB GETSHIPCHAR(CHARVAL)
5740 CHARVAL=112
5750 SUBEND
5760 REM SUBROUTINE ***GETTENCHAR***
5770 SUB GETTENCHAR(CHARVAL)
5780 CHARVAL=120
5790 SUBEND
5800 REM SUBROUTINE ***GETMISSCHAR***
5810 SUB GETMISSCHAR(CHARVAL)
5820 CHARVAL=128
5830 SUBEND
5840 REM SUBROUTINE ***GETSUNKCHAR***
5850 SUB GETSUNKCHAR(CHARVAL)
5860 CHARVAL=136
5870 SUBEND
5880 REM SUBROUTINE ***GETNUMSHIPS***
5890 SUB GETNUMSHIPS(NUMSHIPS)
5900 NUMSHIPS=5
5910 SUBEND
5920 REM SUBROUTINE ***GETSHIPLEN***
5930 SUB GETSHIPLEN(SHIPLEN,INDEX)
5940 SHIPLENS(0)=5 :: SHIPLENS(1)=4 :: SHIPLENS(2)=3 :: SHIPLENS(3)=3 :: SHIPLENS(4)=2 
5950 SHIPLEN=SHIPLENS(INDEX)
5960 SUBEND
5970 REM SUBROUTINE ***GETSHIPNAME***
5980 SUB GETSHIPNAME(SHIPNAME$,INDEX)
5990 SHIPNAMES$(0)="CARRIER" :: SHIPNAMES$(1)="BATTLESHIP" :: SHIPNAMES$(2)="CRUISER" :: SHIPNAMES$(3)="SUBMARINE" :: SHIPNAMES$(4)="DESTROYER"
6000 SHIPNAME$=SHIPNAMES$(INDEX)
6010 SUBEND
6020 REM SUBROUTINE ***GETBOARDORIG***
6030 SUB GETBOARDORIG(ROW,COL)
6040 ROW=5 :: COL=3
6050 SUBEND
6060 REM SUBROUTINE ***GETAUXORIG***
6070 SUB GETAUXORIG(ROW,COL)
6080 ROW=3 :: COL=23
6090 SUBEND
6100 REM SUBROUTINE ***GETMENUORIG***
6110 SUB GETMENUORIG(ROW,COL)
6120 ROW=14 :: COL=23
6130 SUBEND